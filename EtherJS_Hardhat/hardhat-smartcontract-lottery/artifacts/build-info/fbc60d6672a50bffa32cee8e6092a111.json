{"id":"fbc60d6672a50bffa32cee8e6092a111","_format":"hh-sol-build-info-1","solcVersion":"0.8.18","solcLongVersion":"0.8.18+commit.87f61d96","input":{"language":"Solidity","sources":{"@chainlink/contracts/src/v0.8/ConfirmedOwner.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./ConfirmedOwnerWithProposal.sol\";\n\n/**\n * @title The ConfirmedOwner contract\n * @notice A contract with helpers for basic contract ownership.\n */\ncontract ConfirmedOwner is ConfirmedOwnerWithProposal {\n  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {}\n}\n"},"@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./interfaces/OwnableInterface.sol\";\n\n/**\n * @title The ConfirmedOwner contract\n * @notice A contract with helpers for basic contract ownership.\n */\ncontract ConfirmedOwnerWithProposal is OwnableInterface {\n  address private s_owner;\n  address private s_pendingOwner;\n\n  event OwnershipTransferRequested(address indexed from, address indexed to);\n  event OwnershipTransferred(address indexed from, address indexed to);\n\n  constructor(address newOwner, address pendingOwner) {\n    require(newOwner != address(0), \"Cannot set owner to zero\");\n\n    s_owner = newOwner;\n    if (pendingOwner != address(0)) {\n      _transferOwnership(pendingOwner);\n    }\n  }\n\n  /**\n   * @notice Allows an owner to begin transferring ownership to a new address,\n   * pending.\n   */\n  function transferOwnership(address to) public override onlyOwner {\n    _transferOwnership(to);\n  }\n\n  /**\n   * @notice Allows an ownership transfer to be completed by the recipient.\n   */\n  function acceptOwnership() external override {\n    require(msg.sender == s_pendingOwner, \"Must be proposed owner\");\n\n    address oldOwner = s_owner;\n    s_owner = msg.sender;\n    s_pendingOwner = address(0);\n\n    emit OwnershipTransferred(oldOwner, msg.sender);\n  }\n\n  /**\n   * @notice Get the current owner\n   */\n  function owner() public view override returns (address) {\n    return s_owner;\n  }\n\n  /**\n   * @notice validate, transfer ownership, and emit relevant events\n   */\n  function _transferOwnership(address to) private {\n    require(to != msg.sender, \"Cannot transfer to self\");\n\n    s_pendingOwner = to;\n\n    emit OwnershipTransferRequested(s_owner, to);\n  }\n\n  /**\n   * @notice validate access\n   */\n  function _validateOwnership() internal view {\n    require(msg.sender == s_owner, \"Only callable by owner\");\n  }\n\n  /**\n   * @notice Reverts if called by anyone other than the contract owner.\n   */\n  modifier onlyOwner() {\n    _validateOwnership();\n    _;\n  }\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AutomationCompatibleInterface {\n  /**\n   * @notice method that is simulated by the keepers to see if any work actually\n   * needs to be performed. This method does does not actually need to be\n   * executable, and since it is only ever simulated it can consume lots of gas.\n   * @dev To ensure that it is never called, you may want to add the\n   * cannotExecute modifier from KeeperBase to your implementation of this\n   * method.\n   * @param checkData specified in the upkeep registration so it is always the\n   * same for a registered upkeep. This can easily be broken down into specific\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\n   * same contract and easily differentiated by the contract.\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\n   * performUpkeep or not.\n   * @return performData bytes that the keeper should call performUpkeep with, if\n   * upkeep is needed. If you would like to encode data to decode later, try\n   * `abi.encode`.\n   */\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\n\n  /**\n   * @notice method that is actually executed by the keepers, via the registry.\n   * The data returned by the checkUpkeep simulation will be passed into\n   * this method to actually be executed.\n   * @dev The input to this method should not be trusted, and the caller of the\n   * method should not even be restricted to any single registry. Anyone should\n   * be able call it, and the input should be validated, there is no guarantee\n   * that the data passed in is the performData returned from checkUpkeep. This\n   * could happen due to malicious keepers, racing keepers, or simply a state\n   * change while the performUpkeep transaction is waiting for confirmation.\n   * Always validate the data passed in.\n   * @param performData is the data which was passed back from the checkData\n   * simulation. If it is encoded, it can easily be decoded into other types by\n   * calling `abi.decode`. This data should not be trusted, and should be\n   * validated against the contract's current state.\n   */\n  function performUpkeep(bytes calldata performData) external;\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol":{"content":"// SPDX-License-Identifier: MIT\n/**\n * @notice This is a deprecated interface. Please use AutomationCompatibleInterface directly.\n */\npragma solidity ^0.8.0;\nimport {AutomationCompatibleInterface as KeeperCompatibleInterface} from \"./AutomationCompatibleInterface.sol\";\n"},"@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface OwnableInterface {\n  function owner() external returns (address);\n\n  function transferOwnership(address recipient) external;\n\n  function acceptOwnership() external;\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface VRFCoordinatorV2Interface {\n  /**\n   * @notice Get configuration relevant for making requests\n   * @return minimumRequestConfirmations global min for request confirmations\n   * @return maxGasLimit global max for request gas limit\n   * @return s_provingKeyHashes list of registered key hashes\n   */\n  function getRequestConfig()\n    external\n    view\n    returns (\n      uint16,\n      uint32,\n      bytes32[] memory\n    );\n\n  /**\n   * @notice Request a set of random words.\n   * @param keyHash - Corresponds to a particular oracle job which uses\n   * that key for generating the VRF proof. Different keyHash's have different gas price\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\n   * @param subId  - The ID of the VRF subscription. Must be funded\n   * with the minimum subscription balance required for the selected keyHash.\n   * @param minimumRequestConfirmations - How many blocks you'd like the\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n   * for why you may want to request more. The acceptable range is\n   * [minimumRequestBlockConfirmations, 200].\n   * @param callbackGasLimit - How much gas you'd like to receive in your\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n   * may be slightly less than this amount because of gas used calling the function\n   * (argument decoding etc.), so you may need to request slightly more than you expect\n   * to have inside fulfillRandomWords. The acceptable range is\n   * [0, maxGasLimit]\n   * @param numWords - The number of uint256 random values you'd like to receive\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\n   * @return requestId - A unique identifier of the request. Can be used to match\n   * a request to a response in fulfillRandomWords.\n   */\n  function requestRandomWords(\n    bytes32 keyHash,\n    uint64 subId,\n    uint16 minimumRequestConfirmations,\n    uint32 callbackGasLimit,\n    uint32 numWords\n  ) external returns (uint256 requestId);\n\n  /**\n   * @notice Create a VRF subscription.\n   * @return subId - A unique subscription id.\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n   * @dev Note to fund the subscription, use transferAndCall. For example\n   * @dev  LINKTOKEN.transferAndCall(\n   * @dev    address(COORDINATOR),\n   * @dev    amount,\n   * @dev    abi.encode(subId));\n   */\n  function createSubscription() external returns (uint64 subId);\n\n  /**\n   * @notice Get a VRF subscription.\n   * @param subId - ID of the subscription\n   * @return balance - LINK balance of the subscription in juels.\n   * @return reqCount - number of requests for this subscription, determines fee tier.\n   * @return owner - owner of the subscription.\n   * @return consumers - list of consumer address which are able to use this subscription.\n   */\n  function getSubscription(uint64 subId)\n    external\n    view\n    returns (\n      uint96 balance,\n      uint64 reqCount,\n      address owner,\n      address[] memory consumers\n    );\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @param newOwner - proposed new owner of the subscription\n   */\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @dev will revert if original owner of subId has\n   * not requested that msg.sender become the new owner.\n   */\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\n\n  /**\n   * @notice Add a consumer to a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - New consumer which can use the subscription\n   */\n  function addConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Remove a consumer from a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - Consumer to remove from the subscription\n   */\n  function removeConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Cancel a subscription\n   * @param subId - ID of the subscription\n   * @param to - Where to send the remaining LINK to\n   */\n  function cancelSubscription(uint64 subId, address to) external;\n\n  /*\n   * @notice Check to see if there exists a request commitment consumers\n   * for all consumers and keyhashes for a given sub.\n   * @param subId - ID of the subscription\n   * @return true if there exists at least one unfulfilled request for the subscription, false\n   * otherwise.\n   */\n  function pendingRequestExists(uint64 subId) external view returns (bool);\n}\n"},"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/** ****************************************************************************\n * @notice Interface for contracts using VRF randomness\n * *****************************************************************************\n * @dev PURPOSE\n *\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\n * @dev making his output up to suit himself. Reggie provides Vera a public key\n * @dev to which he knows the secret key. Each time Vera provides a seed to\n * @dev Reggie, he gives back a value which is computed completely\n * @dev deterministically from the seed and the secret key.\n *\n * @dev Reggie provides a proof by which Vera can verify that the output was\n * @dev correctly computed once Reggie tells it to her, but without that proof,\n * @dev the output is indistinguishable to her from a uniform random sample\n * @dev from the output space.\n *\n * @dev The purpose of this contract is to make it easy for unrelated contracts\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\n * @dev 1. The fulfillment came from the VRFCoordinator\n * @dev 2. The consumer contract implements fulfillRandomWords.\n * *****************************************************************************\n * @dev USAGE\n *\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\n * @dev initialize VRFConsumerBase's attributes in their constructor as\n * @dev shown:\n *\n * @dev   contract VRFConsumer {\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\n * @dev         <initialization with other arguments goes here>\n * @dev       }\n * @dev   }\n *\n * @dev The oracle will have given you an ID for the VRF keypair they have\n * @dev committed to (let's call it keyHash). Create subscription, fund it\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n * @dev subscription management functions).\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n * @dev callbackGasLimit, numWords),\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\n *\n * @dev Once the VRFCoordinator has received and validated the oracle's response\n * @dev to your request, it will call your contract's fulfillRandomWords method.\n *\n * @dev The randomness argument to fulfillRandomWords is a set of random words\n * @dev generated from your requestId and the blockHash of the request.\n *\n * @dev If your contract could have concurrent requests open, you can use the\n * @dev requestId returned from requestRandomWords to track which response is associated\n * @dev with which randomness request.\n * @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n * @dev if your contract could have multiple requests in flight simultaneously.\n *\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n * @dev differ.\n *\n * *****************************************************************************\n * @dev SECURITY CONSIDERATIONS\n *\n * @dev A method with the ability to call your fulfillRandomness method directly\n * @dev could spoof a VRF response with any random value, so it's critical that\n * @dev it cannot be directly called by anything other than this base contract\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n *\n * @dev For your users to trust that your contract's random behavior is free\n * @dev from malicious interference, it's best if you can write it so that all\n * @dev behaviors implied by a VRF response are executed *during* your\n * @dev fulfillRandomness method. If your contract must store the response (or\n * @dev anything derived from it) and use it later, you must ensure that any\n * @dev user-significant behavior which depends on that stored value cannot be\n * @dev manipulated by a subsequent VRF request.\n *\n * @dev Similarly, both miners and the VRF oracle itself have some influence\n * @dev over the order in which VRF responses appear on the blockchain, so if\n * @dev your contract could have multiple VRF requests in flight simultaneously,\n * @dev you must ensure that the order in which the VRF responses arrive cannot\n * @dev be used to manipulate your contract's user-significant behavior.\n *\n * @dev Since the block hash of the block which contains the requestRandomness\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n * @dev miner could, in principle, fork the blockchain to evict the block\n * @dev containing the request, forcing the request to be included in a\n * @dev different block with a different hash, and therefore a different input\n * @dev to the VRF. However, such an attack would incur a substantial economic\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\n * @dev until it calls responds to a request. It is for this reason that\n * @dev that you can signal to an oracle you'd like them to wait longer before\n * @dev responding to the request (however this is not enforced in the contract\n * @dev and so remains effective only in the case of unmodified oracle software).\n */\nabstract contract VRFConsumerBaseV2 {\n  error OnlyCoordinatorCanFulfill(address have, address want);\n  address private immutable vrfCoordinator;\n\n  /**\n   * @param _vrfCoordinator address of VRFCoordinator contract\n   */\n  constructor(address _vrfCoordinator) {\n    vrfCoordinator = _vrfCoordinator;\n  }\n\n  /**\n   * @notice fulfillRandomness handles the VRF response. Your contract must\n   * @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n   * @notice principles to keep in mind when implementing your fulfillRandomness\n   * @notice method.\n   *\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n   * @dev signature, and will call it once it has verified the proof\n   * @dev associated with the randomness. (It is triggered via a call to\n   * @dev rawFulfillRandomness, below.)\n   *\n   * @param requestId The Id initially returned by requestRandomness\n   * @param randomWords the VRF output expanded to the requested number of words\n   */\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\n\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\n  // the origin of the call\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\n    if (msg.sender != vrfCoordinator) {\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\n    }\n    fulfillRandomWords(requestId, randomWords);\n  }\n}\n"},"contracts/Raffle.sol":{"content":"// Raffle\n\n// Enter the lottery ( pay some amount)\n// Pick a random winnder (verifiably random) \n\n//winer to be selected every X mins -> completed automated.abi\n// Chainlink Oracle -> randomess, Automated Execution (chainlink keeper)\n\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\nimport \"@chainlink/contracts/src/v0.8/ConfirmedOwner.sol\";\nimport \"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\"; //We using the subscription method, not direct funding\nimport \"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\";\n\nerror Raffle__NotEnoughETHEntered();\nerror Raffle__TransferFailed();\nerror Raffle__NotOpen();\nerror Raffle__UpKeepNotNeeded(uint256 currentBalance, uint256 numPlayers , uint256 raffleState);\n\ncontract Raffle is VRFConsumerBaseV2, KeeperCompatibleInterface {\n    /* Type declarations */\n    enum RaffleState {\n        OPEN,\n        CALCULATING\n    } // same as (uint256 0 = OPEN, 1 = CALCULATING), but this is being more explicit\n\n    /* State Variable */\n    uint256 private immutable i_entranceFee;\n    address payable[] private s_players;\n    VRFCoordinatorV2Interface private immutable i_vrfCoordinator;\n    bytes32 private immutable i_gasLane;\n    uint64 private immutable i_subscriptionId;\n    uint16 private constant REQUEST_CONFIRMATIONS = 3;\n    uint32 private immutable i_callbackGasLimit;\n    uint32 private immutable NUM_WORDS = 1;\n    \n\n    // Lottery Variables\n    address private s_recentWinner;\n    // uint256 private s_state; // 1 = pending, 2 = open, 3 = closed, 4 = calculating (while u can do this, it is better to use enums.)\n    RaffleState private s_raffleState; // using the enum's method, to create new \"TYPE\"\n    uint256 private s_lastTimeStamp;\n    uint256 private immutable i_interval;\n\n    /* Events */\n    event RaffleEnter(address indexed player);\n    event RequestedRaffleWinner(uint256 indexed requestId);\n    event WinnerPicked(address indexed winner);\n\n\n    constructor (\n        address vrfCoordinatorV2, \n        uint256 entranceFee, \n        bytes32 gasLane, \n        uint64 subscriptionId, \n        uint32 callbackGasLimit,\n        uint256 interval\n    ) VRFConsumerBaseV2(vrfCoordinatorV2) {\n        i_entranceFee = entranceFee;\n        i_vrfCoordinator = VRFCoordinatorV2Interface(vrfCoordinatorV2);\n        i_gasLane = gasLane;\n        i_subscriptionId = subscriptionId;\n        i_callbackGasLimit = callbackGasLimit;\n        s_raffleState = RaffleState.OPEN; // or u can also do  s_raffleState = RaffleState(0);\n        s_lastTimeStamp = block.timestamp;\n        i_interval = interval;\n    }\n\n    function enterRaffle() public payable {\n        // require (msg.value > i_entranceFee, \"Not enough ETH!\") //Not as GAS efficient, because there is \"string\"\n        if(msg.value < i_entranceFee){revert Raffle__NotEnoughETHEntered();} //More GAS efficient\n        if(s_raffleState != RaffleState.OPEN){revert Raffle__NotOpen();}\n        s_players.push(payable (msg.sender));\n        // EVENTS (whenever we update a dynamic object like arrays or mapping, we always want to emit an event. )\n        // Named events with function name reverse.\n        emit RaffleEnter(msg.sender);\n\n    }\n\n    /// @dev This is the function that the Chainlink Keeper nodes call\n    /// They look for the`upkeepNeeded` to return true.\n    /// The following should be true in order to return true.\n    /// 1. Our time internal should have passed\n    /// 2. The lottery should have at least 1 player, and have some ETH\n    /// 3. Our subscription is funded with LINK\n    /// 4. Lottery should be in an *open* state, and when it is requesting for a random number, it should be a *closed/calculating* state, to prevent people from joining during that time.\n    function checkUpkeep(\n        bytes memory /*checkData*/  //In this case we don't need to use any Data, but the input parameter of type bytes make it very flexible such that u can even input and call other functions()\n        ) public override returns (bool upkeepNeeded , bytes memory /*performData */) {\n            bool isOpen = (RaffleState.OPEN == s_raffleState);\n            bool timePassed = (block.timestamp - s_lastTimeStamp) > i_interval;// (block.timestamp - last block timestamp) > interval\n            bool hasPlayers = (s_players.length > 0);\n            bool hasBalance = address(this).balance > 0;\n            upkeepNeeded = (isOpen && timePassed && hasPlayers && hasBalance); // if all true, then request a random number.\n        }\n\n    // use Chainlink VRF & also Chainlink Keepers.\n    function performUpkeep(bytes calldata /*performData*/)  external override {\n        //request RND number\n        // Once we get it, do something with it\n        // 2 transaction process\n        // Will revert if subscription is not set and funded.\n        (bool upkeepNeeded, ) = checkUpkeep(\"\");\n        if (!upkeepNeeded) {\n            revert Raffle__UpKeepNotNeeded(address(this).balance, s_players.length, uint256(s_raffleState));\n        }\n        s_raffleState = RaffleState.CALCULATING;\n        uint256 requestId = i_vrfCoordinator.requestRandomWords( // we call the requestRandomWords() method from the interface.\n            i_gasLane, // keyHash aka gasLane, thhe maximum gas price u willing to pay for a request in wei.\n            i_subscriptionId,\n            REQUEST_CONFIRMATIONS,\n            i_callbackGasLimit,\n            NUM_WORDS // how many random numbers we want to get\n        );\n        emit RequestedRaffleWinner(requestId);\n    }\n\n    function fulfillRandomWords(uint256 /*requestId*/,  uint256[] memory randomWords) internal override {\n        // use Modulo to get random number in array of dynamic size \"x\"\n        uint256 indexOfWinner = randomWords[0] % s_players.length;\n        address payable recentWinner = s_players[indexOfWinner];\n        s_recentWinner = recentWinner;\n        s_raffleState = RaffleState.OPEN; // after calculating, open it back\n        s_players = new address payable[](0); // After calculating, reset the player's array.\n        s_lastTimeStamp = block.timestamp;\n        // now that we have the address of the winner, now we need to send them the money.\n        (bool success, ) = recentWinner.call{value: address(this).balance}(\"\");\n        //require(success)\n        if(!success) {\n            revert Raffle__TransferFailed();\n        }\n        emit WinnerPicked(recentWinner);\n    }\n\n    /* view / pure functions */\n    function getEntranceFee() public view returns (uint256){\n        return i_entranceFee;\n    }\n\n    function getPlayer(uint256 index) public view returns(address){\n        return s_players[index];\n    }\n\n    function getRecentWinner() public view returns(address) {\n        return s_recentWinner;\n    }\n\n    function getRaffleState() public view returns(RaffleState) {\n        return s_raffleState;\n    }\n\n    function getNumWords() public view returns(uint256) {\n        return NUM_WORDS;\n    }\n}"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"6321","formattedMessage":"Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n  --> contracts/Raffle.sol:91:56:\n   |\n91 |         ) public override returns (bool upkeepNeeded , bytes memory /*performData */) {\n   |                                                        ^^^^^^^^^^^^\n\n","message":"Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.","severity":"warning","sourceLocation":{"end":4089,"file":"contracts/Raffle.sol","start":4077},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to view\n  --> contracts/Raffle.sol:89:5:\n   |\n89 |     function checkUpkeep(\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to view","severity":"warning","sourceLocation":{"end":4552,"file":"contracts/Raffle.sol","start":3804},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to pure\n   --> contracts/Raffle.sol:154:5:\n    |\n154 |     function getNumWords() public view returns(uint256) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to pure","severity":"warning","sourceLocation":{"end":6982,"file":"contracts/Raffle.sol","start":6897},"type":"Warning"}],"sources":{"@chainlink/contracts/src/v0.8/ConfirmedOwner.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/ConfirmedOwner.sol","exportedSymbols":{"ConfirmedOwner":[19],"ConfirmedOwnerWithProposal":[181],"OwnableInterface":[278]},"id":20,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:0"},{"absolutePath":"@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol","file":"./ConfirmedOwnerWithProposal.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":20,"sourceUnit":182,"src":"57:42:0","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4,"name":"ConfirmedOwnerWithProposal","nameLocations":["239:26:0"],"nodeType":"IdentifierPath","referencedDeclaration":181,"src":"239:26:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"239:26:0"}],"canonicalName":"ConfirmedOwner","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"101:110:0","text":" @title The ConfirmedOwner contract\n @notice A contract with helpers for basic contract ownership."},"fullyImplemented":true,"id":19,"linearizedBaseContracts":[19,181,278],"name":"ConfirmedOwner","nameLocation":"221:14:0","nodeType":"ContractDefinition","nodes":[{"body":{"id":17,"nodeType":"Block","src":"349:2:0","statements":[]},"id":18,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":10,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"327:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":13,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"345:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":12,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"337:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":11,"name":"address","nodeType":"ElementaryTypeName","src":"337:7:0","typeDescriptions":{}}},"id":14,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"337:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":15,"kind":"baseConstructorSpecifier","modifierName":{"id":9,"name":"ConfirmedOwnerWithProposal","nameLocations":["300:26:0"],"nodeType":"IdentifierPath","referencedDeclaration":181,"src":"300:26:0"},"nodeType":"ModifierInvocation","src":"300:48:0"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7,"mutability":"mutable","name":"newOwner","nameLocation":"290:8:0","nodeType":"VariableDeclaration","scope":18,"src":"282:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"282:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"281:18:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"349:0:0"},"scope":19,"src":"270:81:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":20,"src":"212:141:0","usedErrors":[]}],"src":"32:322:0"},"id":0},"@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol","exportedSymbols":{"ConfirmedOwnerWithProposal":[181],"OwnableInterface":[278]},"id":182,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":21,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:1"},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol","file":"./interfaces/OwnableInterface.sol","id":22,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":182,"sourceUnit":279,"src":"57:43:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":24,"name":"OwnableInterface","nameLocations":["252:16:1"],"nodeType":"IdentifierPath","referencedDeclaration":278,"src":"252:16:1"},"id":25,"nodeType":"InheritanceSpecifier","src":"252:16:1"}],"canonicalName":"ConfirmedOwnerWithProposal","contractDependencies":[],"contractKind":"contract","documentation":{"id":23,"nodeType":"StructuredDocumentation","src":"102:110:1","text":" @title The ConfirmedOwner contract\n @notice A contract with helpers for basic contract ownership."},"fullyImplemented":true,"id":181,"linearizedBaseContracts":[181,278],"name":"ConfirmedOwnerWithProposal","nameLocation":"222:26:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":27,"mutability":"mutable","name":"s_owner","nameLocation":"289:7:1","nodeType":"VariableDeclaration","scope":181,"src":"273:23:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"273:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":29,"mutability":"mutable","name":"s_pendingOwner","nameLocation":"316:14:1","nodeType":"VariableDeclaration","scope":181,"src":"300:30:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28,"name":"address","nodeType":"ElementaryTypeName","src":"300:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"ed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278","id":35,"name":"OwnershipTransferRequested","nameLocation":"341:26:1","nodeType":"EventDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"384:4:1","nodeType":"VariableDeclaration","scope":35,"src":"368:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":30,"name":"address","nodeType":"ElementaryTypeName","src":"368:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":33,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"406:2:1","nodeType":"VariableDeclaration","scope":35,"src":"390:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"390:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"367:42:1"},"src":"335:75:1"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":41,"name":"OwnershipTransferred","nameLocation":"419:20:1","nodeType":"EventDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"456:4:1","nodeType":"VariableDeclaration","scope":41,"src":"440:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"440:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"478:2:1","nodeType":"VariableDeclaration","scope":41,"src":"462:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"462:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"439:42:1"},"src":"413:69:1"},{"body":{"id":74,"nodeType":"Block","src":"538:179:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":49,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"552:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":52,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"572:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":51,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"564:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":50,"name":"address","nodeType":"ElementaryTypeName","src":"564:7:1","typeDescriptions":{}}},"id":53,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"564:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"552:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f7420736574206f776e657220746f207a65726f","id":55,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"576:26:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","typeString":"literal_string \"Cannot set owner to zero\""},"value":"Cannot set owner to zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","typeString":"literal_string \"Cannot set owner to zero\""}],"id":48,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"544:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"544:59:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":57,"nodeType":"ExpressionStatement","src":"544:59:1"},{"expression":{"id":60,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":58,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"610:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":59,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"620:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"610:18:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":61,"nodeType":"ExpressionStatement","src":"610:18:1"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":67,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":62,"name":"pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45,"src":"638:12:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":65,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"662:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":64,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"654:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":63,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:1","typeDescriptions":{}}},"id":66,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"654:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"638:26:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":73,"nodeType":"IfStatement","src":"634:79:1","trueBody":{"id":72,"nodeType":"Block","src":"666:47:1","statements":[{"expression":{"arguments":[{"id":69,"name":"pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45,"src":"693:12:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":68,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"674:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":70,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"674:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":71,"nodeType":"ExpressionStatement","src":"674:32:1"}]}}]},"id":75,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43,"mutability":"mutable","name":"newOwner","nameLocation":"506:8:1","nodeType":"VariableDeclaration","scope":75,"src":"498:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":42,"name":"address","nodeType":"ElementaryTypeName","src":"498:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":45,"mutability":"mutable","name":"pendingOwner","nameLocation":"524:12:1","nodeType":"VariableDeclaration","scope":75,"src":"516:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":44,"name":"address","nodeType":"ElementaryTypeName","src":"516:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"497:40:1"},"returnParameters":{"id":47,"nodeType":"ParameterList","parameters":[],"src":"538:0:1"},"scope":181,"src":"486:231:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[274],"body":{"id":88,"nodeType":"Block","src":"891:33:1","statements":[{"expression":{"arguments":[{"id":85,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":78,"src":"916:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":84,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"897:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":86,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"897:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":87,"nodeType":"ExpressionStatement","src":"897:22:1"}]},"documentation":{"id":76,"nodeType":"StructuredDocumentation","src":"721:102:1","text":" @notice Allows an owner to begin transferring ownership to a new address,\n pending."},"functionSelector":"f2fde38b","id":89,"implemented":true,"kind":"function","modifiers":[{"id":82,"kind":"modifierInvocation","modifierName":{"id":81,"name":"onlyOwner","nameLocations":["881:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":180,"src":"881:9:1"},"nodeType":"ModifierInvocation","src":"881:9:1"}],"name":"transferOwnership","nameLocation":"835:17:1","nodeType":"FunctionDefinition","overrides":{"id":80,"nodeType":"OverrideSpecifier","overrides":[],"src":"872:8:1"},"parameters":{"id":79,"nodeType":"ParameterList","parameters":[{"constant":false,"id":78,"mutability":"mutable","name":"to","nameLocation":"861:2:1","nodeType":"VariableDeclaration","scope":89,"src":"853:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":77,"name":"address","nodeType":"ElementaryTypeName","src":"853:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"852:12:1"},"returnParameters":{"id":83,"nodeType":"ParameterList","parameters":[],"src":"891:0:1"},"scope":181,"src":"826:98:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[277],"body":{"id":124,"nodeType":"Block","src":"1061:220:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":98,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":95,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1075:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":96,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1079:6:1","memberName":"sender","nodeType":"MemberAccess","src":"1075:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":97,"name":"s_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"1089:14:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1075:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d7573742062652070726f706f736564206f776e6572","id":99,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1105:24:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","typeString":"literal_string \"Must be proposed owner\""},"value":"Must be proposed owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","typeString":"literal_string \"Must be proposed owner\""}],"id":94,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1067:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1067:63:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":101,"nodeType":"ExpressionStatement","src":"1067:63:1"},{"assignments":[103],"declarations":[{"constant":false,"id":103,"mutability":"mutable","name":"oldOwner","nameLocation":"1145:8:1","nodeType":"VariableDeclaration","scope":124,"src":"1137:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":102,"name":"address","nodeType":"ElementaryTypeName","src":"1137:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":105,"initialValue":{"id":104,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1156:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1137:26:1"},{"expression":{"id":109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":106,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1169:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":107,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1179:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1183:6:1","memberName":"sender","nodeType":"MemberAccess","src":"1179:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1169:20:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":110,"nodeType":"ExpressionStatement","src":"1169:20:1"},{"expression":{"id":116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":111,"name":"s_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"1195:14:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1220:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1212:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":112,"name":"address","nodeType":"ElementaryTypeName","src":"1212:7:1","typeDescriptions":{}}},"id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1212:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1195:27:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":117,"nodeType":"ExpressionStatement","src":"1195:27:1"},{"eventCall":{"arguments":[{"id":119,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"1255:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":120,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1265:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1269:6:1","memberName":"sender","nodeType":"MemberAccess","src":"1265:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":118,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"1234:20:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1234:42:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":123,"nodeType":"EmitStatement","src":"1229:47:1"}]},"documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"928:85:1","text":" @notice Allows an ownership transfer to be completed by the recipient."},"functionSelector":"79ba5097","id":125,"implemented":true,"kind":"function","modifiers":[],"name":"acceptOwnership","nameLocation":"1025:15:1","nodeType":"FunctionDefinition","overrides":{"id":92,"nodeType":"OverrideSpecifier","overrides":[],"src":"1052:8:1"},"parameters":{"id":91,"nodeType":"ParameterList","parameters":[],"src":"1040:2:1"},"returnParameters":{"id":93,"nodeType":"ParameterList","parameters":[],"src":"1061:0:1"},"scope":181,"src":"1016:265:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[269],"body":{"id":134,"nodeType":"Block","src":"1388:25:1","statements":[{"expression":{"id":132,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1401:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":131,"id":133,"nodeType":"Return","src":"1394:14:1"}]},"documentation":{"id":126,"nodeType":"StructuredDocumentation","src":"1285:44:1","text":" @notice Get the current owner"},"functionSelector":"8da5cb5b","id":135,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1341:5:1","nodeType":"FunctionDefinition","overrides":{"id":128,"nodeType":"OverrideSpecifier","overrides":[],"src":"1361:8:1"},"parameters":{"id":127,"nodeType":"ParameterList","parameters":[],"src":"1346:2:1"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":130,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":135,"src":"1379:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"1379:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1378:9:1"},"scope":181,"src":"1332:81:1","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":158,"nodeType":"Block","src":"1545:140:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":142,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"1559:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":143,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1565:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1569:6:1","memberName":"sender","nodeType":"MemberAccess","src":"1565:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1559:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","id":146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1577:25:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","typeString":"literal_string \"Cannot transfer to self\""},"value":"Cannot transfer to self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","typeString":"literal_string \"Cannot transfer to self\""}],"id":141,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1551:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1551:52:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":148,"nodeType":"ExpressionStatement","src":"1551:52:1"},{"expression":{"id":151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":149,"name":"s_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"1610:14:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":150,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"1627:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1610:19:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":152,"nodeType":"ExpressionStatement","src":"1610:19:1"},{"eventCall":{"arguments":[{"id":154,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1668:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":155,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"1677:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":153,"name":"OwnershipTransferRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"1641:26:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1641:39:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":157,"nodeType":"EmitStatement","src":"1636:44:1"}]},"documentation":{"id":136,"nodeType":"StructuredDocumentation","src":"1417:77:1","text":" @notice validate, transfer ownership, and emit relevant events"},"id":159,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"1506:18:1","nodeType":"FunctionDefinition","parameters":{"id":139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":138,"mutability":"mutable","name":"to","nameLocation":"1533:2:1","nodeType":"VariableDeclaration","scope":159,"src":"1525:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":137,"name":"address","nodeType":"ElementaryTypeName","src":"1525:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1524:12:1"},"returnParameters":{"id":140,"nodeType":"ParameterList","parameters":[],"src":"1545:0:1"},"scope":181,"src":"1497:188:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":171,"nodeType":"Block","src":"1774:67:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":164,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1788:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1792:6:1","memberName":"sender","nodeType":"MemberAccess","src":"1788:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":166,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1802:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1788:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792063616c6c61626c65206279206f776e6572","id":168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1811:24:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","typeString":"literal_string \"Only callable by owner\""},"value":"Only callable by owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","typeString":"literal_string \"Only callable by owner\""}],"id":163,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1780:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1780:56:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":170,"nodeType":"ExpressionStatement","src":"1780:56:1"}]},"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"1689:38:1","text":" @notice validate access"},"id":172,"implemented":true,"kind":"function","modifiers":[],"name":"_validateOwnership","nameLocation":"1739:18:1","nodeType":"FunctionDefinition","parameters":{"id":161,"nodeType":"ParameterList","parameters":[],"src":"1757:2:1"},"returnParameters":{"id":162,"nodeType":"ParameterList","parameters":[],"src":"1774:0:1"},"scope":181,"src":"1730:111:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":179,"nodeType":"Block","src":"1950:38:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":175,"name":"_validateOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"1956:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1956:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":177,"nodeType":"ExpressionStatement","src":"1956:20:1"},{"id":178,"nodeType":"PlaceholderStatement","src":"1982:1:1"}]},"documentation":{"id":173,"nodeType":"StructuredDocumentation","src":"1845:81:1","text":" @notice Reverts if called by anyone other than the contract owner."},"id":180,"name":"onlyOwner","nameLocation":"1938:9:1","nodeType":"ModifierDefinition","parameters":{"id":174,"nodeType":"ParameterList","parameters":[],"src":"1947:2:1"},"src":"1929:59:1","virtual":false,"visibility":"internal"}],"scope":182,"src":"213:1777:1","usedErrors":[]}],"src":"32:1959:1"},"id":1},"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","exportedSymbols":{"VRFConsumerBaseV2":[239]},"id":240,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":183,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:2"},{"abstract":true,"baseContracts":[],"canonicalName":"VRFConsumerBaseV2","contractDependencies":[],"contractKind":"contract","documentation":{"id":184,"nodeType":"StructuredDocumentation","src":"57:5275:2","text":"****************************************************************************\n @notice Interface for contracts using VRF randomness\n *****************************************************************************\n @dev PURPOSE\n @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n @dev to Vera the verifier in such a way that Vera can be sure he's not\n @dev making his output up to suit himself. Reggie provides Vera a public key\n @dev to which he knows the secret key. Each time Vera provides a seed to\n @dev Reggie, he gives back a value which is computed completely\n @dev deterministically from the seed and the secret key.\n @dev Reggie provides a proof by which Vera can verify that the output was\n @dev correctly computed once Reggie tells it to her, but without that proof,\n @dev the output is indistinguishable to her from a uniform random sample\n @dev from the output space.\n @dev The purpose of this contract is to make it easy for unrelated contracts\n @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n @dev simple access to a verifiable source of randomness. It ensures 2 things:\n @dev 1. The fulfillment came from the VRFCoordinator\n @dev 2. The consumer contract implements fulfillRandomWords.\n *****************************************************************************\n @dev USAGE\n @dev Calling contracts must inherit from VRFConsumerBase, and can\n @dev initialize VRFConsumerBase's attributes in their constructor as\n @dev shown:\n @dev   contract VRFConsumer {\n @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n @dev       VRFConsumerBase(_vrfCoordinator) public {\n @dev         <initialization with other arguments goes here>\n @dev       }\n @dev   }\n @dev The oracle will have given you an ID for the VRF keypair they have\n @dev committed to (let's call it keyHash). Create subscription, fund it\n @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n @dev subscription management functions).\n @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n @dev callbackGasLimit, numWords),\n @dev see (VRFCoordinatorInterface for a description of the arguments).\n @dev Once the VRFCoordinator has received and validated the oracle's response\n @dev to your request, it will call your contract's fulfillRandomWords method.\n @dev The randomness argument to fulfillRandomWords is a set of random words\n @dev generated from your requestId and the blockHash of the request.\n @dev If your contract could have concurrent requests open, you can use the\n @dev requestId returned from requestRandomWords to track which response is associated\n @dev with which randomness request.\n @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n @dev if your contract could have multiple requests in flight simultaneously.\n @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n @dev differ.\n *****************************************************************************\n @dev SECURITY CONSIDERATIONS\n @dev A method with the ability to call your fulfillRandomness method directly\n @dev could spoof a VRF response with any random value, so it's critical that\n @dev it cannot be directly called by anything other than this base contract\n @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n @dev For your users to trust that your contract's random behavior is free\n @dev from malicious interference, it's best if you can write it so that all\n @dev behaviors implied by a VRF response are executed *during* your\n @dev fulfillRandomness method. If your contract must store the response (or\n @dev anything derived from it) and use it later, you must ensure that any\n @dev user-significant behavior which depends on that stored value cannot be\n @dev manipulated by a subsequent VRF request.\n @dev Similarly, both miners and the VRF oracle itself have some influence\n @dev over the order in which VRF responses appear on the blockchain, so if\n @dev your contract could have multiple VRF requests in flight simultaneously,\n @dev you must ensure that the order in which the VRF responses arrive cannot\n @dev be used to manipulate your contract's user-significant behavior.\n @dev Since the block hash of the block which contains the requestRandomness\n @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n @dev miner could, in principle, fork the blockchain to evict the block\n @dev containing the request, forcing the request to be included in a\n @dev different block with a different hash, and therefore a different input\n @dev to the VRF. However, such an attack would incur a substantial economic\n @dev cost. This cost scales with the number of blocks the VRF oracle waits\n @dev until it calls responds to a request. It is for this reason that\n @dev that you can signal to an oracle you'd like them to wait longer before\n @dev responding to the request (however this is not enforced in the contract\n @dev and so remains effective only in the case of unmodified oracle software)."},"fullyImplemented":false,"id":239,"linearizedBaseContracts":[239],"name":"VRFConsumerBaseV2","nameLocation":"5351:17:2","nodeType":"ContractDefinition","nodes":[{"errorSelector":"1cf993f4","id":190,"name":"OnlyCoordinatorCanFulfill","nameLocation":"5379:25:2","nodeType":"ErrorDefinition","parameters":{"id":189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":186,"mutability":"mutable","name":"have","nameLocation":"5413:4:2","nodeType":"VariableDeclaration","scope":190,"src":"5405:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":185,"name":"address","nodeType":"ElementaryTypeName","src":"5405:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":188,"mutability":"mutable","name":"want","nameLocation":"5427:4:2","nodeType":"VariableDeclaration","scope":190,"src":"5419:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":187,"name":"address","nodeType":"ElementaryTypeName","src":"5419:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5404:28:2"},"src":"5373:60:2"},{"constant":false,"id":192,"mutability":"immutable","name":"vrfCoordinator","nameLocation":"5462:14:2","nodeType":"VariableDeclaration","scope":239,"src":"5436:40:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":191,"name":"address","nodeType":"ElementaryTypeName","src":"5436:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":202,"nodeType":"Block","src":"5593:43:2","statements":[{"expression":{"id":200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":198,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5599:14:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":199,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"5616:15:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5599:32:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":201,"nodeType":"ExpressionStatement","src":"5599:32:2"}]},"documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"5481:72:2","text":" @param _vrfCoordinator address of VRFCoordinator contract"},"id":203,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":195,"mutability":"mutable","name":"_vrfCoordinator","nameLocation":"5576:15:2","nodeType":"VariableDeclaration","scope":203,"src":"5568:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"5568:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5567:25:2"},"returnParameters":{"id":197,"nodeType":"ParameterList","parameters":[],"src":"5593:0:2"},"scope":239,"src":"5556:80:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"documentation":{"id":204,"nodeType":"StructuredDocumentation","src":"5640:686:2","text":" @notice fulfillRandomness handles the VRF response. Your contract must\n @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n @notice principles to keep in mind when implementing your fulfillRandomness\n @notice method.\n @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n @dev signature, and will call it once it has verified the proof\n @dev associated with the randomness. (It is triggered via a call to\n @dev rawFulfillRandomness, below.)\n @param requestId The Id initially returned by requestRandomness\n @param randomWords the VRF output expanded to the requested number of words"},"id":212,"implemented":false,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"6338:18:2","nodeType":"FunctionDefinition","parameters":{"id":210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":206,"mutability":"mutable","name":"requestId","nameLocation":"6365:9:2","nodeType":"VariableDeclaration","scope":212,"src":"6357:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":205,"name":"uint256","nodeType":"ElementaryTypeName","src":"6357:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":209,"mutability":"mutable","name":"randomWords","nameLocation":"6393:11:2","nodeType":"VariableDeclaration","scope":212,"src":"6376:28:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":207,"name":"uint256","nodeType":"ElementaryTypeName","src":"6376:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":208,"nodeType":"ArrayTypeName","src":"6376:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6356:49:2"},"returnParameters":{"id":211,"nodeType":"ParameterList","parameters":[],"src":"6422:0:2"},"scope":239,"src":"6329:94:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":237,"nodeType":"Block","src":"6707:167:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":220,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6717:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6721:6:2","memberName":"sender","nodeType":"MemberAccess","src":"6717:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":222,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"6731:14:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6717:28:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":231,"nodeType":"IfStatement","src":"6713:109:2","trueBody":{"id":230,"nodeType":"Block","src":"6747:75:2","statements":[{"errorCall":{"arguments":[{"expression":{"id":225,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6788:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6792:6:2","memberName":"sender","nodeType":"MemberAccess","src":"6788:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":227,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"6800:14:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":224,"name":"OnlyCoordinatorCanFulfill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"6762:25:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6762:53:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":229,"nodeType":"RevertStatement","src":"6755:60:2"}]}},{"expression":{"arguments":[{"id":233,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"6846:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":234,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"6857:11:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":232,"name":"fulfillRandomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"6827:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,uint256[] memory)"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6827:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":236,"nodeType":"ExpressionStatement","src":"6827:42:2"}]},"functionSelector":"1fe543e3","id":238,"implemented":true,"kind":"function","modifiers":[],"name":"rawFulfillRandomWords","nameLocation":"6627:21:2","nodeType":"FunctionDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"requestId","nameLocation":"6657:9:2","nodeType":"VariableDeclaration","scope":238,"src":"6649:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":213,"name":"uint256","nodeType":"ElementaryTypeName","src":"6649:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":217,"mutability":"mutable","name":"randomWords","nameLocation":"6685:11:2","nodeType":"VariableDeclaration","scope":238,"src":"6668:28:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":215,"name":"uint256","nodeType":"ElementaryTypeName","src":"6668:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":216,"nodeType":"ArrayTypeName","src":"6668:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6648:49:2"},"returnParameters":{"id":219,"nodeType":"ParameterList","parameters":[],"src":"6707:0:2"},"scope":239,"src":"6618:256:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":240,"src":"5333:1543:2","usedErrors":[190]}],"src":"32:6845:2"},"id":2},"@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol","exportedSymbols":{"AutomationCompatibleInterface":[258]},"id":259,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":241,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"AutomationCompatibleInterface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":258,"linearizedBaseContracts":[258],"name":"AutomationCompatibleInterface","nameLocation":"67:29:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":242,"nodeType":"StructuredDocumentation","src":"101:985:3","text":" @notice method that is simulated by the keepers to see if any work actually\n needs to be performed. This method does does not actually need to be\n executable, and since it is only ever simulated it can consume lots of gas.\n @dev To ensure that it is never called, you may want to add the\n cannotExecute modifier from KeeperBase to your implementation of this\n method.\n @param checkData specified in the upkeep registration so it is always the\n same for a registered upkeep. This can easily be broken down into specific\n arguments using `abi.decode`, so multiple upkeeps can be registered on the\n same contract and easily differentiated by the contract.\n @return upkeepNeeded boolean to indicate whether the keeper should call\n performUpkeep or not.\n @return performData bytes that the keeper should call performUpkeep with, if\n upkeep is needed. If you would like to encode data to decode later, try\n `abi.encode`."},"functionSelector":"6e04ff0d","id":251,"implemented":false,"kind":"function","modifiers":[],"name":"checkUpkeep","nameLocation":"1098:11:3","nodeType":"FunctionDefinition","parameters":{"id":245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":244,"mutability":"mutable","name":"checkData","nameLocation":"1125:9:3","nodeType":"VariableDeclaration","scope":251,"src":"1110:24:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":243,"name":"bytes","nodeType":"ElementaryTypeName","src":"1110:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1109:26:3"},"returnParameters":{"id":250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":247,"mutability":"mutable","name":"upkeepNeeded","nameLocation":"1159:12:3","nodeType":"VariableDeclaration","scope":251,"src":"1154:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":246,"name":"bool","nodeType":"ElementaryTypeName","src":"1154:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":249,"mutability":"mutable","name":"performData","nameLocation":"1186:11:3","nodeType":"VariableDeclaration","scope":251,"src":"1173:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":248,"name":"bytes","nodeType":"ElementaryTypeName","src":"1173:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1153:45:3"},"scope":258,"src":"1089:110:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"1203:1003:3","text":" @notice method that is actually executed by the keepers, via the registry.\n The data returned by the checkUpkeep simulation will be passed into\n this method to actually be executed.\n @dev The input to this method should not be trusted, and the caller of the\n method should not even be restricted to any single registry. Anyone should\n be able call it, and the input should be validated, there is no guarantee\n that the data passed in is the performData returned from checkUpkeep. This\n could happen due to malicious keepers, racing keepers, or simply a state\n change while the performUpkeep transaction is waiting for confirmation.\n Always validate the data passed in.\n @param performData is the data which was passed back from the checkData\n simulation. If it is encoded, it can easily be decoded into other types by\n calling `abi.decode`. This data should not be trusted, and should be\n validated against the contract's current state."},"functionSelector":"4585e33b","id":257,"implemented":false,"kind":"function","modifiers":[],"name":"performUpkeep","nameLocation":"2218:13:3","nodeType":"FunctionDefinition","parameters":{"id":255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"performData","nameLocation":"2247:11:3","nodeType":"VariableDeclaration","scope":257,"src":"2232:26:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":253,"name":"bytes","nodeType":"ElementaryTypeName","src":"2232:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2231:28:3"},"returnParameters":{"id":256,"nodeType":"ParameterList","parameters":[],"src":"2268:0:3"},"scope":258,"src":"2209:60:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":259,"src":"57:2214:3","usedErrors":[]}],"src":"32:2240:3"},"id":3},"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol","exportedSymbols":{"KeeperCompatibleInterface":[258]},"id":263,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":260,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"134:23:4"},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol","file":"./AutomationCompatibleInterface.sol","id":262,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":263,"sourceUnit":259,"src":"158:111:4","symbolAliases":[{"foreign":{"id":261,"name":"AutomationCompatibleInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"166:29:4","typeDescriptions":{}},"local":"KeeperCompatibleInterface","nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"134:136:4"},"id":4},"@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol","exportedSymbols":{"OwnableInterface":[278]},"id":279,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":264,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"OwnableInterface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":278,"linearizedBaseContracts":[278],"name":"OwnableInterface","nameLocation":"67:16:5","nodeType":"ContractDefinition","nodes":[{"functionSelector":"8da5cb5b","id":269,"implemented":false,"kind":"function","modifiers":[],"name":"owner","nameLocation":"97:5:5","nodeType":"FunctionDefinition","parameters":{"id":265,"nodeType":"ParameterList","parameters":[],"src":"102:2:5"},"returnParameters":{"id":268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":267,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":269,"src":"123:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":266,"name":"address","nodeType":"ElementaryTypeName","src":"123:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"122:9:5"},"scope":278,"src":"88:44:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f2fde38b","id":274,"implemented":false,"kind":"function","modifiers":[],"name":"transferOwnership","nameLocation":"145:17:5","nodeType":"FunctionDefinition","parameters":{"id":272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":271,"mutability":"mutable","name":"recipient","nameLocation":"171:9:5","nodeType":"VariableDeclaration","scope":274,"src":"163:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":270,"name":"address","nodeType":"ElementaryTypeName","src":"163:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"162:19:5"},"returnParameters":{"id":273,"nodeType":"ParameterList","parameters":[],"src":"190:0:5"},"scope":278,"src":"136:55:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"79ba5097","id":277,"implemented":false,"kind":"function","modifiers":[],"name":"acceptOwnership","nameLocation":"204:15:5","nodeType":"FunctionDefinition","parameters":{"id":275,"nodeType":"ParameterList","parameters":[],"src":"219:2:5"},"returnParameters":{"id":276,"nodeType":"ParameterList","parameters":[],"src":"230:0:5"},"scope":278,"src":"195:36:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":279,"src":"57:176:5","usedErrors":[]}],"src":"32:202:5"},"id":5},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","exportedSymbols":{"VRFCoordinatorV2Interface":[374]},"id":375,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":280,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"VRFCoordinatorV2Interface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":374,"linearizedBaseContracts":[374],"name":"VRFCoordinatorV2Interface","nameLocation":"67:25:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":281,"nodeType":"StructuredDocumentation","src":"97:267:6","text":" @notice Get configuration relevant for making requests\n @return minimumRequestConfirmations global min for request confirmations\n @return maxGasLimit global max for request gas limit\n @return s_provingKeyHashes list of registered key hashes"},"functionSelector":"00012291","id":291,"implemented":false,"kind":"function","modifiers":[],"name":"getRequestConfig","nameLocation":"376:16:6","nodeType":"FunctionDefinition","parameters":{"id":282,"nodeType":"ParameterList","parameters":[],"src":"392:2:6"},"returnParameters":{"id":290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":284,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":291,"src":"437:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":283,"name":"uint16","nodeType":"ElementaryTypeName","src":"437:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":291,"src":"451:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":285,"name":"uint32","nodeType":"ElementaryTypeName","src":"451:6:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":289,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":291,"src":"465:16:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":287,"name":"bytes32","nodeType":"ElementaryTypeName","src":"465:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":288,"nodeType":"ArrayTypeName","src":"465:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"429:58:6"},"scope":374,"src":"367:121:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":292,"nodeType":"StructuredDocumentation","src":"492:1511:6","text":" @notice Request a set of random words.\n @param keyHash - Corresponds to a particular oracle job which uses\n that key for generating the VRF proof. Different keyHash's have different gas price\n ceilings, so you can select a specific one to bound your maximum per request cost.\n @param subId  - The ID of the VRF subscription. Must be funded\n with the minimum subscription balance required for the selected keyHash.\n @param minimumRequestConfirmations - How many blocks you'd like the\n oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n for why you may want to request more. The acceptable range is\n [minimumRequestBlockConfirmations, 200].\n @param callbackGasLimit - How much gas you'd like to receive in your\n fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n may be slightly less than this amount because of gas used calling the function\n (argument decoding etc.), so you may need to request slightly more than you expect\n to have inside fulfillRandomWords. The acceptable range is\n [0, maxGasLimit]\n @param numWords - The number of uint256 random values you'd like to receive\n in your fulfillRandomWords callback. Note these numbers are expanded in a\n secure way by the VRFCoordinator from a single random value supplied by the oracle.\n @return requestId - A unique identifier of the request. Can be used to match\n a request to a response in fulfillRandomWords."},"functionSelector":"5d3b1d30","id":307,"implemented":false,"kind":"function","modifiers":[],"name":"requestRandomWords","nameLocation":"2015:18:6","nodeType":"FunctionDefinition","parameters":{"id":303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"keyHash","nameLocation":"2047:7:6","nodeType":"VariableDeclaration","scope":307,"src":"2039:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":293,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2039:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":296,"mutability":"mutable","name":"subId","nameLocation":"2067:5:6","nodeType":"VariableDeclaration","scope":307,"src":"2060:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":295,"name":"uint64","nodeType":"ElementaryTypeName","src":"2060:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":298,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"2085:27:6","nodeType":"VariableDeclaration","scope":307,"src":"2078:34:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":297,"name":"uint16","nodeType":"ElementaryTypeName","src":"2078:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":300,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"2125:16:6","nodeType":"VariableDeclaration","scope":307,"src":"2118:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":299,"name":"uint32","nodeType":"ElementaryTypeName","src":"2118:6:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":302,"mutability":"mutable","name":"numWords","nameLocation":"2154:8:6","nodeType":"VariableDeclaration","scope":307,"src":"2147:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":301,"name":"uint32","nodeType":"ElementaryTypeName","src":"2147:6:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2033:133:6"},"returnParameters":{"id":306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"requestId","nameLocation":"2193:9:6","nodeType":"VariableDeclaration","scope":307,"src":"2185:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":304,"name":"uint256","nodeType":"ElementaryTypeName","src":"2185:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2184:19:6"},"scope":374,"src":"2006:198:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":308,"nodeType":"StructuredDocumentation","src":"2208:384:6","text":" @notice Create a VRF subscription.\n @return subId - A unique subscription id.\n @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n @dev Note to fund the subscription, use transferAndCall. For example\n @dev  LINKTOKEN.transferAndCall(\n @dev    address(COORDINATOR),\n @dev    amount,\n @dev    abi.encode(subId));"},"functionSelector":"a21a23e4","id":313,"implemented":false,"kind":"function","modifiers":[],"name":"createSubscription","nameLocation":"2604:18:6","nodeType":"FunctionDefinition","parameters":{"id":309,"nodeType":"ParameterList","parameters":[],"src":"2622:2:6"},"returnParameters":{"id":312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"mutability":"mutable","name":"subId","nameLocation":"2650:5:6","nodeType":"VariableDeclaration","scope":313,"src":"2643:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":310,"name":"uint64","nodeType":"ElementaryTypeName","src":"2643:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2642:14:6"},"scope":374,"src":"2595:62:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":314,"nodeType":"StructuredDocumentation","src":"2661:381:6","text":" @notice Get a VRF subscription.\n @param subId - ID of the subscription\n @return balance - LINK balance of the subscription in juels.\n @return reqCount - number of requests for this subscription, determines fee tier.\n @return owner - owner of the subscription.\n @return consumers - list of consumer address which are able to use this subscription."},"functionSelector":"a47c7696","id":328,"implemented":false,"kind":"function","modifiers":[],"name":"getSubscription","nameLocation":"3054:15:6","nodeType":"FunctionDefinition","parameters":{"id":317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":316,"mutability":"mutable","name":"subId","nameLocation":"3077:5:6","nodeType":"VariableDeclaration","scope":328,"src":"3070:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":315,"name":"uint64","nodeType":"ElementaryTypeName","src":"3070:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3069:14:6"},"returnParameters":{"id":327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":319,"mutability":"mutable","name":"balance","nameLocation":"3133:7:6","nodeType":"VariableDeclaration","scope":328,"src":"3126:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":318,"name":"uint96","nodeType":"ElementaryTypeName","src":"3126:6:6","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":321,"mutability":"mutable","name":"reqCount","nameLocation":"3155:8:6","nodeType":"VariableDeclaration","scope":328,"src":"3148:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":320,"name":"uint64","nodeType":"ElementaryTypeName","src":"3148:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":323,"mutability":"mutable","name":"owner","nameLocation":"3179:5:6","nodeType":"VariableDeclaration","scope":328,"src":"3171:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":322,"name":"address","nodeType":"ElementaryTypeName","src":"3171:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":326,"mutability":"mutable","name":"consumers","nameLocation":"3209:9:6","nodeType":"VariableDeclaration","scope":328,"src":"3192:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":324,"name":"address","nodeType":"ElementaryTypeName","src":"3192:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":325,"nodeType":"ArrayTypeName","src":"3192:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3118:106:6"},"scope":374,"src":"3045:180:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":329,"nodeType":"StructuredDocumentation","src":"3229:164:6","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @param newOwner - proposed new owner of the subscription"},"functionSelector":"04c357cb","id":336,"implemented":false,"kind":"function","modifiers":[],"name":"requestSubscriptionOwnerTransfer","nameLocation":"3405:32:6","nodeType":"FunctionDefinition","parameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":331,"mutability":"mutable","name":"subId","nameLocation":"3445:5:6","nodeType":"VariableDeclaration","scope":336,"src":"3438:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":330,"name":"uint64","nodeType":"ElementaryTypeName","src":"3438:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":333,"mutability":"mutable","name":"newOwner","nameLocation":"3460:8:6","nodeType":"VariableDeclaration","scope":336,"src":"3452:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":332,"name":"address","nodeType":"ElementaryTypeName","src":"3452:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3437:32:6"},"returnParameters":{"id":335,"nodeType":"ParameterList","parameters":[],"src":"3478:0:6"},"scope":374,"src":"3396:83:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"3483:212:6","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @dev will revert if original owner of subId has\n not requested that msg.sender become the new owner."},"functionSelector":"82359740","id":342,"implemented":false,"kind":"function","modifiers":[],"name":"acceptSubscriptionOwnerTransfer","nameLocation":"3707:31:6","nodeType":"FunctionDefinition","parameters":{"id":340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"mutability":"mutable","name":"subId","nameLocation":"3746:5:6","nodeType":"VariableDeclaration","scope":342,"src":"3739:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":338,"name":"uint64","nodeType":"ElementaryTypeName","src":"3739:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3738:14:6"},"returnParameters":{"id":341,"nodeType":"ParameterList","parameters":[],"src":"3761:0:6"},"scope":374,"src":"3698:64:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":343,"nodeType":"StructuredDocumentation","src":"3766:170:6","text":" @notice Add a consumer to a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - New consumer which can use the subscription"},"functionSelector":"7341c10c","id":350,"implemented":false,"kind":"function","modifiers":[],"name":"addConsumer","nameLocation":"3948:11:6","nodeType":"FunctionDefinition","parameters":{"id":348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":345,"mutability":"mutable","name":"subId","nameLocation":"3967:5:6","nodeType":"VariableDeclaration","scope":350,"src":"3960:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":344,"name":"uint64","nodeType":"ElementaryTypeName","src":"3960:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":347,"mutability":"mutable","name":"consumer","nameLocation":"3982:8:6","nodeType":"VariableDeclaration","scope":350,"src":"3974:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":346,"name":"address","nodeType":"ElementaryTypeName","src":"3974:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3959:32:6"},"returnParameters":{"id":349,"nodeType":"ParameterList","parameters":[],"src":"4000:0:6"},"scope":374,"src":"3939:62:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":351,"nodeType":"StructuredDocumentation","src":"4005:172:6","text":" @notice Remove a consumer from a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - Consumer to remove from the subscription"},"functionSelector":"9f87fad7","id":358,"implemented":false,"kind":"function","modifiers":[],"name":"removeConsumer","nameLocation":"4189:14:6","nodeType":"FunctionDefinition","parameters":{"id":356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":353,"mutability":"mutable","name":"subId","nameLocation":"4211:5:6","nodeType":"VariableDeclaration","scope":358,"src":"4204:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":352,"name":"uint64","nodeType":"ElementaryTypeName","src":"4204:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":355,"mutability":"mutable","name":"consumer","nameLocation":"4226:8:6","nodeType":"VariableDeclaration","scope":358,"src":"4218:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":354,"name":"address","nodeType":"ElementaryTypeName","src":"4218:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4203:32:6"},"returnParameters":{"id":357,"nodeType":"ParameterList","parameters":[],"src":"4244:0:6"},"scope":374,"src":"4180:65:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":359,"nodeType":"StructuredDocumentation","src":"4249:140:6","text":" @notice Cancel a subscription\n @param subId - ID of the subscription\n @param to - Where to send the remaining LINK to"},"functionSelector":"d7ae1d30","id":366,"implemented":false,"kind":"function","modifiers":[],"name":"cancelSubscription","nameLocation":"4401:18:6","nodeType":"FunctionDefinition","parameters":{"id":364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":361,"mutability":"mutable","name":"subId","nameLocation":"4427:5:6","nodeType":"VariableDeclaration","scope":366,"src":"4420:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":360,"name":"uint64","nodeType":"ElementaryTypeName","src":"4420:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":363,"mutability":"mutable","name":"to","nameLocation":"4442:2:6","nodeType":"VariableDeclaration","scope":366,"src":"4434:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":362,"name":"address","nodeType":"ElementaryTypeName","src":"4434:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4419:26:6"},"returnParameters":{"id":365,"nodeType":"ParameterList","parameters":[],"src":"4454:0:6"},"scope":374,"src":"4392:63:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e82ad7d4","id":373,"implemented":false,"kind":"function","modifiers":[],"name":"pendingRequestExists","nameLocation":"4760:20:6","nodeType":"FunctionDefinition","parameters":{"id":369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":368,"mutability":"mutable","name":"subId","nameLocation":"4788:5:6","nodeType":"VariableDeclaration","scope":373,"src":"4781:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":367,"name":"uint64","nodeType":"ElementaryTypeName","src":"4781:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4780:14:6"},"returnParameters":{"id":372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":371,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":373,"src":"4818:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":370,"name":"bool","nodeType":"ElementaryTypeName","src":"4818:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4817:6:6"},"scope":374,"src":"4751:73:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":375,"src":"57:4769:6","usedErrors":[]}],"src":"32:4795:6"},"id":6},"contracts/Raffle.sol":{"ast":{"absolutePath":"contracts/Raffle.sol","exportedSymbols":{"ConfirmedOwner":[19],"ConfirmedOwnerWithProposal":[181],"KeeperCompatibleInterface":[258],"OwnableInterface":[278],"Raffle":[761],"Raffle__NotEnoughETHEntered":[382],"Raffle__NotOpen":[386],"Raffle__TransferFailed":[384],"Raffle__UpKeepNotNeeded":[394],"VRFConsumerBaseV2":[239],"VRFCoordinatorV2Interface":[374]},"id":762,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":376,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"267:23:7"},{"absolutePath":"@chainlink/contracts/src/v0.8/ConfirmedOwner.sol","file":"@chainlink/contracts/src/v0.8/ConfirmedOwner.sol","id":377,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":762,"sourceUnit":20,"src":"292:58:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","file":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","id":378,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":762,"sourceUnit":240,"src":"351:61:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","id":379,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":762,"sourceUnit":375,"src":"468:80:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol","id":380,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":762,"sourceUnit":263,"src":"549:80:7","symbolAliases":[],"unitAlias":""},{"errorSelector":"bd4e0695","id":382,"name":"Raffle__NotEnoughETHEntered","nameLocation":"637:27:7","nodeType":"ErrorDefinition","parameters":{"id":381,"nodeType":"ParameterList","parameters":[],"src":"664:2:7"},"src":"631:36:7"},{"errorSelector":"a1d04b39","id":384,"name":"Raffle__TransferFailed","nameLocation":"674:22:7","nodeType":"ErrorDefinition","parameters":{"id":383,"nodeType":"ParameterList","parameters":[],"src":"696:2:7"},"src":"668:31:7"},{"errorSelector":"1425571c","id":386,"name":"Raffle__NotOpen","nameLocation":"706:15:7","nodeType":"ErrorDefinition","parameters":{"id":385,"nodeType":"ParameterList","parameters":[],"src":"721:2:7"},"src":"700:24:7"},{"errorSelector":"3a8d6086","id":394,"name":"Raffle__UpKeepNotNeeded","nameLocation":"731:23:7","nodeType":"ErrorDefinition","parameters":{"id":393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":388,"mutability":"mutable","name":"currentBalance","nameLocation":"763:14:7","nodeType":"VariableDeclaration","scope":394,"src":"755:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":387,"name":"uint256","nodeType":"ElementaryTypeName","src":"755:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":390,"mutability":"mutable","name":"numPlayers","nameLocation":"787:10:7","nodeType":"VariableDeclaration","scope":394,"src":"779:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":389,"name":"uint256","nodeType":"ElementaryTypeName","src":"779:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":392,"mutability":"mutable","name":"raffleState","nameLocation":"808:11:7","nodeType":"VariableDeclaration","scope":394,"src":"800:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":391,"name":"uint256","nodeType":"ElementaryTypeName","src":"800:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"754:66:7"},"src":"725:96:7"},{"abstract":false,"baseContracts":[{"baseName":{"id":395,"name":"VRFConsumerBaseV2","nameLocations":["842:17:7"],"nodeType":"IdentifierPath","referencedDeclaration":239,"src":"842:17:7"},"id":396,"nodeType":"InheritanceSpecifier","src":"842:17:7"},{"baseName":{"id":397,"name":"KeeperCompatibleInterface","nameLocations":["861:25:7"],"nodeType":"IdentifierPath","referencedDeclaration":258,"src":"861:25:7"},"id":398,"nodeType":"InheritanceSpecifier","src":"861:25:7"}],"canonicalName":"Raffle","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":761,"linearizedBaseContracts":[761,258,239],"name":"Raffle","nameLocation":"832:6:7","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Raffle.RaffleState","id":401,"members":[{"id":399,"name":"OPEN","nameLocation":"948:4:7","nodeType":"EnumValue","src":"948:4:7"},{"id":400,"name":"CALCULATING","nameLocation":"962:11:7","nodeType":"EnumValue","src":"962:11:7"}],"name":"RaffleState","nameLocation":"926:11:7","nodeType":"EnumDefinition","src":"921:58:7"},{"constant":false,"id":403,"mutability":"immutable","name":"i_entranceFee","nameLocation":"1116:13:7","nodeType":"VariableDeclaration","scope":761,"src":"1090:39:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":402,"name":"uint256","nodeType":"ElementaryTypeName","src":"1090:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":406,"mutability":"mutable","name":"s_players","nameLocation":"1161:9:7","nodeType":"VariableDeclaration","scope":761,"src":"1135:35:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[]"},"typeName":{"baseType":{"id":404,"name":"address","nodeType":"ElementaryTypeName","src":"1135:15:7","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":405,"nodeType":"ArrayTypeName","src":"1135:17:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage_ptr","typeString":"address payable[]"}},"visibility":"private"},{"constant":false,"id":409,"mutability":"immutable","name":"i_vrfCoordinator","nameLocation":"1220:16:7","nodeType":"VariableDeclaration","scope":761,"src":"1176:60:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$374","typeString":"contract VRFCoordinatorV2Interface"},"typeName":{"id":408,"nodeType":"UserDefinedTypeName","pathNode":{"id":407,"name":"VRFCoordinatorV2Interface","nameLocations":["1176:25:7"],"nodeType":"IdentifierPath","referencedDeclaration":374,"src":"1176:25:7"},"referencedDeclaration":374,"src":"1176:25:7","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$374","typeString":"contract VRFCoordinatorV2Interface"}},"visibility":"private"},{"constant":false,"id":411,"mutability":"immutable","name":"i_gasLane","nameLocation":"1268:9:7","nodeType":"VariableDeclaration","scope":761,"src":"1242:35:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":410,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1242:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":413,"mutability":"immutable","name":"i_subscriptionId","nameLocation":"1308:16:7","nodeType":"VariableDeclaration","scope":761,"src":"1283:41:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":412,"name":"uint64","nodeType":"ElementaryTypeName","src":"1283:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"private"},{"constant":true,"id":416,"mutability":"constant","name":"REQUEST_CONFIRMATIONS","nameLocation":"1354:21:7","nodeType":"VariableDeclaration","scope":761,"src":"1330:49:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":414,"name":"uint16","nodeType":"ElementaryTypeName","src":"1330:6:7","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"33","id":415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1378:1:7","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"private"},{"constant":false,"id":418,"mutability":"immutable","name":"i_callbackGasLimit","nameLocation":"1410:18:7","nodeType":"VariableDeclaration","scope":761,"src":"1385:43:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":417,"name":"uint32","nodeType":"ElementaryTypeName","src":"1385:6:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"private"},{"constant":false,"id":421,"mutability":"immutable","name":"NUM_WORDS","nameLocation":"1459:9:7","nodeType":"VariableDeclaration","scope":761,"src":"1434:38:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":419,"name":"uint32","nodeType":"ElementaryTypeName","src":"1434:6:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"31","id":420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1471:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":false,"id":423,"mutability":"mutable","name":"s_recentWinner","nameLocation":"1525:14:7","nodeType":"VariableDeclaration","scope":761,"src":"1509:30:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":422,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":426,"mutability":"mutable","name":"s_raffleState","nameLocation":"1701:13:7","nodeType":"VariableDeclaration","scope":761,"src":"1681:33:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$401","typeString":"enum Raffle.RaffleState"},"typeName":{"id":425,"nodeType":"UserDefinedTypeName","pathNode":{"id":424,"name":"RaffleState","nameLocations":["1681:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":401,"src":"1681:11:7"},"referencedDeclaration":401,"src":"1681:11:7","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$401","typeString":"enum Raffle.RaffleState"}},"visibility":"private"},{"constant":false,"id":428,"mutability":"mutable","name":"s_lastTimeStamp","nameLocation":"1785:15:7","nodeType":"VariableDeclaration","scope":761,"src":"1769:31:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":427,"name":"uint256","nodeType":"ElementaryTypeName","src":"1769:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":430,"mutability":"immutable","name":"i_interval","nameLocation":"1832:10:7","nodeType":"VariableDeclaration","scope":761,"src":"1806:36:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":429,"name":"uint256","nodeType":"ElementaryTypeName","src":"1806:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"anonymous":false,"eventSelector":"0805e1d667bddb8a95f0f09880cf94f403fb596ce79928d9f29b74203ba284d4","id":434,"name":"RaffleEnter","nameLocation":"1872:11:7","nodeType":"EventDefinition","parameters":{"id":433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":432,"indexed":true,"mutability":"mutable","name":"player","nameLocation":"1900:6:7","nodeType":"VariableDeclaration","scope":434,"src":"1884:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":431,"name":"address","nodeType":"ElementaryTypeName","src":"1884:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1883:24:7"},"src":"1866:42:7"},{"anonymous":false,"eventSelector":"cd6e45c8998311cab7e9d4385596cac867e20a0587194b954fa3a731c93ce78b","id":438,"name":"RequestedRaffleWinner","nameLocation":"1919:21:7","nodeType":"EventDefinition","parameters":{"id":437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":436,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"1957:9:7","nodeType":"VariableDeclaration","scope":438,"src":"1941:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":435,"name":"uint256","nodeType":"ElementaryTypeName","src":"1941:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1940:27:7"},"src":"1913:55:7"},{"anonymous":false,"eventSelector":"5b690ec4a06fe979403046eaeea5b3ce38524683c3001f662c8b5a829632f7df","id":442,"name":"WinnerPicked","nameLocation":"1979:12:7","nodeType":"EventDefinition","parameters":{"id":441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":440,"indexed":true,"mutability":"mutable","name":"winner","nameLocation":"2008:6:7","nodeType":"VariableDeclaration","scope":442,"src":"1992:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":439,"name":"address","nodeType":"ElementaryTypeName","src":"1992:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1991:24:7"},"src":"1973:43:7"},{"body":{"id":496,"nodeType":"Block","src":"2260:404:7","statements":[{"expression":{"id":462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":460,"name":"i_entranceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"2270:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":461,"name":"entranceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"2286:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2270:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":463,"nodeType":"ExpressionStatement","src":"2270:27:7"},{"expression":{"id":468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":464,"name":"i_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"2307:16:7","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$374","typeString":"contract VRFCoordinatorV2Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":466,"name":"vrfCoordinatorV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"2352:16:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":465,"name":"VRFCoordinatorV2Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"2326:25:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFCoordinatorV2Interface_$374_$","typeString":"type(contract VRFCoordinatorV2Interface)"}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2326:43:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$374","typeString":"contract VRFCoordinatorV2Interface"}},"src":"2307:62:7","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$374","typeString":"contract VRFCoordinatorV2Interface"}},"id":469,"nodeType":"ExpressionStatement","src":"2307:62:7"},{"expression":{"id":472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":470,"name":"i_gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"2379:9:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":471,"name":"gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"2391:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2379:19:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":473,"nodeType":"ExpressionStatement","src":"2379:19:7"},{"expression":{"id":476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":474,"name":"i_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"2408:16:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":475,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"2427:14:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"2408:33:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":477,"nodeType":"ExpressionStatement","src":"2408:33:7"},{"expression":{"id":480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":478,"name":"i_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"2451:18:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":479,"name":"callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"2472:16:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"2451:37:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":481,"nodeType":"ExpressionStatement","src":"2451:37:7"},{"expression":{"id":485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":482,"name":"s_raffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"2498:13:7","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$401","typeString":"enum Raffle.RaffleState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":483,"name":"RaffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"2514:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RaffleState_$401_$","typeString":"type(enum Raffle.RaffleState)"}},"id":484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2526:4:7","memberName":"OPEN","nodeType":"MemberAccess","referencedDeclaration":399,"src":"2514:16:7","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$401","typeString":"enum Raffle.RaffleState"}},"src":"2498:32:7","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$401","typeString":"enum Raffle.RaffleState"}},"id":486,"nodeType":"ExpressionStatement","src":"2498:32:7"},{"expression":{"id":490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":487,"name":"s_lastTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"2593:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":488,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2611:5:7","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2617:9:7","memberName":"timestamp","nodeType":"MemberAccess","src":"2611:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2593:33:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":491,"nodeType":"ExpressionStatement","src":"2593:33:7"},{"expression":{"id":494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":492,"name":"i_interval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"2636:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":493,"name":"interval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"2649:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2636:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":495,"nodeType":"ExpressionStatement","src":"2636:21:7"}]},"id":497,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":457,"name":"vrfCoordinatorV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"2242:16:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":458,"kind":"baseConstructorSpecifier","modifierName":{"id":456,"name":"VRFConsumerBaseV2","nameLocations":["2224:17:7"],"nodeType":"IdentifierPath","referencedDeclaration":239,"src":"2224:17:7"},"nodeType":"ModifierInvocation","src":"2224:35:7"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":444,"mutability":"mutable","name":"vrfCoordinatorV2","nameLocation":"2053:16:7","nodeType":"VariableDeclaration","scope":497,"src":"2045:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":443,"name":"address","nodeType":"ElementaryTypeName","src":"2045:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":446,"mutability":"mutable","name":"entranceFee","nameLocation":"2088:11:7","nodeType":"VariableDeclaration","scope":497,"src":"2080:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":445,"name":"uint256","nodeType":"ElementaryTypeName","src":"2080:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":448,"mutability":"mutable","name":"gasLane","nameLocation":"2118:7:7","nodeType":"VariableDeclaration","scope":497,"src":"2110:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":447,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2110:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":450,"mutability":"mutable","name":"subscriptionId","nameLocation":"2143:14:7","nodeType":"VariableDeclaration","scope":497,"src":"2136:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":449,"name":"uint64","nodeType":"ElementaryTypeName","src":"2136:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":452,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"2175:16:7","nodeType":"VariableDeclaration","scope":497,"src":"2168:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":451,"name":"uint32","nodeType":"ElementaryTypeName","src":"2168:6:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":454,"mutability":"mutable","name":"interval","nameLocation":"2209:8:7","nodeType":"VariableDeclaration","scope":497,"src":"2201:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":453,"name":"uint256","nodeType":"ElementaryTypeName","src":"2201:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2035:188:7"},"returnParameters":{"id":459,"nodeType":"ParameterList","parameters":[],"src":"2260:0:7"},"scope":761,"src":"2023:641:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":533,"nodeType":"Block","src":"2708:545:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":500,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2837:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2841:5:7","memberName":"value","nodeType":"MemberAccess","src":"2837:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":502,"name":"i_entranceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"2849:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2837:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":508,"nodeType":"IfStatement","src":"2834:68:7","trueBody":{"id":507,"nodeType":"Block","src":"2863:39:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":504,"name":"Raffle__NotEnoughETHEntered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"2871:27:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2871:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":506,"nodeType":"RevertStatement","src":"2864:36:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_enum$_RaffleState_$401","typeString":"enum Raffle.RaffleState"},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":509,"name":"s_raffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"2935:13:7","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$401","typeString":"enum Raffle.RaffleState"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":510,"name":"RaffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"2952:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RaffleState_$401_$","typeString":"type(enum Raffle.RaffleState)"}},"id":511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2964:4:7","memberName":"OPEN","nodeType":"MemberAccess","referencedDeclaration":399,"src":"2952:16:7","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$401","typeString":"enum Raffle.RaffleState"}},"src":"2935:33:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":517,"nodeType":"IfStatement","src":"2932:64:7","trueBody":{"id":516,"nodeType":"Block","src":"2969:27:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":513,"name":"Raffle__NotOpen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"2977:15:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2977:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":515,"nodeType":"RevertStatement","src":"2970:24:7"}]}},{"expression":{"arguments":[{"arguments":[{"expression":{"id":523,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3029:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3033:6:7","memberName":"sender","nodeType":"MemberAccess","src":"3029:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3020:9:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":521,"name":"address","nodeType":"ElementaryTypeName","src":"3020:9:7","stateMutability":"payable","typeDescriptions":{}}},"id":525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3020:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"expression":{"id":518,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"3005:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3015:4:7","memberName":"push","nodeType":"MemberAccess","src":"3005:14:7","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_payable_$dyn_storage_ptr_$_t_address_payable_$returns$__$attached_to$_t_array$_t_address_payable_$dyn_storage_ptr_$","typeString":"function (address payable[] storage pointer,address payable)"}},"id":526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3005:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":527,"nodeType":"ExpressionStatement","src":"3005:36:7"},{"eventCall":{"arguments":[{"expression":{"id":529,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3234:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3238:6:7","memberName":"sender","nodeType":"MemberAccess","src":"3234:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":528,"name":"RaffleEnter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"3222:11:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3222:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":532,"nodeType":"EmitStatement","src":"3217:28:7"}]},"functionSelector":"2cfcc539","id":534,"implemented":true,"kind":"function","modifiers":[],"name":"enterRaffle","nameLocation":"2679:11:7","nodeType":"FunctionDefinition","parameters":{"id":498,"nodeType":"ParameterList","parameters":[],"src":"2690:2:7"},"returnParameters":{"id":499,"nodeType":"ParameterList","parameters":[],"src":"2708:0:7"},"scope":761,"src":"2670:583:7","stateMutability":"payable","virtual":false,"visibility":"public"},{"baseFunctions":[251],"body":{"id":592,"nodeType":"Block","src":"4108:444:7","statements":[{"assignments":[546],"declarations":[{"constant":false,"id":546,"mutability":"mutable","name":"isOpen","nameLocation":"4127:6:7","nodeType":"VariableDeclaration","scope":592,"src":"4122:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":545,"name":"bool","nodeType":"ElementaryTypeName","src":"4122:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":552,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_enum$_RaffleState_$401","typeString":"enum Raffle.RaffleState"},"id":550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":547,"name":"RaffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"4137:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RaffleState_$401_$","typeString":"type(enum Raffle.RaffleState)"}},"id":548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4149:4:7","memberName":"OPEN","nodeType":"MemberAccess","referencedDeclaration":399,"src":"4137:16:7","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$401","typeString":"enum Raffle.RaffleState"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":549,"name":"s_raffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"4157:13:7","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$401","typeString":"enum Raffle.RaffleState"}},"src":"4137:33:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":551,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4136:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4122:49:7"},{"assignments":[554],"declarations":[{"constant":false,"id":554,"mutability":"mutable","name":"timePassed","nameLocation":"4190:10:7","nodeType":"VariableDeclaration","scope":592,"src":"4185:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":553,"name":"bool","nodeType":"ElementaryTypeName","src":"4185:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":562,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":555,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4204:5:7","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4210:9:7","memberName":"timestamp","nodeType":"MemberAccess","src":"4204:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":557,"name":"s_lastTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"4222:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4204:33:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":559,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4203:35:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":560,"name":"i_interval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"4241:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4203:48:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4185:66:7"},{"assignments":[564],"declarations":[{"constant":false,"id":564,"mutability":"mutable","name":"hasPlayers","nameLocation":"4324:10:7","nodeType":"VariableDeclaration","scope":592,"src":"4319:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":563,"name":"bool","nodeType":"ElementaryTypeName","src":"4319:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":570,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":565,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"4338:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4348:6:7","memberName":"length","nodeType":"MemberAccess","src":"4338:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4357:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4338:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":569,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4337:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4319:40:7"},{"assignments":[572],"declarations":[{"constant":false,"id":572,"mutability":"mutable","name":"hasBalance","nameLocation":"4378:10:7","nodeType":"VariableDeclaration","scope":592,"src":"4373:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":571,"name":"bool","nodeType":"ElementaryTypeName","src":"4373:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":580,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":575,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4399:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Raffle_$761","typeString":"contract Raffle"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Raffle_$761","typeString":"contract Raffle"}],"id":574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4391:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":573,"name":"address","nodeType":"ElementaryTypeName","src":"4391:7:7","typeDescriptions":{}}},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4391:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4405:7:7","memberName":"balance","nodeType":"MemberAccess","src":"4391:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4415:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4391:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4373:43:7"},{"expression":{"id":590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":581,"name":"upkeepNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"4430:12:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":582,"name":"isOpen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"4446:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":583,"name":"timePassed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4456:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4446:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":585,"name":"hasPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"4470:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4446:34:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":587,"name":"hasBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"4484:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4446:48:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":589,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4445:50:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4430:65:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":591,"nodeType":"ExpressionStatement","src":"4430:65:7"}]},"documentation":{"id":535,"nodeType":"StructuredDocumentation","src":"3259:540:7","text":"@dev This is the function that the Chainlink Keeper nodes call\n They look for the`upkeepNeeded` to return true.\n The following should be true in order to return true.\n 1. Our time internal should have passed\n 2. The lottery should have at least 1 player, and have some ETH\n 3. Our subscription is funded with LINK\n 4. Lottery should be in an *open* state, and when it is requesting for a random number, it should be a *closed/calculating* state, to prevent people from joining during that time."},"functionSelector":"6e04ff0d","id":593,"implemented":true,"kind":"function","modifiers":[],"name":"checkUpkeep","nameLocation":"3813:11:7","nodeType":"FunctionDefinition","overrides":{"id":539,"nodeType":"OverrideSpecifier","overrides":[],"src":"4039:8:7"},"parameters":{"id":538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":537,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":593,"src":"3834:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":536,"name":"bytes","nodeType":"ElementaryTypeName","src":"3834:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3824:207:7"},"returnParameters":{"id":544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":541,"mutability":"mutable","name":"upkeepNeeded","nameLocation":"4062:12:7","nodeType":"VariableDeclaration","scope":593,"src":"4057:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":540,"name":"bool","nodeType":"ElementaryTypeName","src":"4057:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":593,"src":"4077:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":542,"name":"bytes","nodeType":"ElementaryTypeName","src":"4077:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4056:51:7"},"scope":761,"src":"3804:748:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[257],"body":{"id":643,"nodeType":"Block","src":"4683:881:7","statements":[{"assignments":[600,null],"declarations":[{"constant":false,"id":600,"mutability":"mutable","name":"upkeepNeeded","nameLocation":"4871:12:7","nodeType":"VariableDeclaration","scope":643,"src":"4866:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":599,"name":"bool","nodeType":"ElementaryTypeName","src":"4866:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":604,"initialValue":{"arguments":[{"hexValue":"","id":602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4901:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":601,"name":"checkUpkeep","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"4889:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4889:15:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4865:39:7"},{"condition":{"id":606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4918:13:7","subExpression":{"id":605,"name":"upkeepNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"4919:12:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":622,"nodeType":"IfStatement","src":"4914:139:7","trueBody":{"id":621,"nodeType":"Block","src":"4933:120:7","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":610,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4986:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Raffle_$761","typeString":"contract Raffle"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Raffle_$761","typeString":"contract Raffle"}],"id":609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4978:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":608,"name":"address","nodeType":"ElementaryTypeName","src":"4978:7:7","typeDescriptions":{}}},"id":611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4978:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4992:7:7","memberName":"balance","nodeType":"MemberAccess","src":"4978:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":613,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"5001:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5011:6:7","memberName":"length","nodeType":"MemberAccess","src":"5001:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":617,"name":"s_raffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"5027:13:7","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$401","typeString":"enum Raffle.RaffleState"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RaffleState_$401","typeString":"enum Raffle.RaffleState"}],"id":616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5019:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":615,"name":"uint256","nodeType":"ElementaryTypeName","src":"5019:7:7","typeDescriptions":{}}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5019:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":607,"name":"Raffle__UpKeepNotNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"4954:23:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256) pure"}},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4954:88:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":620,"nodeType":"RevertStatement","src":"4947:95:7"}]}},{"expression":{"id":626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":623,"name":"s_raffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"5062:13:7","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$401","typeString":"enum Raffle.RaffleState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":624,"name":"RaffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"5078:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RaffleState_$401_$","typeString":"type(enum Raffle.RaffleState)"}},"id":625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5090:11:7","memberName":"CALCULATING","nodeType":"MemberAccess","referencedDeclaration":400,"src":"5078:23:7","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$401","typeString":"enum Raffle.RaffleState"}},"src":"5062:39:7","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$401","typeString":"enum Raffle.RaffleState"}},"id":627,"nodeType":"ExpressionStatement","src":"5062:39:7"},{"assignments":[629],"declarations":[{"constant":false,"id":629,"mutability":"mutable","name":"requestId","nameLocation":"5119:9:7","nodeType":"VariableDeclaration","scope":643,"src":"5111:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":628,"name":"uint256","nodeType":"ElementaryTypeName","src":"5111:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":638,"initialValue":{"arguments":[{"id":632,"name":"i_gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"5243:9:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":633,"name":"i_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"5352:16:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":634,"name":"REQUEST_CONFIRMATIONS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"5382:21:7","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":635,"name":"i_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"5417:18:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":636,"name":"NUM_WORDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"5449:9:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":630,"name":"i_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"5131:16:7","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$374","typeString":"contract VRFCoordinatorV2Interface"}},"id":631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5148:18:7","memberName":"requestRandomWords","nodeType":"MemberAccess","referencedDeclaration":307,"src":"5131:35:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_uint64_$_t_uint16_$_t_uint32_$_t_uint32_$returns$_t_uint256_$","typeString":"function (bytes32,uint64,uint16,uint32,uint32) external returns (uint256)"}},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5131:379:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5111:399:7"},{"eventCall":{"arguments":[{"id":640,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"5547:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":639,"name":"RequestedRaffleWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"5525:21:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5525:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":642,"nodeType":"EmitStatement","src":"5520:37:7"}]},"functionSelector":"4585e33b","id":644,"implemented":true,"kind":"function","modifiers":[],"name":"performUpkeep","nameLocation":"4618:13:7","nodeType":"FunctionDefinition","overrides":{"id":597,"nodeType":"OverrideSpecifier","overrides":[],"src":"4674:8:7"},"parameters":{"id":596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":595,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":644,"src":"4632:14:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":594,"name":"bytes","nodeType":"ElementaryTypeName","src":"4632:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4631:32:7"},"returnParameters":{"id":598,"nodeType":"ParameterList","parameters":[],"src":"4683:0:7"},"scope":761,"src":"4609:955:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[212],"body":{"id":714,"nodeType":"Block","src":"5670:781:7","statements":[{"assignments":[654],"declarations":[{"constant":false,"id":654,"mutability":"mutable","name":"indexOfWinner","nameLocation":"5760:13:7","nodeType":"VariableDeclaration","scope":714,"src":"5752:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":653,"name":"uint256","nodeType":"ElementaryTypeName","src":"5752:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":661,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":655,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"5776:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":657,"indexExpression":{"hexValue":"30","id":656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5788:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5776:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"expression":{"id":658,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"5793:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5803:6:7","memberName":"length","nodeType":"MemberAccess","src":"5793:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5776:33:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5752:57:7"},{"assignments":[663],"declarations":[{"constant":false,"id":663,"mutability":"mutable","name":"recentWinner","nameLocation":"5835:12:7","nodeType":"VariableDeclaration","scope":714,"src":"5819:28:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":662,"name":"address","nodeType":"ElementaryTypeName","src":"5819:15:7","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"id":667,"initialValue":{"baseExpression":{"id":664,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"5850:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":666,"indexExpression":{"id":665,"name":"indexOfWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"5860:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5850:24:7","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"VariableDeclarationStatement","src":"5819:55:7"},{"expression":{"id":670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":668,"name":"s_recentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"5884:14:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":669,"name":"recentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"5901:12:7","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"5884:29:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":671,"nodeType":"ExpressionStatement","src":"5884:29:7"},{"expression":{"id":675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":672,"name":"s_raffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"5923:13:7","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$401","typeString":"enum Raffle.RaffleState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":673,"name":"RaffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"5939:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RaffleState_$401_$","typeString":"type(enum Raffle.RaffleState)"}},"id":674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5951:4:7","memberName":"OPEN","nodeType":"MemberAccess","referencedDeclaration":399,"src":"5939:16:7","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$401","typeString":"enum Raffle.RaffleState"}},"src":"5923:32:7","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$401","typeString":"enum Raffle.RaffleState"}},"id":676,"nodeType":"ExpressionStatement","src":"5923:32:7"},{"expression":{"id":683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":677,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"6000:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6034:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6012:21:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_payable_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address payable[] memory)"},"typeName":{"baseType":{"id":678,"name":"address","nodeType":"ElementaryTypeName","src":"6016:15:7","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":679,"nodeType":"ArrayTypeName","src":"6016:17:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage_ptr","typeString":"address payable[]"}}},"id":682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6012:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_memory_ptr","typeString":"address payable[] memory"}},"src":"6000:36:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":684,"nodeType":"ExpressionStatement","src":"6000:36:7"},{"expression":{"id":688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":685,"name":"s_lastTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"6094:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":686,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6112:5:7","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6118:9:7","memberName":"timestamp","nodeType":"MemberAccess","src":"6112:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6094:33:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":689,"nodeType":"ExpressionStatement","src":"6094:33:7"},{"assignments":[691,null],"declarations":[{"constant":false,"id":691,"mutability":"mutable","name":"success","nameLocation":"6234:7:7","nodeType":"VariableDeclaration","scope":714,"src":"6229:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":690,"name":"bool","nodeType":"ElementaryTypeName","src":"6229:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":702,"initialValue":{"arguments":[{"hexValue":"","id":700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6295:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":692,"name":"recentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"6247:12:7","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6260:4:7","memberName":"call","nodeType":"MemberAccess","src":"6247:17:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"arguments":[{"id":696,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6280:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Raffle_$761","typeString":"contract Raffle"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Raffle_$761","typeString":"contract Raffle"}],"id":695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6272:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":694,"name":"address","nodeType":"ElementaryTypeName","src":"6272:7:7","typeDescriptions":{}}},"id":697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6272:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6286:7:7","memberName":"balance","nodeType":"MemberAccess","src":"6272:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"6247:47:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6247:51:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6228:70:7"},{"condition":{"id":704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6338:8:7","subExpression":{"id":703,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"6339:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":709,"nodeType":"IfStatement","src":"6335:69:7","trueBody":{"id":708,"nodeType":"Block","src":"6348:56:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":705,"name":"Raffle__TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6369:22:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6369:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":707,"nodeType":"RevertStatement","src":"6362:31:7"}]}},{"eventCall":{"arguments":[{"id":711,"name":"recentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"6431:12:7","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":710,"name":"WinnerPicked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"6418:12:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6418:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":713,"nodeType":"EmitStatement","src":"6413:31:7"}]},"id":715,"implemented":true,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"5579:18:7","nodeType":"FunctionDefinition","overrides":{"id":651,"nodeType":"OverrideSpecifier","overrides":[],"src":"5661:8:7"},"parameters":{"id":650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":646,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":715,"src":"5598:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":645,"name":"uint256","nodeType":"ElementaryTypeName","src":"5598:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":649,"mutability":"mutable","name":"randomWords","nameLocation":"5639:11:7","nodeType":"VariableDeclaration","scope":715,"src":"5622:28:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":647,"name":"uint256","nodeType":"ElementaryTypeName","src":"5622:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":648,"nodeType":"ArrayTypeName","src":"5622:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5597:54:7"},"returnParameters":{"id":652,"nodeType":"ParameterList","parameters":[],"src":"5670:0:7"},"scope":761,"src":"5570:881:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":722,"nodeType":"Block","src":"6544:37:7","statements":[{"expression":{"id":720,"name":"i_entranceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6561:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":719,"id":721,"nodeType":"Return","src":"6554:20:7"}]},"functionSelector":"09bc33a7","id":723,"implemented":true,"kind":"function","modifiers":[],"name":"getEntranceFee","nameLocation":"6498:14:7","nodeType":"FunctionDefinition","parameters":{"id":716,"nodeType":"ParameterList","parameters":[],"src":"6512:2:7"},"returnParameters":{"id":719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":718,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":723,"src":"6536:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":717,"name":"uint256","nodeType":"ElementaryTypeName","src":"6536:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6535:9:7"},"scope":761,"src":"6489:92:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":734,"nodeType":"Block","src":"6649:40:7","statements":[{"expression":{"baseExpression":{"id":730,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"6666:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":732,"indexExpression":{"id":731,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"6676:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6666:16:7","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"functionReturnParameters":729,"id":733,"nodeType":"Return","src":"6659:23:7"}]},"functionSelector":"e55ae4e8","id":735,"implemented":true,"kind":"function","modifiers":[],"name":"getPlayer","nameLocation":"6596:9:7","nodeType":"FunctionDefinition","parameters":{"id":726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":725,"mutability":"mutable","name":"index","nameLocation":"6614:5:7","nodeType":"VariableDeclaration","scope":735,"src":"6606:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":724,"name":"uint256","nodeType":"ElementaryTypeName","src":"6606:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6605:15:7"},"returnParameters":{"id":729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":728,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":735,"src":"6641:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":727,"name":"address","nodeType":"ElementaryTypeName","src":"6641:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6640:9:7"},"scope":761,"src":"6587:102:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":742,"nodeType":"Block","src":"6751:38:7","statements":[{"expression":{"id":740,"name":"s_recentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"6768:14:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":739,"id":741,"nodeType":"Return","src":"6761:21:7"}]},"functionSelector":"473f1ddc","id":743,"implemented":true,"kind":"function","modifiers":[],"name":"getRecentWinner","nameLocation":"6704:15:7","nodeType":"FunctionDefinition","parameters":{"id":736,"nodeType":"ParameterList","parameters":[],"src":"6719:2:7"},"returnParameters":{"id":739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":738,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":743,"src":"6742:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":737,"name":"address","nodeType":"ElementaryTypeName","src":"6742:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6741:9:7"},"scope":761,"src":"6695:94:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":751,"nodeType":"Block","src":"6854:37:7","statements":[{"expression":{"id":749,"name":"s_raffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"6871:13:7","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$401","typeString":"enum Raffle.RaffleState"}},"functionReturnParameters":748,"id":750,"nodeType":"Return","src":"6864:20:7"}]},"functionSelector":"115cbaf5","id":752,"implemented":true,"kind":"function","modifiers":[],"name":"getRaffleState","nameLocation":"6804:14:7","nodeType":"FunctionDefinition","parameters":{"id":744,"nodeType":"ParameterList","parameters":[],"src":"6818:2:7"},"returnParameters":{"id":748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":752,"src":"6841:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$401","typeString":"enum Raffle.RaffleState"},"typeName":{"id":746,"nodeType":"UserDefinedTypeName","pathNode":{"id":745,"name":"RaffleState","nameLocations":["6841:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":401,"src":"6841:11:7"},"referencedDeclaration":401,"src":"6841:11:7","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$401","typeString":"enum Raffle.RaffleState"}},"visibility":"internal"}],"src":"6840:13:7"},"scope":761,"src":"6795:96:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":759,"nodeType":"Block","src":"6949:33:7","statements":[{"expression":{"id":757,"name":"NUM_WORDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"6966:9:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":756,"id":758,"nodeType":"Return","src":"6959:16:7"}]},"functionSelector":"53a2c19a","id":760,"implemented":true,"kind":"function","modifiers":[],"name":"getNumWords","nameLocation":"6906:11:7","nodeType":"FunctionDefinition","parameters":{"id":753,"nodeType":"ParameterList","parameters":[],"src":"6917:2:7"},"returnParameters":{"id":756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":755,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":760,"src":"6940:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":754,"name":"uint256","nodeType":"ElementaryTypeName","src":"6940:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6939:9:7"},"scope":761,"src":"6897:85:7","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":762,"src":"823:6161:7","usedErrors":[190,382,384,386,394]}],"src":"267:6717:7"},"id":7}},"contracts":{"@chainlink/contracts/src/v0.8/ConfirmedOwner.sol":{"ConfirmedOwner":{"abi":[{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"title":"The ConfirmedOwner contract","version":1},"evm":{"bytecode":{"functionDebugData":{"@_18":{"entryPoint":null,"id":18,"parameterSlots":1,"returnSlots":0},"@_75":{"entryPoint":null,"id":75,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_159":{"entryPoint":303,"id":159,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":681,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":702,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack":{"entryPoint":805,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack":{"entryPoint":913,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":840,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":948,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":747,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":640,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":608,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":603,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2":{"entryPoint":764,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2":{"entryPoint":872,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":658,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3327:8","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:8","statements":[{"nodeType":"YulAssignment","src":"57:19:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:8","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:8"},"nodeType":"YulFunctionCall","src":"67:9:8"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:8"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:8","type":""}],"src":"7:75:8"},{"body":{"nodeType":"YulBlock","src":"177:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:8"},"nodeType":"YulFunctionCall","src":"187:12:8"},"nodeType":"YulExpressionStatement","src":"187:12:8"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:8"},{"body":{"nodeType":"YulBlock","src":"300:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:8"},"nodeType":"YulFunctionCall","src":"310:12:8"},"nodeType":"YulExpressionStatement","src":"310:12:8"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:8"},{"body":{"nodeType":"YulBlock","src":"379:81:8","statements":[{"nodeType":"YulAssignment","src":"389:65:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:8","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:8"},"nodeType":"YulFunctionCall","src":"400:54:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:8"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:8","type":""}],"src":"334:126:8"},{"body":{"nodeType":"YulBlock","src":"511:51:8","statements":[{"nodeType":"YulAssignment","src":"521:35:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:8"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:8"},"nodeType":"YulFunctionCall","src":"532:24:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:8"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:8","type":""}],"src":"466:96:8"},{"body":{"nodeType":"YulBlock","src":"611:79:8","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:8"},"nodeType":"YulFunctionCall","src":"670:12:8"},"nodeType":"YulExpressionStatement","src":"670:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:8"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:8"},"nodeType":"YulFunctionCall","src":"641:24:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:8"},"nodeType":"YulFunctionCall","src":"631:35:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:8"},"nodeType":"YulFunctionCall","src":"624:43:8"},"nodeType":"YulIf","src":"621:63:8"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:8","type":""}],"src":"568:122:8"},{"body":{"nodeType":"YulBlock","src":"759:80:8","statements":[{"nodeType":"YulAssignment","src":"769:22:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:8"},"nodeType":"YulFunctionCall","src":"778:13:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:8"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:8"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:8"},"nodeType":"YulFunctionCall","src":"800:33:8"},"nodeType":"YulExpressionStatement","src":"800:33:8"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:8","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:8","type":""}],"src":"696:143:8"},{"body":{"nodeType":"YulBlock","src":"922:274:8","statements":[{"body":{"nodeType":"YulBlock","src":"968:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"970:77:8"},"nodeType":"YulFunctionCall","src":"970:79:8"},"nodeType":"YulExpressionStatement","src":"970:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"943:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"952:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"939:3:8"},"nodeType":"YulFunctionCall","src":"939:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"964:2:8","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"935:3:8"},"nodeType":"YulFunctionCall","src":"935:32:8"},"nodeType":"YulIf","src":"932:119:8"},{"nodeType":"YulBlock","src":"1061:128:8","statements":[{"nodeType":"YulVariableDeclaration","src":"1076:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"1090:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1080:6:8","type":""}]},{"nodeType":"YulAssignment","src":"1105:74:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"1162:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1147:3:8"},"nodeType":"YulFunctionCall","src":"1147:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1171:7:8"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1115:31:8"},"nodeType":"YulFunctionCall","src":"1115:64:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1105:6:8"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"892:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"903:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"915:6:8","type":""}],"src":"845:351:8"},{"body":{"nodeType":"YulBlock","src":"1298:73:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1315:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"1320:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1308:6:8"},"nodeType":"YulFunctionCall","src":"1308:19:8"},"nodeType":"YulExpressionStatement","src":"1308:19:8"},{"nodeType":"YulAssignment","src":"1336:29:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1355:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"1360:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1351:3:8"},"nodeType":"YulFunctionCall","src":"1351:14:8"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1336:11:8"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1270:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"1275:6:8","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1286:11:8","type":""}],"src":"1202:169:8"},{"body":{"nodeType":"YulBlock","src":"1483:68:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1505:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"1513:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1501:3:8"},"nodeType":"YulFunctionCall","src":"1501:14:8"},{"hexValue":"43616e6e6f7420736574206f776e657220746f207a65726f","kind":"string","nodeType":"YulLiteral","src":"1517:26:8","type":"","value":"Cannot set owner to zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1494:6:8"},"nodeType":"YulFunctionCall","src":"1494:50:8"},"nodeType":"YulExpressionStatement","src":"1494:50:8"}]},"name":"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1475:6:8","type":""}],"src":"1377:174:8"},{"body":{"nodeType":"YulBlock","src":"1703:220:8","statements":[{"nodeType":"YulAssignment","src":"1713:74:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1779:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"1784:2:8","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1720:58:8"},"nodeType":"YulFunctionCall","src":"1720:67:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1713:3:8"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1885:3:8"}],"functionName":{"name":"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","nodeType":"YulIdentifier","src":"1796:88:8"},"nodeType":"YulFunctionCall","src":"1796:93:8"},"nodeType":"YulExpressionStatement","src":"1796:93:8"},{"nodeType":"YulAssignment","src":"1898:19:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1909:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"1914:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1905:3:8"},"nodeType":"YulFunctionCall","src":"1905:12:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1898:3:8"}]}]},"name":"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1699:3:8","type":""}],"src":"1557:366:8"},{"body":{"nodeType":"YulBlock","src":"2100:248:8","statements":[{"nodeType":"YulAssignment","src":"2110:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2122:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2133:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2118:3:8"},"nodeType":"YulFunctionCall","src":"2118:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2110:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2157:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2168:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2153:3:8"},"nodeType":"YulFunctionCall","src":"2153:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2176:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"2182:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2172:3:8"},"nodeType":"YulFunctionCall","src":"2172:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2146:6:8"},"nodeType":"YulFunctionCall","src":"2146:47:8"},"nodeType":"YulExpressionStatement","src":"2146:47:8"},{"nodeType":"YulAssignment","src":"2202:139:8","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2336:4:8"}],"functionName":{"name":"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2210:124:8"},"nodeType":"YulFunctionCall","src":"2210:131:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2202:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2080:9:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2095:4:8","type":""}],"src":"1929:419:8"},{"body":{"nodeType":"YulBlock","src":"2460:67:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2482:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"2490:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2478:3:8"},"nodeType":"YulFunctionCall","src":"2478:14:8"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"2494:25:8","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2471:6:8"},"nodeType":"YulFunctionCall","src":"2471:49:8"},"nodeType":"YulExpressionStatement","src":"2471:49:8"}]},"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2452:6:8","type":""}],"src":"2354:173:8"},{"body":{"nodeType":"YulBlock","src":"2679:220:8","statements":[{"nodeType":"YulAssignment","src":"2689:74:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2755:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"2760:2:8","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2696:58:8"},"nodeType":"YulFunctionCall","src":"2696:67:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2689:3:8"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2861:3:8"}],"functionName":{"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulIdentifier","src":"2772:88:8"},"nodeType":"YulFunctionCall","src":"2772:93:8"},"nodeType":"YulExpressionStatement","src":"2772:93:8"},{"nodeType":"YulAssignment","src":"2874:19:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2885:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"2890:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2881:3:8"},"nodeType":"YulFunctionCall","src":"2881:12:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2874:3:8"}]}]},"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2667:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2675:3:8","type":""}],"src":"2533:366:8"},{"body":{"nodeType":"YulBlock","src":"3076:248:8","statements":[{"nodeType":"YulAssignment","src":"3086:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3098:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3109:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3094:3:8"},"nodeType":"YulFunctionCall","src":"3094:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3086:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3133:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3144:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3129:3:8"},"nodeType":"YulFunctionCall","src":"3129:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3152:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"3158:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3148:3:8"},"nodeType":"YulFunctionCall","src":"3148:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3122:6:8"},"nodeType":"YulFunctionCall","src":"3122:47:8"},"nodeType":"YulExpressionStatement","src":"3122:47:8"},{"nodeType":"YulAssignment","src":"3178:139:8","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3312:4:8"}],"functionName":{"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3186:124:8"},"nodeType":"YulFunctionCall","src":"3186:131:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3178:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3056:9:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3071:4:8","type":""}],"src":"2905:419:8"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot set owner to zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":8,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b50604051610a40380380610a40833981810160405281019061003291906102be565b8060008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036100a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161009a90610348565b60405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610127576101268161012f60201b60201c565b5b5050506103d4565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361019d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610194906103b4565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061028b82610260565b9050919050565b61029b81610280565b81146102a657600080fd5b50565b6000815190506102b881610292565b92915050565b6000602082840312156102d4576102d361025b565b5b60006102e2848285016102a9565b91505092915050565b600082825260208201905092915050565b7f43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000600082015250565b60006103326018836102eb565b915061033d826102fc565b602082019050919050565b6000602082019050818103600083015261036181610325565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b600061039e6017836102eb565b91506103a982610368565b602082019050919050565b600060208201905081810360008301526103cd81610391565b9050919050565b61065d806103e36000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b61005861021f565b6040516100659190610459565b60405180910390f35b610088600480360381019061008391906104a5565b610248565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461011a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101119061052f565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61025061025c565b610259816102ec565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e19061059b565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361035a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035190610607565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061044382610418565b9050919050565b61045381610438565b82525050565b600060208201905061046e600083018461044a565b92915050565b600080fd5b61048281610438565b811461048d57600080fd5b50565b60008135905061049f81610479565b92915050565b6000602082840312156104bb576104ba610474565b5b60006104c984828501610490565b91505092915050565b600082825260208201905092915050565b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b60006105196016836104d2565b9150610524826104e3565b602082019050919050565b600060208201905081810360008301526105488161050c565b9050919050565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b60006105856016836104d2565b91506105908261054f565b602082019050919050565b600060208201905081810360008301526105b481610578565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b60006105f16017836104d2565b91506105fc826105bb565b602082019050919050565b60006020820190508181036000830152610620816105e4565b905091905056fea2646970667358221220557375f0153c99126a8eeae64865ce495155613a7d8f1c7325f731d413a912b464736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xA40 CODESIZE SUB DUP1 PUSH2 0xA40 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x2BE JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A SWAP1 PUSH2 0x348 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x127 JUMPI PUSH2 0x126 DUP2 PUSH2 0x12F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST POP POP POP PUSH2 0x3D4 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x194 SWAP1 PUSH2 0x3B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28B DUP3 PUSH2 0x260 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29B DUP2 PUSH2 0x280 JUMP JUMPDEST DUP2 EQ PUSH2 0x2A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2B8 DUP2 PUSH2 0x292 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D4 JUMPI PUSH2 0x2D3 PUSH2 0x25B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E2 DUP5 DUP3 DUP6 ADD PUSH2 0x2A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x332 PUSH1 0x18 DUP4 PUSH2 0x2EB JUMP JUMPDEST SWAP2 POP PUSH2 0x33D DUP3 PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x361 DUP2 PUSH2 0x325 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39E PUSH1 0x17 DUP4 PUSH2 0x2EB JUMP JUMPDEST SWAP2 POP PUSH2 0x3A9 DUP3 PUSH2 0x368 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3CD DUP2 PUSH2 0x391 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x65D DUP1 PUSH2 0x3E3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x21F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x459 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x248 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111 SWAP1 PUSH2 0x52F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x25C JUMP JUMPDEST PUSH2 0x259 DUP2 PUSH2 0x2EC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E1 SWAP1 PUSH2 0x59B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x35A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x351 SWAP1 PUSH2 0x607 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x443 DUP3 PUSH2 0x418 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x453 DUP2 PUSH2 0x438 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x46E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x44A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x482 DUP2 PUSH2 0x438 JUMP JUMPDEST DUP2 EQ PUSH2 0x48D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x49F DUP2 PUSH2 0x479 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4BB JUMPI PUSH2 0x4BA PUSH2 0x474 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4C9 DUP5 DUP3 DUP6 ADD PUSH2 0x490 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x519 PUSH1 0x16 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x524 DUP3 PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x548 DUP2 PUSH2 0x50C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x585 PUSH1 0x16 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x590 DUP3 PUSH2 0x54F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5B4 DUP2 PUSH2 0x578 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F1 PUSH1 0x17 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x5FC DUP3 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x620 DUP2 PUSH2 0x5E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE PUSH20 0x75F0153C99126A8EEAE64865CE495155613A7D8F SHR PUSH20 0x25F731D413A912B464736F6C6343000812003300 ","sourceMap":"212:141:0:-:0;;;270:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;327:8;345:1;572::1;552:22;;:8;:22;;;544:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;620:8;610:7;;:18;;;;;;;;;;;;;;;;;;662:1;638:26;;:12;:26;;;634:79;;674:32;693:12;674:18;;;:32;;:::i;:::-;634:79;486:231;;270:81:0;212:141;;1497:188:1;1565:10;1559:16;;:2;:16;;;1551:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1627:2;1610:14;;:19;;;;;;;;;;;;;;;;;;1677:2;1641:39;;1668:7;;;;;;;;;;1641:39;;;;;;;;;;;;1497:188;:::o;88:117:8:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:169::-;1286:11;1320:6;1315:3;1308:19;1360:4;1355:3;1351:14;1336:29;;1202:169;;;;:::o;1377:174::-;1517:26;1513:1;1505:6;1501:14;1494:50;1377:174;:::o;1557:366::-;1699:3;1720:67;1784:2;1779:3;1720:67;:::i;:::-;1713:74;;1796:93;1885:3;1796:93;:::i;:::-;1914:2;1909:3;1905:12;1898:19;;1557:366;;;:::o;1929:419::-;2095:4;2133:2;2122:9;2118:18;2110:26;;2182:9;2176:4;2172:20;2168:1;2157:9;2153:17;2146:47;2210:131;2336:4;2210:131;:::i;:::-;2202:139;;1929:419;;;:::o;2354:173::-;2494:25;2490:1;2482:6;2478:14;2471:49;2354:173;:::o;2533:366::-;2675:3;2696:67;2760:2;2755:3;2696:67;:::i;:::-;2689:74;;2772:93;2861:3;2772:93;:::i;:::-;2890:2;2885:3;2881:12;2874:19;;2533:366;;;:::o;2905:419::-;3071:4;3109:2;3098:9;3094:18;3086:26;;3158:9;3152:4;3148:20;3144:1;3133:9;3129:17;3122:47;3186:131;3312:4;3186:131;:::i;:::-;3178:139;;2905:419;;;:::o;212:141:0:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_transferOwnership_159":{"entryPoint":748,"id":159,"parameterSlots":1,"returnSlots":0},"@_validateOwnership_172":{"entryPoint":604,"id":172,"parameterSlots":0,"returnSlots":0},"@acceptOwnership_125":{"entryPoint":138,"id":125,"parameterSlots":0,"returnSlots":0},"@owner_135":{"entryPoint":543,"id":135,"parameterSlots":0,"returnSlots":1},"@transferOwnership_89":{"entryPoint":584,"id":89,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":1168,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1189,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1098,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack":{"entryPoint":1292,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack":{"entryPoint":1400,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack":{"entryPoint":1508,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1113,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1327,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1435,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1543,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1234,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1080,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1048,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1140,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c":{"entryPoint":1251,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3":{"entryPoint":1359,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2":{"entryPoint":1467,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1145,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4626:8","statements":[{"body":{"nodeType":"YulBlock","src":"52:81:8","statements":[{"nodeType":"YulAssignment","src":"62:65:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"84:42:8","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"73:3:8"},"nodeType":"YulFunctionCall","src":"73:54:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:8"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:8","type":""}],"src":"7:126:8"},{"body":{"nodeType":"YulBlock","src":"184:51:8","statements":[{"nodeType":"YulAssignment","src":"194:35:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:8"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"205:17:8"},"nodeType":"YulFunctionCall","src":"205:24:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"194:7:8"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"166:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"176:7:8","type":""}],"src":"139:96:8"},{"body":{"nodeType":"YulBlock","src":"306:53:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"323:3:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"346:5:8"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"328:17:8"},"nodeType":"YulFunctionCall","src":"328:24:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"316:6:8"},"nodeType":"YulFunctionCall","src":"316:37:8"},"nodeType":"YulExpressionStatement","src":"316:37:8"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"294:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"301:3:8","type":""}],"src":"241:118:8"},{"body":{"nodeType":"YulBlock","src":"463:124:8","statements":[{"nodeType":"YulAssignment","src":"473:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"485:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"496:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"481:3:8"},"nodeType":"YulFunctionCall","src":"481:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"473:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"553:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"566:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"577:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"562:3:8"},"nodeType":"YulFunctionCall","src":"562:17:8"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"509:43:8"},"nodeType":"YulFunctionCall","src":"509:71:8"},"nodeType":"YulExpressionStatement","src":"509:71:8"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"435:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"447:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"458:4:8","type":""}],"src":"365:222:8"},{"body":{"nodeType":"YulBlock","src":"633:35:8","statements":[{"nodeType":"YulAssignment","src":"643:19:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"659:2:8","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"653:5:8"},"nodeType":"YulFunctionCall","src":"653:9:8"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"643:6:8"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"626:6:8","type":""}],"src":"593:75:8"},{"body":{"nodeType":"YulBlock","src":"763:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"780:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"783:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"773:6:8"},"nodeType":"YulFunctionCall","src":"773:12:8"},"nodeType":"YulExpressionStatement","src":"773:12:8"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"674:117:8"},{"body":{"nodeType":"YulBlock","src":"886:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"903:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"906:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"896:6:8"},"nodeType":"YulFunctionCall","src":"896:12:8"},"nodeType":"YulExpressionStatement","src":"896:12:8"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"797:117:8"},{"body":{"nodeType":"YulBlock","src":"963:79:8","statements":[{"body":{"nodeType":"YulBlock","src":"1020:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1029:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1032:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1022:6:8"},"nodeType":"YulFunctionCall","src":"1022:12:8"},"nodeType":"YulExpressionStatement","src":"1022:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"986:5:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1011:5:8"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"993:17:8"},"nodeType":"YulFunctionCall","src":"993:24:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"983:2:8"},"nodeType":"YulFunctionCall","src":"983:35:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"976:6:8"},"nodeType":"YulFunctionCall","src":"976:43:8"},"nodeType":"YulIf","src":"973:63:8"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"956:5:8","type":""}],"src":"920:122:8"},{"body":{"nodeType":"YulBlock","src":"1100:87:8","statements":[{"nodeType":"YulAssignment","src":"1110:29:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1132:6:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1119:12:8"},"nodeType":"YulFunctionCall","src":"1119:20:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1110:5:8"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1175:5:8"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1148:26:8"},"nodeType":"YulFunctionCall","src":"1148:33:8"},"nodeType":"YulExpressionStatement","src":"1148:33:8"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1078:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"1086:3:8","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1094:5:8","type":""}],"src":"1048:139:8"},{"body":{"nodeType":"YulBlock","src":"1259:263:8","statements":[{"body":{"nodeType":"YulBlock","src":"1305:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1307:77:8"},"nodeType":"YulFunctionCall","src":"1307:79:8"},"nodeType":"YulExpressionStatement","src":"1307:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1280:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"1289:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1276:3:8"},"nodeType":"YulFunctionCall","src":"1276:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"1301:2:8","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1272:3:8"},"nodeType":"YulFunctionCall","src":"1272:32:8"},"nodeType":"YulIf","src":"1269:119:8"},{"nodeType":"YulBlock","src":"1398:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"1413:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"1427:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1417:6:8","type":""}]},{"nodeType":"YulAssignment","src":"1442:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1477:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"1488:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1473:3:8"},"nodeType":"YulFunctionCall","src":"1473:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1497:7:8"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1452:20:8"},"nodeType":"YulFunctionCall","src":"1452:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1442:6:8"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1229:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1240:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1252:6:8","type":""}],"src":"1193:329:8"},{"body":{"nodeType":"YulBlock","src":"1624:73:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1641:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"1646:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1634:6:8"},"nodeType":"YulFunctionCall","src":"1634:19:8"},"nodeType":"YulExpressionStatement","src":"1634:19:8"},{"nodeType":"YulAssignment","src":"1662:29:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1681:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"1686:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1677:3:8"},"nodeType":"YulFunctionCall","src":"1677:14:8"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1662:11:8"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1596:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"1601:6:8","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1612:11:8","type":""}],"src":"1528:169:8"},{"body":{"nodeType":"YulBlock","src":"1809:66:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1831:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"1839:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1827:3:8"},"nodeType":"YulFunctionCall","src":"1827:14:8"},{"hexValue":"4d7573742062652070726f706f736564206f776e6572","kind":"string","nodeType":"YulLiteral","src":"1843:24:8","type":"","value":"Must be proposed owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1820:6:8"},"nodeType":"YulFunctionCall","src":"1820:48:8"},"nodeType":"YulExpressionStatement","src":"1820:48:8"}]},"name":"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1801:6:8","type":""}],"src":"1703:172:8"},{"body":{"nodeType":"YulBlock","src":"2027:220:8","statements":[{"nodeType":"YulAssignment","src":"2037:74:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2103:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"2108:2:8","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2044:58:8"},"nodeType":"YulFunctionCall","src":"2044:67:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2037:3:8"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2209:3:8"}],"functionName":{"name":"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","nodeType":"YulIdentifier","src":"2120:88:8"},"nodeType":"YulFunctionCall","src":"2120:93:8"},"nodeType":"YulExpressionStatement","src":"2120:93:8"},{"nodeType":"YulAssignment","src":"2222:19:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2233:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"2238:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2229:3:8"},"nodeType":"YulFunctionCall","src":"2229:12:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2222:3:8"}]}]},"name":"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2015:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2023:3:8","type":""}],"src":"1881:366:8"},{"body":{"nodeType":"YulBlock","src":"2424:248:8","statements":[{"nodeType":"YulAssignment","src":"2434:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2446:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2457:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2442:3:8"},"nodeType":"YulFunctionCall","src":"2442:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2434:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2481:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2492:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2477:3:8"},"nodeType":"YulFunctionCall","src":"2477:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2500:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"2506:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2496:3:8"},"nodeType":"YulFunctionCall","src":"2496:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2470:6:8"},"nodeType":"YulFunctionCall","src":"2470:47:8"},"nodeType":"YulExpressionStatement","src":"2470:47:8"},{"nodeType":"YulAssignment","src":"2526:139:8","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2660:4:8"}],"functionName":{"name":"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2534:124:8"},"nodeType":"YulFunctionCall","src":"2534:131:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2526:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2404:9:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2419:4:8","type":""}],"src":"2253:419:8"},{"body":{"nodeType":"YulBlock","src":"2784:66:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2806:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"2814:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2802:3:8"},"nodeType":"YulFunctionCall","src":"2802:14:8"},{"hexValue":"4f6e6c792063616c6c61626c65206279206f776e6572","kind":"string","nodeType":"YulLiteral","src":"2818:24:8","type":"","value":"Only callable by owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2795:6:8"},"nodeType":"YulFunctionCall","src":"2795:48:8"},"nodeType":"YulExpressionStatement","src":"2795:48:8"}]},"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2776:6:8","type":""}],"src":"2678:172:8"},{"body":{"nodeType":"YulBlock","src":"3002:220:8","statements":[{"nodeType":"YulAssignment","src":"3012:74:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3078:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"3083:2:8","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3019:58:8"},"nodeType":"YulFunctionCall","src":"3019:67:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3012:3:8"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3184:3:8"}],"functionName":{"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nodeType":"YulIdentifier","src":"3095:88:8"},"nodeType":"YulFunctionCall","src":"3095:93:8"},"nodeType":"YulExpressionStatement","src":"3095:93:8"},{"nodeType":"YulAssignment","src":"3197:19:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3208:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"3213:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3204:3:8"},"nodeType":"YulFunctionCall","src":"3204:12:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3197:3:8"}]}]},"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2990:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2998:3:8","type":""}],"src":"2856:366:8"},{"body":{"nodeType":"YulBlock","src":"3399:248:8","statements":[{"nodeType":"YulAssignment","src":"3409:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3421:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3432:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3417:3:8"},"nodeType":"YulFunctionCall","src":"3417:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3409:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3456:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3467:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3452:3:8"},"nodeType":"YulFunctionCall","src":"3452:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3475:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"3481:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3471:3:8"},"nodeType":"YulFunctionCall","src":"3471:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3445:6:8"},"nodeType":"YulFunctionCall","src":"3445:47:8"},"nodeType":"YulExpressionStatement","src":"3445:47:8"},{"nodeType":"YulAssignment","src":"3501:139:8","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3635:4:8"}],"functionName":{"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3509:124:8"},"nodeType":"YulFunctionCall","src":"3509:131:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3501:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3379:9:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3394:4:8","type":""}],"src":"3228:419:8"},{"body":{"nodeType":"YulBlock","src":"3759:67:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3781:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"3789:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3777:3:8"},"nodeType":"YulFunctionCall","src":"3777:14:8"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"3793:25:8","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3770:6:8"},"nodeType":"YulFunctionCall","src":"3770:49:8"},"nodeType":"YulExpressionStatement","src":"3770:49:8"}]},"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3751:6:8","type":""}],"src":"3653:173:8"},{"body":{"nodeType":"YulBlock","src":"3978:220:8","statements":[{"nodeType":"YulAssignment","src":"3988:74:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4054:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"4059:2:8","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3995:58:8"},"nodeType":"YulFunctionCall","src":"3995:67:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3988:3:8"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4160:3:8"}],"functionName":{"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulIdentifier","src":"4071:88:8"},"nodeType":"YulFunctionCall","src":"4071:93:8"},"nodeType":"YulExpressionStatement","src":"4071:93:8"},{"nodeType":"YulAssignment","src":"4173:19:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4184:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"4189:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4180:3:8"},"nodeType":"YulFunctionCall","src":"4180:12:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4173:3:8"}]}]},"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3966:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3974:3:8","type":""}],"src":"3832:366:8"},{"body":{"nodeType":"YulBlock","src":"4375:248:8","statements":[{"nodeType":"YulAssignment","src":"4385:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4397:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"4408:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4393:3:8"},"nodeType":"YulFunctionCall","src":"4393:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4385:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4432:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"4443:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4428:3:8"},"nodeType":"YulFunctionCall","src":"4428:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4451:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"4457:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4447:3:8"},"nodeType":"YulFunctionCall","src":"4447:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4421:6:8"},"nodeType":"YulFunctionCall","src":"4421:47:8"},"nodeType":"YulExpressionStatement","src":"4421:47:8"},{"nodeType":"YulAssignment","src":"4477:139:8","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4611:4:8"}],"functionName":{"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4485:124:8"},"nodeType":"YulFunctionCall","src":"4485:131:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4477:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4355:9:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4370:4:8","type":""}],"src":"4204:419:8"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must be proposed owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only callable by owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":8,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b61005861021f565b6040516100659190610459565b60405180910390f35b610088600480360381019061008391906104a5565b610248565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461011a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101119061052f565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61025061025c565b610259816102ec565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e19061059b565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361035a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035190610607565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061044382610418565b9050919050565b61045381610438565b82525050565b600060208201905061046e600083018461044a565b92915050565b600080fd5b61048281610438565b811461048d57600080fd5b50565b60008135905061049f81610479565b92915050565b6000602082840312156104bb576104ba610474565b5b60006104c984828501610490565b91505092915050565b600082825260208201905092915050565b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b60006105196016836104d2565b9150610524826104e3565b602082019050919050565b600060208201905081810360008301526105488161050c565b9050919050565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b60006105856016836104d2565b91506105908261054f565b602082019050919050565b600060208201905081810360008301526105b481610578565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b60006105f16017836104d2565b91506105fc826105bb565b602082019050919050565b60006020820190508181036000830152610620816105e4565b905091905056fea2646970667358221220557375f0153c99126a8eeae64865ce495155613a7d8f1c7325f731d413a912b464736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x21F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x459 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x248 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111 SWAP1 PUSH2 0x52F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x25C JUMP JUMPDEST PUSH2 0x259 DUP2 PUSH2 0x2EC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E1 SWAP1 PUSH2 0x59B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x35A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x351 SWAP1 PUSH2 0x607 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x443 DUP3 PUSH2 0x418 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x453 DUP2 PUSH2 0x438 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x46E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x44A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x482 DUP2 PUSH2 0x438 JUMP JUMPDEST DUP2 EQ PUSH2 0x48D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x49F DUP2 PUSH2 0x479 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4BB JUMPI PUSH2 0x4BA PUSH2 0x474 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4C9 DUP5 DUP3 DUP6 ADD PUSH2 0x490 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x519 PUSH1 0x16 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x524 DUP3 PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x548 DUP2 PUSH2 0x50C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x585 PUSH1 0x16 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x590 DUP3 PUSH2 0x54F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5B4 DUP2 PUSH2 0x578 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F1 PUSH1 0x17 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x5FC DUP3 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x620 DUP2 PUSH2 0x5E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE PUSH20 0x75F0153C99126A8EEAE64865CE495155613A7D8F SHR PUSH20 0x25F731D413A912B464736F6C6343000812003300 ","sourceMap":"212:141:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1016:265:1;;;:::i;:::-;;1332:81;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;826:98;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1016:265;1089:14;;;;;;;;;;;1075:28;;:10;:28;;;1067:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1137:16;1156:7;;;;;;;;;;;1137:26;;1179:10;1169:7;;:20;;;;;;;;;;;;;;;;;;1220:1;1195:14;;:27;;;;;;;;;;;;;;;;;;1265:10;1234:42;;1255:8;1234:42;;;;;;;;;;;;1061:220;1016:265::o;1332:81::-;1379:7;1401;;;;;;;;;;;1394:14;;1332:81;:::o;826:98::-;1956:20;:18;:20::i;:::-;897:22:::1;916:2;897:18;:22::i;:::-;826:98:::0;:::o;1730:111::-;1802:7;;;;;;;;;;1788:21;;:10;:21;;;1780:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1730:111::o;1497:188::-;1565:10;1559:16;;:2;:16;;;1551:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1627:2;1610:14;;:19;;;;;;;;;;;;;;;;;;1677:2;1641:39;;1668:7;;;;;;;;;;1641:39;;;;;;;;;;;;1497:188;:::o;7:126:8:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:329::-;1252:6;1301:2;1289:9;1280:7;1276:23;1272:32;1269:119;;;1307:79;;:::i;:::-;1269:119;1427:1;1452:53;1497:7;1488:6;1477:9;1473:22;1452:53;:::i;:::-;1442:63;;1398:117;1193:329;;;;:::o;1528:169::-;1612:11;1646:6;1641:3;1634:19;1686:4;1681:3;1677:14;1662:29;;1528:169;;;;:::o;1703:172::-;1843:24;1839:1;1831:6;1827:14;1820:48;1703:172;:::o;1881:366::-;2023:3;2044:67;2108:2;2103:3;2044:67;:::i;:::-;2037:74;;2120:93;2209:3;2120:93;:::i;:::-;2238:2;2233:3;2229:12;2222:19;;1881:366;;;:::o;2253:419::-;2419:4;2457:2;2446:9;2442:18;2434:26;;2506:9;2500:4;2496:20;2492:1;2481:9;2477:17;2470:47;2534:131;2660:4;2534:131;:::i;:::-;2526:139;;2253:419;;;:::o;2678:172::-;2818:24;2814:1;2806:6;2802:14;2795:48;2678:172;:::o;2856:366::-;2998:3;3019:67;3083:2;3078:3;3019:67;:::i;:::-;3012:74;;3095:93;3184:3;3095:93;:::i;:::-;3213:2;3208:3;3204:12;3197:19;;2856:366;;;:::o;3228:419::-;3394:4;3432:2;3421:9;3417:18;3409:26;;3481:9;3475:4;3471:20;3467:1;3456:9;3452:17;3445:47;3509:131;3635:4;3509:131;:::i;:::-;3501:139;;3228:419;;;:::o;3653:173::-;3793:25;3789:1;3781:6;3777:14;3770:49;3653:173;:::o;3832:366::-;3974:3;3995:67;4059:2;4054:3;3995:67;:::i;:::-;3988:74;;4071:93;4160:3;4071:93;:::i;:::-;4189:2;4184:3;4180:12;4173:19;;3832:366;;;:::o;4204:419::-;4370:4;4408:2;4397:9;4393:18;4385:26;;4457:9;4451:4;4447:20;4443:1;4432:9;4428:17;4421:47;4485:131;4611:4;4485:131;:::i;:::-;4477:139;;4204:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"325800","executionCost":"infinite","totalCost":"infinite"},"external":{"acceptOwnership()":"54518","owner()":"2522","transferOwnership(address)":"30676"}},"methodIdentifiers":{"acceptOwnership()":"79ba5097","owner()":"8da5cb5b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"The ConfirmedOwner contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address, pending.\"}},\"notice\":\"A contract with helpers for basic contract ownership.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/ConfirmedOwner.sol\":\"ConfirmedOwner\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/ConfirmedOwner.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./ConfirmedOwnerWithProposal.sol\\\";\\n\\n/**\\n * @title The ConfirmedOwner contract\\n * @notice A contract with helpers for basic contract ownership.\\n */\\ncontract ConfirmedOwner is ConfirmedOwnerWithProposal {\\n  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {}\\n}\\n\",\"keccak256\":\"0x99d0b0786fe368970009c703f2249bfbc56340ddf1a28b60d2915bb58c34cd72\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./interfaces/OwnableInterface.sol\\\";\\n\\n/**\\n * @title The ConfirmedOwner contract\\n * @notice A contract with helpers for basic contract ownership.\\n */\\ncontract ConfirmedOwnerWithProposal is OwnableInterface {\\n  address private s_owner;\\n  address private s_pendingOwner;\\n\\n  event OwnershipTransferRequested(address indexed from, address indexed to);\\n  event OwnershipTransferred(address indexed from, address indexed to);\\n\\n  constructor(address newOwner, address pendingOwner) {\\n    require(newOwner != address(0), \\\"Cannot set owner to zero\\\");\\n\\n    s_owner = newOwner;\\n    if (pendingOwner != address(0)) {\\n      _transferOwnership(pendingOwner);\\n    }\\n  }\\n\\n  /**\\n   * @notice Allows an owner to begin transferring ownership to a new address,\\n   * pending.\\n   */\\n  function transferOwnership(address to) public override onlyOwner {\\n    _transferOwnership(to);\\n  }\\n\\n  /**\\n   * @notice Allows an ownership transfer to be completed by the recipient.\\n   */\\n  function acceptOwnership() external override {\\n    require(msg.sender == s_pendingOwner, \\\"Must be proposed owner\\\");\\n\\n    address oldOwner = s_owner;\\n    s_owner = msg.sender;\\n    s_pendingOwner = address(0);\\n\\n    emit OwnershipTransferred(oldOwner, msg.sender);\\n  }\\n\\n  /**\\n   * @notice Get the current owner\\n   */\\n  function owner() public view override returns (address) {\\n    return s_owner;\\n  }\\n\\n  /**\\n   * @notice validate, transfer ownership, and emit relevant events\\n   */\\n  function _transferOwnership(address to) private {\\n    require(to != msg.sender, \\\"Cannot transfer to self\\\");\\n\\n    s_pendingOwner = to;\\n\\n    emit OwnershipTransferRequested(s_owner, to);\\n  }\\n\\n  /**\\n   * @notice validate access\\n   */\\n  function _validateOwnership() internal view {\\n    require(msg.sender == s_owner, \\\"Only callable by owner\\\");\\n  }\\n\\n  /**\\n   * @notice Reverts if called by anyone other than the contract owner.\\n   */\\n  modifier onlyOwner() {\\n    _validateOwnership();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0xa2f137a1d066795aeac76226e58f33c982278cdd34b4f09e5a2243d5a0924654\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface OwnableInterface {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0xb8b3a97783dddc198b790c4cec1eda7fb47aa38cbaea6555220d0ed8c735c086\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":27,"contract":"@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner","label":"s_owner","offset":0,"slot":"0","type":"t_address"},{"astId":29,"contract":"@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner","label":"s_pendingOwner","offset":0,"slot":"1","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{"acceptOwnership()":{"notice":"Allows an ownership transfer to be completed by the recipient."},"owner()":{"notice":"Get the current owner"},"transferOwnership(address)":{"notice":"Allows an owner to begin transferring ownership to a new address, pending."}},"notice":"A contract with helpers for basic contract ownership.","version":1}}},"@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol":{"ConfirmedOwnerWithProposal":{"abi":[{"inputs":[{"internalType":"address","name":"newOwner","type":"address"},{"internalType":"address","name":"pendingOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"title":"The ConfirmedOwner contract","version":1},"evm":{"bytecode":{"functionDebugData":{"@_75":{"entryPoint":null,"id":75,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_159":{"entryPoint":300,"id":159,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":678,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":699,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack":{"entryPoint":821,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack":{"entryPoint":929,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":856,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":964,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":763,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":637,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":605,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":600,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2":{"entryPoint":780,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2":{"entryPoint":888,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":655,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3483:8","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:8","statements":[{"nodeType":"YulAssignment","src":"57:19:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:8","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:8"},"nodeType":"YulFunctionCall","src":"67:9:8"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:8"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:8","type":""}],"src":"7:75:8"},{"body":{"nodeType":"YulBlock","src":"177:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:8"},"nodeType":"YulFunctionCall","src":"187:12:8"},"nodeType":"YulExpressionStatement","src":"187:12:8"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:8"},{"body":{"nodeType":"YulBlock","src":"300:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:8"},"nodeType":"YulFunctionCall","src":"310:12:8"},"nodeType":"YulExpressionStatement","src":"310:12:8"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:8"},{"body":{"nodeType":"YulBlock","src":"379:81:8","statements":[{"nodeType":"YulAssignment","src":"389:65:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:8","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:8"},"nodeType":"YulFunctionCall","src":"400:54:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:8"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:8","type":""}],"src":"334:126:8"},{"body":{"nodeType":"YulBlock","src":"511:51:8","statements":[{"nodeType":"YulAssignment","src":"521:35:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:8"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:8"},"nodeType":"YulFunctionCall","src":"532:24:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:8"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:8","type":""}],"src":"466:96:8"},{"body":{"nodeType":"YulBlock","src":"611:79:8","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:8"},"nodeType":"YulFunctionCall","src":"670:12:8"},"nodeType":"YulExpressionStatement","src":"670:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:8"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:8"},"nodeType":"YulFunctionCall","src":"641:24:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:8"},"nodeType":"YulFunctionCall","src":"631:35:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:8"},"nodeType":"YulFunctionCall","src":"624:43:8"},"nodeType":"YulIf","src":"621:63:8"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:8","type":""}],"src":"568:122:8"},{"body":{"nodeType":"YulBlock","src":"759:80:8","statements":[{"nodeType":"YulAssignment","src":"769:22:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:8"},"nodeType":"YulFunctionCall","src":"778:13:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:8"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:8"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:8"},"nodeType":"YulFunctionCall","src":"800:33:8"},"nodeType":"YulExpressionStatement","src":"800:33:8"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:8","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:8","type":""}],"src":"696:143:8"},{"body":{"nodeType":"YulBlock","src":"939:413:8","statements":[{"body":{"nodeType":"YulBlock","src":"985:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"987:77:8"},"nodeType":"YulFunctionCall","src":"987:79:8"},"nodeType":"YulExpressionStatement","src":"987:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"960:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"969:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"956:3:8"},"nodeType":"YulFunctionCall","src":"956:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"981:2:8","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"952:3:8"},"nodeType":"YulFunctionCall","src":"952:32:8"},"nodeType":"YulIf","src":"949:119:8"},{"nodeType":"YulBlock","src":"1078:128:8","statements":[{"nodeType":"YulVariableDeclaration","src":"1093:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"1107:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1097:6:8","type":""}]},{"nodeType":"YulAssignment","src":"1122:74:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1168:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"1179:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1164:3:8"},"nodeType":"YulFunctionCall","src":"1164:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1188:7:8"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1132:31:8"},"nodeType":"YulFunctionCall","src":"1132:64:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1122:6:8"}]}]},{"nodeType":"YulBlock","src":"1216:129:8","statements":[{"nodeType":"YulVariableDeclaration","src":"1231:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"1245:2:8","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1235:6:8","type":""}]},{"nodeType":"YulAssignment","src":"1261:74:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1307:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"1318:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1303:3:8"},"nodeType":"YulFunctionCall","src":"1303:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1327:7:8"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1271:31:8"},"nodeType":"YulFunctionCall","src":"1271:64:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1261:6:8"}]}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"901:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"912:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"924:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"932:6:8","type":""}],"src":"845:507:8"},{"body":{"nodeType":"YulBlock","src":"1454:73:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1471:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"1476:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1464:6:8"},"nodeType":"YulFunctionCall","src":"1464:19:8"},"nodeType":"YulExpressionStatement","src":"1464:19:8"},{"nodeType":"YulAssignment","src":"1492:29:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1511:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"1516:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1507:3:8"},"nodeType":"YulFunctionCall","src":"1507:14:8"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1492:11:8"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1426:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"1431:6:8","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1442:11:8","type":""}],"src":"1358:169:8"},{"body":{"nodeType":"YulBlock","src":"1639:68:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1661:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"1669:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1657:3:8"},"nodeType":"YulFunctionCall","src":"1657:14:8"},{"hexValue":"43616e6e6f7420736574206f776e657220746f207a65726f","kind":"string","nodeType":"YulLiteral","src":"1673:26:8","type":"","value":"Cannot set owner to zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1650:6:8"},"nodeType":"YulFunctionCall","src":"1650:50:8"},"nodeType":"YulExpressionStatement","src":"1650:50:8"}]},"name":"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1631:6:8","type":""}],"src":"1533:174:8"},{"body":{"nodeType":"YulBlock","src":"1859:220:8","statements":[{"nodeType":"YulAssignment","src":"1869:74:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1935:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"1940:2:8","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1876:58:8"},"nodeType":"YulFunctionCall","src":"1876:67:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1869:3:8"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2041:3:8"}],"functionName":{"name":"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","nodeType":"YulIdentifier","src":"1952:88:8"},"nodeType":"YulFunctionCall","src":"1952:93:8"},"nodeType":"YulExpressionStatement","src":"1952:93:8"},{"nodeType":"YulAssignment","src":"2054:19:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2065:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"2070:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2061:3:8"},"nodeType":"YulFunctionCall","src":"2061:12:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2054:3:8"}]}]},"name":"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1847:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1855:3:8","type":""}],"src":"1713:366:8"},{"body":{"nodeType":"YulBlock","src":"2256:248:8","statements":[{"nodeType":"YulAssignment","src":"2266:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2278:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2289:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2274:3:8"},"nodeType":"YulFunctionCall","src":"2274:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2266:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2313:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2324:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2309:3:8"},"nodeType":"YulFunctionCall","src":"2309:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2332:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"2338:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2328:3:8"},"nodeType":"YulFunctionCall","src":"2328:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2302:6:8"},"nodeType":"YulFunctionCall","src":"2302:47:8"},"nodeType":"YulExpressionStatement","src":"2302:47:8"},{"nodeType":"YulAssignment","src":"2358:139:8","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2492:4:8"}],"functionName":{"name":"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2366:124:8"},"nodeType":"YulFunctionCall","src":"2366:131:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2358:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2236:9:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2251:4:8","type":""}],"src":"2085:419:8"},{"body":{"nodeType":"YulBlock","src":"2616:67:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2638:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"2646:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:8"},"nodeType":"YulFunctionCall","src":"2634:14:8"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"2650:25:8","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2627:6:8"},"nodeType":"YulFunctionCall","src":"2627:49:8"},"nodeType":"YulExpressionStatement","src":"2627:49:8"}]},"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2608:6:8","type":""}],"src":"2510:173:8"},{"body":{"nodeType":"YulBlock","src":"2835:220:8","statements":[{"nodeType":"YulAssignment","src":"2845:74:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2911:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"2916:2:8","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2852:58:8"},"nodeType":"YulFunctionCall","src":"2852:67:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2845:3:8"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3017:3:8"}],"functionName":{"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulIdentifier","src":"2928:88:8"},"nodeType":"YulFunctionCall","src":"2928:93:8"},"nodeType":"YulExpressionStatement","src":"2928:93:8"},{"nodeType":"YulAssignment","src":"3030:19:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3041:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"3046:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3037:3:8"},"nodeType":"YulFunctionCall","src":"3037:12:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3030:3:8"}]}]},"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2823:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2831:3:8","type":""}],"src":"2689:366:8"},{"body":{"nodeType":"YulBlock","src":"3232:248:8","statements":[{"nodeType":"YulAssignment","src":"3242:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3254:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3265:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3250:3:8"},"nodeType":"YulFunctionCall","src":"3250:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3242:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3289:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3300:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3285:3:8"},"nodeType":"YulFunctionCall","src":"3285:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3308:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"3314:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3304:3:8"},"nodeType":"YulFunctionCall","src":"3304:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3278:6:8"},"nodeType":"YulFunctionCall","src":"3278:47:8"},"nodeType":"YulExpressionStatement","src":"3278:47:8"},{"nodeType":"YulAssignment","src":"3334:139:8","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3468:4:8"}],"functionName":{"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3342:124:8"},"nodeType":"YulFunctionCall","src":"3342:131:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3334:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3212:9:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3227:4:8","type":""}],"src":"3061:419:8"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot set owner to zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":8,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b50604051610a50380380610a50833981810160405281019061003291906102bb565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036100a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161009890610358565b60405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610125576101248161012c60201b60201c565b5b50506103e4565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361019a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610191906103c4565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102888261025d565b9050919050565b6102988161027d565b81146102a357600080fd5b50565b6000815190506102b58161028f565b92915050565b600080604083850312156102d2576102d1610258565b5b60006102e0858286016102a6565b92505060206102f1858286016102a6565b9150509250929050565b600082825260208201905092915050565b7f43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000600082015250565b60006103426018836102fb565b915061034d8261030c565b602082019050919050565b6000602082019050818103600083015261037181610335565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b60006103ae6017836102fb565b91506103b982610378565b602082019050919050565b600060208201905081810360008301526103dd816103a1565b9050919050565b61065d806103f36000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b61005861021f565b6040516100659190610459565b60405180910390f35b610088600480360381019061008391906104a5565b610248565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461011a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101119061052f565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61025061025c565b610259816102ec565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e19061059b565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361035a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035190610607565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061044382610418565b9050919050565b61045381610438565b82525050565b600060208201905061046e600083018461044a565b92915050565b600080fd5b61048281610438565b811461048d57600080fd5b50565b60008135905061049f81610479565b92915050565b6000602082840312156104bb576104ba610474565b5b60006104c984828501610490565b91505092915050565b600082825260208201905092915050565b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b60006105196016836104d2565b9150610524826104e3565b602082019050919050565b600060208201905081810360008301526105488161050c565b9050919050565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b60006105856016836104d2565b91506105908261054f565b602082019050919050565b600060208201905081810360008301526105b481610578565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b60006105f16017836104d2565b91506105fc826105bb565b602082019050919050565b60006020820190508181036000830152610620816105e4565b905091905056fea264697066735822122058353be51de2f002a63c3f8fcbcd5dca1522643beba7a54b6b8085156b4829c564736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xA50 CODESIZE SUB DUP1 PUSH2 0xA50 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x2BB JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98 SWAP1 PUSH2 0x358 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x125 JUMPI PUSH2 0x124 DUP2 PUSH2 0x12C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST POP POP PUSH2 0x3E4 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x191 SWAP1 PUSH2 0x3C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x288 DUP3 PUSH2 0x25D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x298 DUP2 PUSH2 0x27D JUMP JUMPDEST DUP2 EQ PUSH2 0x2A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2B5 DUP2 PUSH2 0x28F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D2 JUMPI PUSH2 0x2D1 PUSH2 0x258 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E0 DUP6 DUP3 DUP7 ADD PUSH2 0x2A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2F1 DUP6 DUP3 DUP7 ADD PUSH2 0x2A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x342 PUSH1 0x18 DUP4 PUSH2 0x2FB JUMP JUMPDEST SWAP2 POP PUSH2 0x34D DUP3 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x371 DUP2 PUSH2 0x335 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AE PUSH1 0x17 DUP4 PUSH2 0x2FB JUMP JUMPDEST SWAP2 POP PUSH2 0x3B9 DUP3 PUSH2 0x378 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DD DUP2 PUSH2 0x3A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x65D DUP1 PUSH2 0x3F3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x21F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x459 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x248 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111 SWAP1 PUSH2 0x52F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x25C JUMP JUMPDEST PUSH2 0x259 DUP2 PUSH2 0x2EC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E1 SWAP1 PUSH2 0x59B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x35A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x351 SWAP1 PUSH2 0x607 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x443 DUP3 PUSH2 0x418 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x453 DUP2 PUSH2 0x438 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x46E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x44A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x482 DUP2 PUSH2 0x438 JUMP JUMPDEST DUP2 EQ PUSH2 0x48D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x49F DUP2 PUSH2 0x479 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4BB JUMPI PUSH2 0x4BA PUSH2 0x474 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4C9 DUP5 DUP3 DUP6 ADD PUSH2 0x490 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x519 PUSH1 0x16 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x524 DUP3 PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x548 DUP2 PUSH2 0x50C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x585 PUSH1 0x16 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x590 DUP3 PUSH2 0x54F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5B4 DUP2 PUSH2 0x578 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F1 PUSH1 0x17 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x5FC DUP3 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x620 DUP2 PUSH2 0x5E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC CALLDATALOAD EXTCODESIZE 0xE5 SAR 0xE2 CREATE MUL 0xA6 EXTCODECOPY EXTCODEHASH DUP16 0xCB 0xCD 0x5D 0xCA ISZERO 0x22 PUSH5 0x3BEBA7A54B PUSH12 0x8085156B4829C564736F6C63 NUMBER STOP ADDMOD SLT STOP CALLER ","sourceMap":"213:1777:1:-:0;;;486:231;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;572:1;552:22;;:8;:22;;;544:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;620:8;610:7;;:18;;;;;;;;;;;;;;;;;;662:1;638:26;;:12;:26;;;634:79;;674:32;693:12;674:18;;;:32;;:::i;:::-;634:79;486:231;;213:1777;;1497:188;1565:10;1559:16;;:2;:16;;;1551:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1627:2;1610:14;;:19;;;;;;;;;;;;;;;;;;1677:2;1641:39;;1668:7;;;;;;;;;;1641:39;;;;;;;;;;;;1497:188;:::o;88:117:8:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:169::-;1442:11;1476:6;1471:3;1464:19;1516:4;1511:3;1507:14;1492:29;;1358:169;;;;:::o;1533:174::-;1673:26;1669:1;1661:6;1657:14;1650:50;1533:174;:::o;1713:366::-;1855:3;1876:67;1940:2;1935:3;1876:67;:::i;:::-;1869:74;;1952:93;2041:3;1952:93;:::i;:::-;2070:2;2065:3;2061:12;2054:19;;1713:366;;;:::o;2085:419::-;2251:4;2289:2;2278:9;2274:18;2266:26;;2338:9;2332:4;2328:20;2324:1;2313:9;2309:17;2302:47;2366:131;2492:4;2366:131;:::i;:::-;2358:139;;2085:419;;;:::o;2510:173::-;2650:25;2646:1;2638:6;2634:14;2627:49;2510:173;:::o;2689:366::-;2831:3;2852:67;2916:2;2911:3;2852:67;:::i;:::-;2845:74;;2928:93;3017:3;2928:93;:::i;:::-;3046:2;3041:3;3037:12;3030:19;;2689:366;;;:::o;3061:419::-;3227:4;3265:2;3254:9;3250:18;3242:26;;3314:9;3308:4;3304:20;3300:1;3289:9;3285:17;3278:47;3342:131;3468:4;3342:131;:::i;:::-;3334:139;;3061:419;;;:::o;213:1777:1:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_transferOwnership_159":{"entryPoint":748,"id":159,"parameterSlots":1,"returnSlots":0},"@_validateOwnership_172":{"entryPoint":604,"id":172,"parameterSlots":0,"returnSlots":0},"@acceptOwnership_125":{"entryPoint":138,"id":125,"parameterSlots":0,"returnSlots":0},"@owner_135":{"entryPoint":543,"id":135,"parameterSlots":0,"returnSlots":1},"@transferOwnership_89":{"entryPoint":584,"id":89,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":1168,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1189,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1098,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack":{"entryPoint":1292,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack":{"entryPoint":1400,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack":{"entryPoint":1508,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1113,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1327,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1435,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1543,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1234,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1080,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1048,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1140,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c":{"entryPoint":1251,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3":{"entryPoint":1359,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2":{"entryPoint":1467,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1145,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4626:8","statements":[{"body":{"nodeType":"YulBlock","src":"52:81:8","statements":[{"nodeType":"YulAssignment","src":"62:65:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"84:42:8","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"73:3:8"},"nodeType":"YulFunctionCall","src":"73:54:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:8"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:8","type":""}],"src":"7:126:8"},{"body":{"nodeType":"YulBlock","src":"184:51:8","statements":[{"nodeType":"YulAssignment","src":"194:35:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:8"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"205:17:8"},"nodeType":"YulFunctionCall","src":"205:24:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"194:7:8"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"166:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"176:7:8","type":""}],"src":"139:96:8"},{"body":{"nodeType":"YulBlock","src":"306:53:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"323:3:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"346:5:8"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"328:17:8"},"nodeType":"YulFunctionCall","src":"328:24:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"316:6:8"},"nodeType":"YulFunctionCall","src":"316:37:8"},"nodeType":"YulExpressionStatement","src":"316:37:8"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"294:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"301:3:8","type":""}],"src":"241:118:8"},{"body":{"nodeType":"YulBlock","src":"463:124:8","statements":[{"nodeType":"YulAssignment","src":"473:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"485:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"496:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"481:3:8"},"nodeType":"YulFunctionCall","src":"481:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"473:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"553:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"566:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"577:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"562:3:8"},"nodeType":"YulFunctionCall","src":"562:17:8"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"509:43:8"},"nodeType":"YulFunctionCall","src":"509:71:8"},"nodeType":"YulExpressionStatement","src":"509:71:8"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"435:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"447:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"458:4:8","type":""}],"src":"365:222:8"},{"body":{"nodeType":"YulBlock","src":"633:35:8","statements":[{"nodeType":"YulAssignment","src":"643:19:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"659:2:8","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"653:5:8"},"nodeType":"YulFunctionCall","src":"653:9:8"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"643:6:8"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"626:6:8","type":""}],"src":"593:75:8"},{"body":{"nodeType":"YulBlock","src":"763:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"780:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"783:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"773:6:8"},"nodeType":"YulFunctionCall","src":"773:12:8"},"nodeType":"YulExpressionStatement","src":"773:12:8"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"674:117:8"},{"body":{"nodeType":"YulBlock","src":"886:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"903:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"906:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"896:6:8"},"nodeType":"YulFunctionCall","src":"896:12:8"},"nodeType":"YulExpressionStatement","src":"896:12:8"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"797:117:8"},{"body":{"nodeType":"YulBlock","src":"963:79:8","statements":[{"body":{"nodeType":"YulBlock","src":"1020:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1029:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1032:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1022:6:8"},"nodeType":"YulFunctionCall","src":"1022:12:8"},"nodeType":"YulExpressionStatement","src":"1022:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"986:5:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1011:5:8"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"993:17:8"},"nodeType":"YulFunctionCall","src":"993:24:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"983:2:8"},"nodeType":"YulFunctionCall","src":"983:35:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"976:6:8"},"nodeType":"YulFunctionCall","src":"976:43:8"},"nodeType":"YulIf","src":"973:63:8"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"956:5:8","type":""}],"src":"920:122:8"},{"body":{"nodeType":"YulBlock","src":"1100:87:8","statements":[{"nodeType":"YulAssignment","src":"1110:29:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1132:6:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1119:12:8"},"nodeType":"YulFunctionCall","src":"1119:20:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1110:5:8"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1175:5:8"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1148:26:8"},"nodeType":"YulFunctionCall","src":"1148:33:8"},"nodeType":"YulExpressionStatement","src":"1148:33:8"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1078:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"1086:3:8","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1094:5:8","type":""}],"src":"1048:139:8"},{"body":{"nodeType":"YulBlock","src":"1259:263:8","statements":[{"body":{"nodeType":"YulBlock","src":"1305:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1307:77:8"},"nodeType":"YulFunctionCall","src":"1307:79:8"},"nodeType":"YulExpressionStatement","src":"1307:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1280:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"1289:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1276:3:8"},"nodeType":"YulFunctionCall","src":"1276:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"1301:2:8","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1272:3:8"},"nodeType":"YulFunctionCall","src":"1272:32:8"},"nodeType":"YulIf","src":"1269:119:8"},{"nodeType":"YulBlock","src":"1398:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"1413:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"1427:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1417:6:8","type":""}]},{"nodeType":"YulAssignment","src":"1442:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1477:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"1488:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1473:3:8"},"nodeType":"YulFunctionCall","src":"1473:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1497:7:8"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1452:20:8"},"nodeType":"YulFunctionCall","src":"1452:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1442:6:8"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1229:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1240:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1252:6:8","type":""}],"src":"1193:329:8"},{"body":{"nodeType":"YulBlock","src":"1624:73:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1641:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"1646:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1634:6:8"},"nodeType":"YulFunctionCall","src":"1634:19:8"},"nodeType":"YulExpressionStatement","src":"1634:19:8"},{"nodeType":"YulAssignment","src":"1662:29:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1681:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"1686:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1677:3:8"},"nodeType":"YulFunctionCall","src":"1677:14:8"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1662:11:8"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1596:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"1601:6:8","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1612:11:8","type":""}],"src":"1528:169:8"},{"body":{"nodeType":"YulBlock","src":"1809:66:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1831:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"1839:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1827:3:8"},"nodeType":"YulFunctionCall","src":"1827:14:8"},{"hexValue":"4d7573742062652070726f706f736564206f776e6572","kind":"string","nodeType":"YulLiteral","src":"1843:24:8","type":"","value":"Must be proposed owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1820:6:8"},"nodeType":"YulFunctionCall","src":"1820:48:8"},"nodeType":"YulExpressionStatement","src":"1820:48:8"}]},"name":"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1801:6:8","type":""}],"src":"1703:172:8"},{"body":{"nodeType":"YulBlock","src":"2027:220:8","statements":[{"nodeType":"YulAssignment","src":"2037:74:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2103:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"2108:2:8","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2044:58:8"},"nodeType":"YulFunctionCall","src":"2044:67:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2037:3:8"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2209:3:8"}],"functionName":{"name":"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","nodeType":"YulIdentifier","src":"2120:88:8"},"nodeType":"YulFunctionCall","src":"2120:93:8"},"nodeType":"YulExpressionStatement","src":"2120:93:8"},{"nodeType":"YulAssignment","src":"2222:19:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2233:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"2238:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2229:3:8"},"nodeType":"YulFunctionCall","src":"2229:12:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2222:3:8"}]}]},"name":"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2015:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2023:3:8","type":""}],"src":"1881:366:8"},{"body":{"nodeType":"YulBlock","src":"2424:248:8","statements":[{"nodeType":"YulAssignment","src":"2434:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2446:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2457:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2442:3:8"},"nodeType":"YulFunctionCall","src":"2442:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2434:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2481:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2492:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2477:3:8"},"nodeType":"YulFunctionCall","src":"2477:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2500:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"2506:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2496:3:8"},"nodeType":"YulFunctionCall","src":"2496:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2470:6:8"},"nodeType":"YulFunctionCall","src":"2470:47:8"},"nodeType":"YulExpressionStatement","src":"2470:47:8"},{"nodeType":"YulAssignment","src":"2526:139:8","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2660:4:8"}],"functionName":{"name":"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2534:124:8"},"nodeType":"YulFunctionCall","src":"2534:131:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2526:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2404:9:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2419:4:8","type":""}],"src":"2253:419:8"},{"body":{"nodeType":"YulBlock","src":"2784:66:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2806:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"2814:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2802:3:8"},"nodeType":"YulFunctionCall","src":"2802:14:8"},{"hexValue":"4f6e6c792063616c6c61626c65206279206f776e6572","kind":"string","nodeType":"YulLiteral","src":"2818:24:8","type":"","value":"Only callable by owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2795:6:8"},"nodeType":"YulFunctionCall","src":"2795:48:8"},"nodeType":"YulExpressionStatement","src":"2795:48:8"}]},"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2776:6:8","type":""}],"src":"2678:172:8"},{"body":{"nodeType":"YulBlock","src":"3002:220:8","statements":[{"nodeType":"YulAssignment","src":"3012:74:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3078:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"3083:2:8","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3019:58:8"},"nodeType":"YulFunctionCall","src":"3019:67:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3012:3:8"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3184:3:8"}],"functionName":{"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nodeType":"YulIdentifier","src":"3095:88:8"},"nodeType":"YulFunctionCall","src":"3095:93:8"},"nodeType":"YulExpressionStatement","src":"3095:93:8"},{"nodeType":"YulAssignment","src":"3197:19:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3208:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"3213:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3204:3:8"},"nodeType":"YulFunctionCall","src":"3204:12:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3197:3:8"}]}]},"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2990:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2998:3:8","type":""}],"src":"2856:366:8"},{"body":{"nodeType":"YulBlock","src":"3399:248:8","statements":[{"nodeType":"YulAssignment","src":"3409:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3421:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3432:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3417:3:8"},"nodeType":"YulFunctionCall","src":"3417:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3409:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3456:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3467:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3452:3:8"},"nodeType":"YulFunctionCall","src":"3452:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3475:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"3481:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3471:3:8"},"nodeType":"YulFunctionCall","src":"3471:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3445:6:8"},"nodeType":"YulFunctionCall","src":"3445:47:8"},"nodeType":"YulExpressionStatement","src":"3445:47:8"},{"nodeType":"YulAssignment","src":"3501:139:8","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3635:4:8"}],"functionName":{"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3509:124:8"},"nodeType":"YulFunctionCall","src":"3509:131:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3501:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3379:9:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3394:4:8","type":""}],"src":"3228:419:8"},{"body":{"nodeType":"YulBlock","src":"3759:67:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3781:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"3789:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3777:3:8"},"nodeType":"YulFunctionCall","src":"3777:14:8"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"3793:25:8","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3770:6:8"},"nodeType":"YulFunctionCall","src":"3770:49:8"},"nodeType":"YulExpressionStatement","src":"3770:49:8"}]},"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3751:6:8","type":""}],"src":"3653:173:8"},{"body":{"nodeType":"YulBlock","src":"3978:220:8","statements":[{"nodeType":"YulAssignment","src":"3988:74:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4054:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"4059:2:8","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3995:58:8"},"nodeType":"YulFunctionCall","src":"3995:67:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3988:3:8"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4160:3:8"}],"functionName":{"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulIdentifier","src":"4071:88:8"},"nodeType":"YulFunctionCall","src":"4071:93:8"},"nodeType":"YulExpressionStatement","src":"4071:93:8"},{"nodeType":"YulAssignment","src":"4173:19:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4184:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"4189:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4180:3:8"},"nodeType":"YulFunctionCall","src":"4180:12:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4173:3:8"}]}]},"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3966:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3974:3:8","type":""}],"src":"3832:366:8"},{"body":{"nodeType":"YulBlock","src":"4375:248:8","statements":[{"nodeType":"YulAssignment","src":"4385:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4397:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"4408:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4393:3:8"},"nodeType":"YulFunctionCall","src":"4393:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4385:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4432:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"4443:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4428:3:8"},"nodeType":"YulFunctionCall","src":"4428:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4451:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"4457:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4447:3:8"},"nodeType":"YulFunctionCall","src":"4447:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4421:6:8"},"nodeType":"YulFunctionCall","src":"4421:47:8"},"nodeType":"YulExpressionStatement","src":"4421:47:8"},{"nodeType":"YulAssignment","src":"4477:139:8","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4611:4:8"}],"functionName":{"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4485:124:8"},"nodeType":"YulFunctionCall","src":"4485:131:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4477:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4355:9:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4370:4:8","type":""}],"src":"4204:419:8"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must be proposed owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only callable by owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":8,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b61005861021f565b6040516100659190610459565b60405180910390f35b610088600480360381019061008391906104a5565b610248565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461011a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101119061052f565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61025061025c565b610259816102ec565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e19061059b565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361035a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035190610607565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061044382610418565b9050919050565b61045381610438565b82525050565b600060208201905061046e600083018461044a565b92915050565b600080fd5b61048281610438565b811461048d57600080fd5b50565b60008135905061049f81610479565b92915050565b6000602082840312156104bb576104ba610474565b5b60006104c984828501610490565b91505092915050565b600082825260208201905092915050565b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b60006105196016836104d2565b9150610524826104e3565b602082019050919050565b600060208201905081810360008301526105488161050c565b9050919050565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b60006105856016836104d2565b91506105908261054f565b602082019050919050565b600060208201905081810360008301526105b481610578565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b60006105f16017836104d2565b91506105fc826105bb565b602082019050919050565b60006020820190508181036000830152610620816105e4565b905091905056fea264697066735822122058353be51de2f002a63c3f8fcbcd5dca1522643beba7a54b6b8085156b4829c564736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x21F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x459 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x248 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111 SWAP1 PUSH2 0x52F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x25C JUMP JUMPDEST PUSH2 0x259 DUP2 PUSH2 0x2EC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E1 SWAP1 PUSH2 0x59B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x35A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x351 SWAP1 PUSH2 0x607 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x443 DUP3 PUSH2 0x418 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x453 DUP2 PUSH2 0x438 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x46E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x44A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x482 DUP2 PUSH2 0x438 JUMP JUMPDEST DUP2 EQ PUSH2 0x48D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x49F DUP2 PUSH2 0x479 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4BB JUMPI PUSH2 0x4BA PUSH2 0x474 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4C9 DUP5 DUP3 DUP6 ADD PUSH2 0x490 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x519 PUSH1 0x16 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x524 DUP3 PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x548 DUP2 PUSH2 0x50C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x585 PUSH1 0x16 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x590 DUP3 PUSH2 0x54F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5B4 DUP2 PUSH2 0x578 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F1 PUSH1 0x17 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x5FC DUP3 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x620 DUP2 PUSH2 0x5E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC CALLDATALOAD EXTCODESIZE 0xE5 SAR 0xE2 CREATE MUL 0xA6 EXTCODECOPY EXTCODEHASH DUP16 0xCB 0xCD 0x5D 0xCA ISZERO 0x22 PUSH5 0x3BEBA7A54B PUSH12 0x8085156B4829C564736F6C63 NUMBER STOP ADDMOD SLT STOP CALLER ","sourceMap":"213:1777:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1016:265;;;:::i;:::-;;1332:81;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;826:98;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1016:265;1089:14;;;;;;;;;;;1075:28;;:10;:28;;;1067:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1137:16;1156:7;;;;;;;;;;;1137:26;;1179:10;1169:7;;:20;;;;;;;;;;;;;;;;;;1220:1;1195:14;;:27;;;;;;;;;;;;;;;;;;1265:10;1234:42;;1255:8;1234:42;;;;;;;;;;;;1061:220;1016:265::o;1332:81::-;1379:7;1401;;;;;;;;;;;1394:14;;1332:81;:::o;826:98::-;1956:20;:18;:20::i;:::-;897:22:::1;916:2;897:18;:22::i;:::-;826:98:::0;:::o;1730:111::-;1802:7;;;;;;;;;;1788:21;;:10;:21;;;1780:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1730:111::o;1497:188::-;1565:10;1559:16;;:2;:16;;;1551:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1627:2;1610:14;;:19;;;;;;;;;;;;;;;;;;1677:2;1641:39;;1668:7;;;;;;;;;;1641:39;;;;;;;;;;;;1497:188;:::o;7:126:8:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:329::-;1252:6;1301:2;1289:9;1280:7;1276:23;1272:32;1269:119;;;1307:79;;:::i;:::-;1269:119;1427:1;1452:53;1497:7;1488:6;1477:9;1473:22;1452:53;:::i;:::-;1442:63;;1398:117;1193:329;;;;:::o;1528:169::-;1612:11;1646:6;1641:3;1634:19;1686:4;1681:3;1677:14;1662:29;;1528:169;;;;:::o;1703:172::-;1843:24;1839:1;1831:6;1827:14;1820:48;1703:172;:::o;1881:366::-;2023:3;2044:67;2108:2;2103:3;2044:67;:::i;:::-;2037:74;;2120:93;2209:3;2120:93;:::i;:::-;2238:2;2233:3;2229:12;2222:19;;1881:366;;;:::o;2253:419::-;2419:4;2457:2;2446:9;2442:18;2434:26;;2506:9;2500:4;2496:20;2492:1;2481:9;2477:17;2470:47;2534:131;2660:4;2534:131;:::i;:::-;2526:139;;2253:419;;;:::o;2678:172::-;2818:24;2814:1;2806:6;2802:14;2795:48;2678:172;:::o;2856:366::-;2998:3;3019:67;3083:2;3078:3;3019:67;:::i;:::-;3012:74;;3095:93;3184:3;3095:93;:::i;:::-;3213:2;3208:3;3204:12;3197:19;;2856:366;;;:::o;3228:419::-;3394:4;3432:2;3421:9;3417:18;3409:26;;3481:9;3475:4;3471:20;3467:1;3456:9;3452:17;3445:47;3509:131;3635:4;3509:131;:::i;:::-;3501:139;;3228:419;;;:::o;3653:173::-;3793:25;3789:1;3781:6;3777:14;3770:49;3653:173;:::o;3832:366::-;3974:3;3995:67;4059:2;4054:3;3995:67;:::i;:::-;3988:74;;4071:93;4160:3;4071:93;:::i;:::-;4189:2;4184:3;4180:12;4173:19;;3832:366;;;:::o;4204:419::-;4370:4;4408:2;4397:9;4393:18;4385:26;;4457:9;4451:4;4447:20;4443:1;4432:9;4428:17;4421:47;4485:131;4611:4;4485:131;:::i;:::-;4477:139;;4204:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"325800","executionCost":"infinite","totalCost":"infinite"},"external":{"acceptOwnership()":"54518","owner()":"2522","transferOwnership(address)":"30676"},"internal":{"_transferOwnership(address)":"infinite","_validateOwnership()":"infinite"}},"methodIdentifiers":{"acceptOwnership()":"79ba5097","owner()":"8da5cb5b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"The ConfirmedOwner contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address, pending.\"}},\"notice\":\"A contract with helpers for basic contract ownership.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol\":\"ConfirmedOwnerWithProposal\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./interfaces/OwnableInterface.sol\\\";\\n\\n/**\\n * @title The ConfirmedOwner contract\\n * @notice A contract with helpers for basic contract ownership.\\n */\\ncontract ConfirmedOwnerWithProposal is OwnableInterface {\\n  address private s_owner;\\n  address private s_pendingOwner;\\n\\n  event OwnershipTransferRequested(address indexed from, address indexed to);\\n  event OwnershipTransferred(address indexed from, address indexed to);\\n\\n  constructor(address newOwner, address pendingOwner) {\\n    require(newOwner != address(0), \\\"Cannot set owner to zero\\\");\\n\\n    s_owner = newOwner;\\n    if (pendingOwner != address(0)) {\\n      _transferOwnership(pendingOwner);\\n    }\\n  }\\n\\n  /**\\n   * @notice Allows an owner to begin transferring ownership to a new address,\\n   * pending.\\n   */\\n  function transferOwnership(address to) public override onlyOwner {\\n    _transferOwnership(to);\\n  }\\n\\n  /**\\n   * @notice Allows an ownership transfer to be completed by the recipient.\\n   */\\n  function acceptOwnership() external override {\\n    require(msg.sender == s_pendingOwner, \\\"Must be proposed owner\\\");\\n\\n    address oldOwner = s_owner;\\n    s_owner = msg.sender;\\n    s_pendingOwner = address(0);\\n\\n    emit OwnershipTransferred(oldOwner, msg.sender);\\n  }\\n\\n  /**\\n   * @notice Get the current owner\\n   */\\n  function owner() public view override returns (address) {\\n    return s_owner;\\n  }\\n\\n  /**\\n   * @notice validate, transfer ownership, and emit relevant events\\n   */\\n  function _transferOwnership(address to) private {\\n    require(to != msg.sender, \\\"Cannot transfer to self\\\");\\n\\n    s_pendingOwner = to;\\n\\n    emit OwnershipTransferRequested(s_owner, to);\\n  }\\n\\n  /**\\n   * @notice validate access\\n   */\\n  function _validateOwnership() internal view {\\n    require(msg.sender == s_owner, \\\"Only callable by owner\\\");\\n  }\\n\\n  /**\\n   * @notice Reverts if called by anyone other than the contract owner.\\n   */\\n  modifier onlyOwner() {\\n    _validateOwnership();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0xa2f137a1d066795aeac76226e58f33c982278cdd34b4f09e5a2243d5a0924654\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface OwnableInterface {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0xb8b3a97783dddc198b790c4cec1eda7fb47aa38cbaea6555220d0ed8c735c086\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":27,"contract":"@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal","label":"s_owner","offset":0,"slot":"0","type":"t_address"},{"astId":29,"contract":"@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal","label":"s_pendingOwner","offset":0,"slot":"1","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{"acceptOwnership()":{"notice":"Allows an ownership transfer to be completed by the recipient."},"owner()":{"notice":"Get the current owner"},"transferOwnership(address)":{"notice":"Allows an owner to begin transferring ownership to a new address, pending."}},"notice":"A contract with helpers for basic contract ownership.","version":1}}},"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol":{"VRFConsumerBaseV2":{"abi":[{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).","kind":"dev","methods":{"constructor":{"params":{"_vrfCoordinator":"address of VRFCoordinator contract"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"rawFulfillRandomWords(uint256,uint256[])":"1fe543e3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_vrfCoordinator\":\"address of VRFCoordinator contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":\"VRFConsumerBaseV2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************","version":1}}},"@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol":{"AutomationCompatibleInterface":{"abi":[{"inputs":[{"internalType":"bytes","name":"checkData","type":"bytes"}],"name":"checkUpkeep","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"performData","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"performData","type":"bytes"}],"name":"performUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"checkUpkeep(bytes)":{"details":"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.","params":{"checkData":"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract."},"returns":{"performData":"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.","upkeepNeeded":"boolean to indicate whether the keeper should call performUpkeep or not."}},"performUpkeep(bytes)":{"details":"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.","params":{"performData":"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"checkUpkeep(bytes)":"6e04ff0d","performUpkeep(bytes)":"4585e33b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.\",\"params\":{\"checkData\":\"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas.\"},\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol\":\"AutomationCompatibleInterface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AutomationCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"checkUpkeep(bytes)":{"notice":"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas."},"performUpkeep(bytes)":{"notice":"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed."}},"version":1}}},"@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol":{"OwnableInterface":{"abi":[{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptOwnership()":"79ba5097","owner()":"8da5cb5b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol\":\"OwnableInterface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface OwnableInterface {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0xb8b3a97783dddc198b790c4cec1eda7fb47aa38cbaea6555220d0ed8c735c086\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"VRFCoordinatorV2Interface":{"abi":[{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getRequestConfig","outputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"pendingRequestExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint32","name":"numWords","type":"uint32"}],"name":"requestRandomWords","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"acceptSubscriptionOwnerTransfer(uint64)":{"details":"will revert if original owner of subId has not requested that msg.sender become the new owner.","params":{"subId":"- ID of the subscription"}},"addConsumer(uint64,address)":{"params":{"consumer":"- New consumer which can use the subscription","subId":"- ID of the subscription"}},"cancelSubscription(uint64,address)":{"params":{"subId":"- ID of the subscription","to":"- Where to send the remaining LINK to"}},"createSubscription()":{"details":"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));","returns":{"subId":"- A unique subscription id."}},"getRequestConfig()":{"returns":{"_0":"minimumRequestConfirmations global min for request confirmations","_1":"maxGasLimit global max for request gas limit","_2":"s_provingKeyHashes list of registered key hashes"}},"getSubscription(uint64)":{"params":{"subId":"- ID of the subscription"},"returns":{"balance":"- LINK balance of the subscription in juels.","consumers":"- list of consumer address which are able to use this subscription.","owner":"- owner of the subscription.","reqCount":"- number of requests for this subscription, determines fee tier."}},"removeConsumer(uint64,address)":{"params":{"consumer":"- Consumer to remove from the subscription","subId":"- ID of the subscription"}},"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":{"params":{"callbackGasLimit":"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]","keyHash":"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.","minimumRequestConfirmations":"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].","numWords":"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.","subId":"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash."},"returns":{"requestId":"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords."}},"requestSubscriptionOwnerTransfer(uint64,address)":{"params":{"newOwner":"- proposed new owner of the subscription","subId":"- ID of the subscription"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptSubscriptionOwnerTransfer(uint64)":"82359740","addConsumer(uint64,address)":"7341c10c","cancelSubscription(uint64,address)":"d7ae1d30","createSubscription()":"a21a23e4","getRequestConfig()":"00012291","getSubscription(uint64)":"a47c7696","pendingRequestExists(uint64)":"e82ad7d4","removeConsumer(uint64,address)":"9f87fad7","requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":"5d3b1d30","requestSubscriptionOwnerTransfer(uint64,address)":"04c357cb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint64,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"getRequestConfig()\":{\"returns\":{\"_0\":\"minimumRequestConfirmations global min for request confirmations\",\"_1\":\"maxGasLimit global max for request gas limit\",\"_2\":\"s_provingKeyHashes list of registered key hashes\"}},\"getSubscription(uint64)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- number of requests for this subscription, determines fee tier.\"}},\"removeConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"params\":{\"callbackGasLimit\":\"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]\",\"keyHash\":\"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.\",\"minimumRequestConfirmations\":\"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].\",\"numWords\":\"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.\",\"subId\":\"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash.\"},\"returns\":{\"requestId\":\"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords.\"}},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"notice\":\"Request subscription owner transfer.\"},\"addConsumer(uint64,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint64,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"getRequestConfig()\":{\"notice\":\"Get configuration relevant for making requests\"},\"getSubscription(uint64)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint64,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"notice\":\"Request a set of random words.\"},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":\"VRFCoordinatorV2Interface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig()\\n    external\\n    view\\n    returns (\\n      uint16,\\n      uint32,\\n      bytes32[] memory\\n    );\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(uint64 subId)\\n    external\\n    view\\n    returns (\\n      uint96 balance,\\n      uint64 reqCount,\\n      address owner,\\n      address[] memory consumers\\n    );\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint64 subId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x54cdc97717cbae1a51a5500c8ee4875ebf056c95b54d2155a9544a79cb4f4494\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"acceptSubscriptionOwnerTransfer(uint64)":{"notice":"Request subscription owner transfer."},"addConsumer(uint64,address)":{"notice":"Add a consumer to a VRF subscription."},"cancelSubscription(uint64,address)":{"notice":"Cancel a subscription"},"createSubscription()":{"notice":"Create a VRF subscription."},"getRequestConfig()":{"notice":"Get configuration relevant for making requests"},"getSubscription(uint64)":{"notice":"Get a VRF subscription."},"removeConsumer(uint64,address)":{"notice":"Remove a consumer from a VRF subscription."},"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":{"notice":"Request a set of random words."},"requestSubscriptionOwnerTransfer(uint64,address)":{"notice":"Request subscription owner transfer."}},"version":1}}},"contracts/Raffle.sol":{"Raffle":{"abi":[{"inputs":[{"internalType":"address","name":"vrfCoordinatorV2","type":"address"},{"internalType":"uint256","name":"entranceFee","type":"uint256"},{"internalType":"bytes32","name":"gasLane","type":"bytes32"},{"internalType":"uint64","name":"subscriptionId","type":"uint64"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint256","name":"interval","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[],"name":"Raffle__NotEnoughETHEntered","type":"error"},{"inputs":[],"name":"Raffle__NotOpen","type":"error"},{"inputs":[],"name":"Raffle__TransferFailed","type":"error"},{"inputs":[{"internalType":"uint256","name":"currentBalance","type":"uint256"},{"internalType":"uint256","name":"numPlayers","type":"uint256"},{"internalType":"uint256","name":"raffleState","type":"uint256"}],"name":"Raffle__UpKeepNotNeeded","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"player","type":"address"}],"name":"RaffleEnter","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"requestId","type":"uint256"}],"name":"RequestedRaffleWinner","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"winner","type":"address"}],"name":"WinnerPicked","type":"event"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"}],"name":"checkUpkeep","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"enterRaffle","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"getEntranceFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getNumWords","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getPlayer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRaffleState","outputs":[{"internalType":"enum Raffle.RaffleState","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRecentWinner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"}],"name":"performUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"checkUpkeep(bytes)":{"details":"This is the function that the Chainlink Keeper nodes call They look for the`upkeepNeeded` to return true. The following should be true in order to return true. 1. Our time internal should have passed 2. The lottery should have at least 1 player, and have some ETH 3. Our subscription is funded with LINK 4. Lottery should be in an *open* state, and when it is requesting for a random number, it should be a *closed/calculating* state, to prevent people from joining during that time."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_203":{"entryPoint":null,"id":203,"parameterSlots":1,"returnSlots":0},"@_497":{"entryPoint":null,"id":497,"parameterSlots":6,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":406,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":524,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":465,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32_fromMemory":{"entryPoint":658,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint64_fromMemory":{"entryPoint":593,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256t_bytes32t_uint64t_uint32t_uint256_fromMemory":{"entryPoint":681,"id":null,"parameterSlots":2,"returnSlots":6},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":360,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":488,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":328,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":429,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":616,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":547,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x21":{"entryPoint":837,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":323,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":380,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":498,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":439,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":632,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint64":{"entryPoint":567,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3636:8","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:8","statements":[{"nodeType":"YulAssignment","src":"57:19:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:8","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:8"},"nodeType":"YulFunctionCall","src":"67:9:8"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:8"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:8","type":""}],"src":"7:75:8"},{"body":{"nodeType":"YulBlock","src":"177:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:8"},"nodeType":"YulFunctionCall","src":"187:12:8"},"nodeType":"YulExpressionStatement","src":"187:12:8"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:8"},{"body":{"nodeType":"YulBlock","src":"300:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:8"},"nodeType":"YulFunctionCall","src":"310:12:8"},"nodeType":"YulExpressionStatement","src":"310:12:8"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:8"},{"body":{"nodeType":"YulBlock","src":"379:81:8","statements":[{"nodeType":"YulAssignment","src":"389:65:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:8","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:8"},"nodeType":"YulFunctionCall","src":"400:54:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:8"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:8","type":""}],"src":"334:126:8"},{"body":{"nodeType":"YulBlock","src":"511:51:8","statements":[{"nodeType":"YulAssignment","src":"521:35:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:8"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:8"},"nodeType":"YulFunctionCall","src":"532:24:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:8"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:8","type":""}],"src":"466:96:8"},{"body":{"nodeType":"YulBlock","src":"611:79:8","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:8"},"nodeType":"YulFunctionCall","src":"670:12:8"},"nodeType":"YulExpressionStatement","src":"670:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:8"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:8"},"nodeType":"YulFunctionCall","src":"641:24:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:8"},"nodeType":"YulFunctionCall","src":"631:35:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:8"},"nodeType":"YulFunctionCall","src":"624:43:8"},"nodeType":"YulIf","src":"621:63:8"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:8","type":""}],"src":"568:122:8"},{"body":{"nodeType":"YulBlock","src":"759:80:8","statements":[{"nodeType":"YulAssignment","src":"769:22:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:8"},"nodeType":"YulFunctionCall","src":"778:13:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:8"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:8"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:8"},"nodeType":"YulFunctionCall","src":"800:33:8"},"nodeType":"YulExpressionStatement","src":"800:33:8"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:8","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:8","type":""}],"src":"696:143:8"},{"body":{"nodeType":"YulBlock","src":"890:32:8","statements":[{"nodeType":"YulAssignment","src":"900:16:8","value":{"name":"value","nodeType":"YulIdentifier","src":"911:5:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"900:7:8"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"872:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"882:7:8","type":""}],"src":"845:77:8"},{"body":{"nodeType":"YulBlock","src":"971:79:8","statements":[{"body":{"nodeType":"YulBlock","src":"1028:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1037:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1040:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1030:6:8"},"nodeType":"YulFunctionCall","src":"1030:12:8"},"nodeType":"YulExpressionStatement","src":"1030:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"994:5:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1019:5:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1001:17:8"},"nodeType":"YulFunctionCall","src":"1001:24:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"991:2:8"},"nodeType":"YulFunctionCall","src":"991:35:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"984:6:8"},"nodeType":"YulFunctionCall","src":"984:43:8"},"nodeType":"YulIf","src":"981:63:8"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"964:5:8","type":""}],"src":"928:122:8"},{"body":{"nodeType":"YulBlock","src":"1119:80:8","statements":[{"nodeType":"YulAssignment","src":"1129:22:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1144:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1138:5:8"},"nodeType":"YulFunctionCall","src":"1138:13:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1129:5:8"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1187:5:8"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1160:26:8"},"nodeType":"YulFunctionCall","src":"1160:33:8"},"nodeType":"YulExpressionStatement","src":"1160:33:8"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1097:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"1105:3:8","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1113:5:8","type":""}],"src":"1056:143:8"},{"body":{"nodeType":"YulBlock","src":"1250:32:8","statements":[{"nodeType":"YulAssignment","src":"1260:16:8","value":{"name":"value","nodeType":"YulIdentifier","src":"1271:5:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1260:7:8"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1232:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1242:7:8","type":""}],"src":"1205:77:8"},{"body":{"nodeType":"YulBlock","src":"1331:79:8","statements":[{"body":{"nodeType":"YulBlock","src":"1388:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1397:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1400:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1390:6:8"},"nodeType":"YulFunctionCall","src":"1390:12:8"},"nodeType":"YulExpressionStatement","src":"1390:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1354:5:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1379:5:8"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"1361:17:8"},"nodeType":"YulFunctionCall","src":"1361:24:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1351:2:8"},"nodeType":"YulFunctionCall","src":"1351:35:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1344:6:8"},"nodeType":"YulFunctionCall","src":"1344:43:8"},"nodeType":"YulIf","src":"1341:63:8"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1324:5:8","type":""}],"src":"1288:122:8"},{"body":{"nodeType":"YulBlock","src":"1479:80:8","statements":[{"nodeType":"YulAssignment","src":"1489:22:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1504:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1498:5:8"},"nodeType":"YulFunctionCall","src":"1498:13:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1489:5:8"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1547:5:8"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"1520:26:8"},"nodeType":"YulFunctionCall","src":"1520:33:8"},"nodeType":"YulExpressionStatement","src":"1520:33:8"}]},"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1457:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"1465:3:8","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1473:5:8","type":""}],"src":"1416:143:8"},{"body":{"nodeType":"YulBlock","src":"1609:57:8","statements":[{"nodeType":"YulAssignment","src":"1619:41:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1634:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"1641:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1630:3:8"},"nodeType":"YulFunctionCall","src":"1630:30:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1619:7:8"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1591:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1601:7:8","type":""}],"src":"1565:101:8"},{"body":{"nodeType":"YulBlock","src":"1714:78:8","statements":[{"body":{"nodeType":"YulBlock","src":"1770:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1779:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1782:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1772:6:8"},"nodeType":"YulFunctionCall","src":"1772:12:8"},"nodeType":"YulExpressionStatement","src":"1772:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1737:5:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1761:5:8"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"1744:16:8"},"nodeType":"YulFunctionCall","src":"1744:23:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1734:2:8"},"nodeType":"YulFunctionCall","src":"1734:34:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1727:6:8"},"nodeType":"YulFunctionCall","src":"1727:42:8"},"nodeType":"YulIf","src":"1724:62:8"}]},"name":"validator_revert_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1707:5:8","type":""}],"src":"1672:120:8"},{"body":{"nodeType":"YulBlock","src":"1860:79:8","statements":[{"nodeType":"YulAssignment","src":"1870:22:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1885:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1879:5:8"},"nodeType":"YulFunctionCall","src":"1879:13:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1870:5:8"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1927:5:8"}],"functionName":{"name":"validator_revert_t_uint64","nodeType":"YulIdentifier","src":"1901:25:8"},"nodeType":"YulFunctionCall","src":"1901:32:8"},"nodeType":"YulExpressionStatement","src":"1901:32:8"}]},"name":"abi_decode_t_uint64_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1838:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"1846:3:8","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1854:5:8","type":""}],"src":"1798:141:8"},{"body":{"nodeType":"YulBlock","src":"1989:49:8","statements":[{"nodeType":"YulAssignment","src":"1999:33:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2014:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"2021:10:8","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2010:3:8"},"nodeType":"YulFunctionCall","src":"2010:22:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1999:7:8"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1971:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1981:7:8","type":""}],"src":"1945:93:8"},{"body":{"nodeType":"YulBlock","src":"2086:78:8","statements":[{"body":{"nodeType":"YulBlock","src":"2142:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2151:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2154:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2144:6:8"},"nodeType":"YulFunctionCall","src":"2144:12:8"},"nodeType":"YulExpressionStatement","src":"2144:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2109:5:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2133:5:8"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"2116:16:8"},"nodeType":"YulFunctionCall","src":"2116:23:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2106:2:8"},"nodeType":"YulFunctionCall","src":"2106:34:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2099:6:8"},"nodeType":"YulFunctionCall","src":"2099:42:8"},"nodeType":"YulIf","src":"2096:62:8"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2079:5:8","type":""}],"src":"2044:120:8"},{"body":{"nodeType":"YulBlock","src":"2232:79:8","statements":[{"nodeType":"YulAssignment","src":"2242:22:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2257:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2251:5:8"},"nodeType":"YulFunctionCall","src":"2251:13:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2242:5:8"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2299:5:8"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"2273:25:8"},"nodeType":"YulFunctionCall","src":"2273:32:8"},"nodeType":"YulExpressionStatement","src":"2273:32:8"}]},"name":"abi_decode_t_uint32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2210:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"2218:3:8","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2226:5:8","type":""}],"src":"2170:141:8"},{"body":{"nodeType":"YulBlock","src":"2477:970:8","statements":[{"body":{"nodeType":"YulBlock","src":"2524:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2526:77:8"},"nodeType":"YulFunctionCall","src":"2526:79:8"},"nodeType":"YulExpressionStatement","src":"2526:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2498:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"2507:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2494:3:8"},"nodeType":"YulFunctionCall","src":"2494:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"2519:3:8","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2490:3:8"},"nodeType":"YulFunctionCall","src":"2490:33:8"},"nodeType":"YulIf","src":"2487:120:8"},{"nodeType":"YulBlock","src":"2617:128:8","statements":[{"nodeType":"YulVariableDeclaration","src":"2632:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"2646:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2636:6:8","type":""}]},{"nodeType":"YulAssignment","src":"2661:74:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2707:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"2718:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2703:3:8"},"nodeType":"YulFunctionCall","src":"2703:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2727:7:8"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"2671:31:8"},"nodeType":"YulFunctionCall","src":"2671:64:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2661:6:8"}]}]},{"nodeType":"YulBlock","src":"2755:129:8","statements":[{"nodeType":"YulVariableDeclaration","src":"2770:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"2784:2:8","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2774:6:8","type":""}]},{"nodeType":"YulAssignment","src":"2800:74:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2846:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"2857:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2842:3:8"},"nodeType":"YulFunctionCall","src":"2842:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2866:7:8"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"2810:31:8"},"nodeType":"YulFunctionCall","src":"2810:64:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2800:6:8"}]}]},{"nodeType":"YulBlock","src":"2894:129:8","statements":[{"nodeType":"YulVariableDeclaration","src":"2909:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"2923:2:8","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2913:6:8","type":""}]},{"nodeType":"YulAssignment","src":"2939:74:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2985:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"2996:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2981:3:8"},"nodeType":"YulFunctionCall","src":"2981:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3005:7:8"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulIdentifier","src":"2949:31:8"},"nodeType":"YulFunctionCall","src":"2949:64:8"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2939:6:8"}]}]},{"nodeType":"YulBlock","src":"3033:128:8","statements":[{"nodeType":"YulVariableDeclaration","src":"3048:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"3062:2:8","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3052:6:8","type":""}]},{"nodeType":"YulAssignment","src":"3078:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3123:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"3134:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3119:3:8"},"nodeType":"YulFunctionCall","src":"3119:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3143:7:8"}],"functionName":{"name":"abi_decode_t_uint64_fromMemory","nodeType":"YulIdentifier","src":"3088:30:8"},"nodeType":"YulFunctionCall","src":"3088:63:8"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3078:6:8"}]}]},{"nodeType":"YulBlock","src":"3171:129:8","statements":[{"nodeType":"YulVariableDeclaration","src":"3186:17:8","value":{"kind":"number","nodeType":"YulLiteral","src":"3200:3:8","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3190:6:8","type":""}]},{"nodeType":"YulAssignment","src":"3217:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3262:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"3273:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3258:3:8"},"nodeType":"YulFunctionCall","src":"3258:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3282:7:8"}],"functionName":{"name":"abi_decode_t_uint32_fromMemory","nodeType":"YulIdentifier","src":"3227:30:8"},"nodeType":"YulFunctionCall","src":"3227:63:8"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"3217:6:8"}]}]},{"nodeType":"YulBlock","src":"3310:130:8","statements":[{"nodeType":"YulVariableDeclaration","src":"3325:17:8","value":{"kind":"number","nodeType":"YulLiteral","src":"3339:3:8","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3329:6:8","type":""}]},{"nodeType":"YulAssignment","src":"3356:74:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3402:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"3413:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3398:3:8"},"nodeType":"YulFunctionCall","src":"3398:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3422:7:8"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"3366:31:8"},"nodeType":"YulFunctionCall","src":"3366:64:8"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"3356:6:8"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_bytes32t_uint64t_uint32t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2407:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2418:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2430:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2438:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2446:6:8","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2454:6:8","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2462:6:8","type":""},{"name":"value5","nodeType":"YulTypedName","src":"2470:6:8","type":""}],"src":"2317:1130:8"},{"body":{"nodeType":"YulBlock","src":"3481:152:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3498:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3501:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3491:6:8"},"nodeType":"YulFunctionCall","src":"3491:88:8"},"nodeType":"YulExpressionStatement","src":"3491:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3595:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3598:4:8","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3588:6:8"},"nodeType":"YulFunctionCall","src":"3588:15:8"},"nodeType":"YulExpressionStatement","src":"3588:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3619:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3622:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3612:6:8"},"nodeType":"YulFunctionCall","src":"3612:15:8"},"nodeType":"YulExpressionStatement","src":"3612:15:8"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"3453:180:8"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_bytes32t_uint64t_uint32t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint64_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n","id":8,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"610180604052600163ffffffff166101409063ffffffff168152503480156200002757600080fd5b506040516200172d3803806200172d83398181016040528101906200004d9190620002a9565b858073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050508460a081815250508573ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250508360e081815250508267ffffffffffffffff166101008167ffffffffffffffff16815250508163ffffffff166101208163ffffffff16815250506000600160146101000a81548160ff0219169083600181111562000122576200012162000345565b5b02179055504260028190555080610160818152505050505050505062000374565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001758262000148565b9050919050565b620001878162000168565b81146200019357600080fd5b50565b600081519050620001a7816200017c565b92915050565b6000819050919050565b620001c281620001ad565b8114620001ce57600080fd5b50565b600081519050620001e281620001b7565b92915050565b6000819050919050565b620001fd81620001e8565b81146200020957600080fd5b50565b6000815190506200021d81620001f2565b92915050565b600067ffffffffffffffff82169050919050565b620002428162000223565b81146200024e57600080fd5b50565b600081519050620002628162000237565b92915050565b600063ffffffff82169050919050565b620002838162000268565b81146200028f57600080fd5b50565b600081519050620002a38162000278565b92915050565b60008060008060008060c08789031215620002c957620002c862000143565b5b6000620002d989828a0162000196565b9650506020620002ec89828a01620001d1565b9550506040620002ff89828a016200020c565b94505060606200031289828a0162000251565b93505060806200032589828a0162000292565b92505060a06200033889828a01620001d1565b9150509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60805160a05160c05160e0516101005161012051610140516101605161133e620003ef60003960006107260152600081816105d401526106b9015260006105b3015260006105900152600061056f01526000610533015260008181610212015261030f01526000818161024f01526102a3015261133e6000f3fe6080604052600436106100865760003560e01c80634585e33b116100595780634585e33b14610114578063473f1ddc1461013d57806353a2c19a146101685780636e04ff0d14610193578063e55ae4e8146101d157610086565b806309bc33a71461008b578063115cbaf5146100b65780631fe543e3146100e15780632cfcc5391461010a575b600080fd5b34801561009757600080fd5b506100a061020e565b6040516100ad9190610ac8565b60405180910390f35b3480156100c257600080fd5b506100cb610236565b6040516100d89190610b5a565b60405180910390f35b3480156100ed57600080fd5b5061010860048036038101906101039190610d0e565b61024d565b005b61011261030d565b005b34801561012057600080fd5b5061013b60048036038101906101369190610dc5565b61047c565b005b34801561014957600080fd5b5061015261068b565b60405161015f9190610e53565b60405180910390f35b34801561017457600080fd5b5061017d6106b5565b60405161018a9190610ac8565b60405180910390f35b34801561019f57600080fd5b506101ba60048036038101906101b59190610f23565b6106e3565b6040516101c8929190611006565b60405180910390f35b3480156101dd57600080fd5b506101f860048036038101906101f39190611036565b610790565b6040516102059190610e53565b60405180910390f35b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600160149054906101000a900460ff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ff57337f00000000000000000000000000000000000000000000000000000000000000006040517f1cf993f40000000000000000000000000000000000000000000000000000000081526004016102f6929190611063565b60405180910390fd5b61030982826107d7565b5050565b7f0000000000000000000000000000000000000000000000000000000000000000341015610367576040517fbd4e069500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600181111561037b5761037a610ae3565b5b600160149054906101000a900460ff16600181111561039d5761039c610ae3565b5b146103d4576040517f1425571c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f0805e1d667bddb8a95f0f09880cf94f403fb596ce79928d9f29b74203ba284d460405160405180910390a2565b6000610496604051806020016040528060008152506106e3565b509050806105055747600080549050600160149054906101000a900460ff1660018111156104c7576104c6610ae3565b5b6040517f3a8d60860000000000000000000000000000000000000000000000000000000081526004016104fc9392919061108c565b60405180910390fd5b60018060146101000a81548160ff0219169083600181111561052a57610529610ae3565b5b021790555060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635d3b1d307f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000060037f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006040518663ffffffff1660e01b815260040161061395949392919061113b565b6020604051808303816000875af1158015610632573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065691906111a3565b9050807fcd6e45c8998311cab7e9d4385596cac867e20a0587194b954fa3a731c93ce78b60405160405180910390a250505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60007f000000000000000000000000000000000000000000000000000000000000000063ffffffff16905090565b600060606000600160149054906101000a900460ff16600181111561070b5761070a610ae3565b5b6000600181111561071f5761071e610ae3565b5b14905060007f00000000000000000000000000000000000000000000000000000000000000006002544261075391906111ff565b119050600080600080549050119050600080471190508380156107735750825b801561077c5750815b80156107855750805b955050505050915091565b60008082815481106107a5576107a4611233565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008080549050826000815181106107f2576107f1611233565b5b60200260200101516108049190611291565b9050600080828154811061081b5761081a611233565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160146101000a81548160ff021916908360018111156108af576108ae610ae3565b5b0217905550600067ffffffffffffffff8111156108cf576108ce610bcb565b5b6040519080825280602002602001820160405280156108fd5781602001602082028036833780820191505090505b5060009080519060200190610913929190610a08565b504260028190555060008173ffffffffffffffffffffffffffffffffffffffff1647604051610941906112f3565b60006040518083038185875af1925050503d806000811461097e576040519150601f19603f3d011682016040523d82523d6000602084013e610983565b606091505b50509050806109be576040517fa1d04b3900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff167f5b690ec4a06fe979403046eaeea5b3ce38524683c3001f662c8b5a829632f7df60405160405180910390a25050505050565b828054828255906000526020600020908101928215610a81579160200282015b82811115610a805782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a28565b5b509050610a8e9190610a92565b5090565b5b80821115610aab576000816000905550600101610a93565b5090565b6000819050919050565b610ac281610aaf565b82525050565b6000602082019050610add6000830184610ab9565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110610b2357610b22610ae3565b5b50565b6000819050610b3482610b12565b919050565b6000610b4482610b26565b9050919050565b610b5481610b39565b82525050565b6000602082019050610b6f6000830184610b4b565b92915050565b6000604051905090565b600080fd5b600080fd5b610b9281610aaf565b8114610b9d57600080fd5b50565b600081359050610baf81610b89565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610c0382610bba565b810181811067ffffffffffffffff82111715610c2257610c21610bcb565b5b80604052505050565b6000610c35610b75565b9050610c418282610bfa565b919050565b600067ffffffffffffffff821115610c6157610c60610bcb565b5b602082029050602081019050919050565b600080fd5b6000610c8a610c8584610c46565b610c2b565b90508083825260208201905060208402830185811115610cad57610cac610c72565b5b835b81811015610cd65780610cc28882610ba0565b845260208401935050602081019050610caf565b5050509392505050565b600082601f830112610cf557610cf4610bb5565b5b8135610d05848260208601610c77565b91505092915050565b60008060408385031215610d2557610d24610b7f565b5b6000610d3385828601610ba0565b925050602083013567ffffffffffffffff811115610d5457610d53610b84565b5b610d6085828601610ce0565b9150509250929050565b600080fd5b60008083601f840112610d8557610d84610bb5565b5b8235905067ffffffffffffffff811115610da257610da1610d6a565b5b602083019150836001820283011115610dbe57610dbd610c72565b5b9250929050565b60008060208385031215610ddc57610ddb610b7f565b5b600083013567ffffffffffffffff811115610dfa57610df9610b84565b5b610e0685828601610d6f565b92509250509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e3d82610e12565b9050919050565b610e4d81610e32565b82525050565b6000602082019050610e686000830184610e44565b92915050565b600080fd5b600067ffffffffffffffff821115610e8e57610e8d610bcb565b5b610e9782610bba565b9050602081019050919050565b82818337600083830152505050565b6000610ec6610ec184610e73565b610c2b565b905082815260208101848484011115610ee257610ee1610e6e565b5b610eed848285610ea4565b509392505050565b600082601f830112610f0a57610f09610bb5565b5b8135610f1a848260208601610eb3565b91505092915050565b600060208284031215610f3957610f38610b7f565b5b600082013567ffffffffffffffff811115610f5757610f56610b84565b5b610f6384828501610ef5565b91505092915050565b60008115159050919050565b610f8181610f6c565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610fc1578082015181840152602081019050610fa6565b60008484015250505050565b6000610fd882610f87565b610fe28185610f92565b9350610ff2818560208601610fa3565b610ffb81610bba565b840191505092915050565b600060408201905061101b6000830185610f78565b818103602083015261102d8184610fcd565b90509392505050565b60006020828403121561104c5761104b610b7f565b5b600061105a84828501610ba0565b91505092915050565b60006040820190506110786000830185610e44565b6110856020830184610e44565b9392505050565b60006060820190506110a16000830186610ab9565b6110ae6020830185610ab9565b6110bb6040830184610ab9565b949350505050565b6000819050919050565b6110d6816110c3565b82525050565b600067ffffffffffffffff82169050919050565b6110f9816110dc565b82525050565b600061ffff82169050919050565b611116816110ff565b82525050565b600063ffffffff82169050919050565b6111358161111c565b82525050565b600060a08201905061115060008301886110cd565b61115d60208301876110f0565b61116a604083018661110d565b611177606083018561112c565b611184608083018461112c565b9695505050505050565b60008151905061119d81610b89565b92915050565b6000602082840312156111b9576111b8610b7f565b5b60006111c78482850161118e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061120a82610aaf565b915061121583610aaf565b925082820390508181111561122d5761122c6111d0565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061129c82610aaf565b91506112a783610aaf565b9250826112b7576112b6611262565b5b828206905092915050565b600081905092915050565b50565b60006112dd6000836112c2565b91506112e8826112cd565b600082019050919050565b60006112fe826112d0565b915081905091905056fea26469706673582212201becdc1801efee8aead59afd8f8d3dcb968a307960b49f480d377f7cff39621664736f6c63430008120033","opcodes":"PUSH2 0x180 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH4 0xFFFFFFFF AND PUSH2 0x140 SWAP1 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x172D CODESIZE SUB DUP1 PUSH3 0x172D DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x4D SWAP2 SWAP1 PUSH3 0x2A9 JUMP JUMPDEST DUP6 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP DUP5 PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x100 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 PUSH4 0xFFFFFFFF AND PUSH2 0x120 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH3 0x122 JUMPI PUSH3 0x121 PUSH3 0x345 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP1 PUSH2 0x160 DUP2 DUP2 MSTORE POP POP POP POP POP POP POP POP PUSH3 0x374 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x175 DUP3 PUSH3 0x148 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x187 DUP2 PUSH3 0x168 JUMP JUMPDEST DUP2 EQ PUSH3 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1A7 DUP2 PUSH3 0x17C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1C2 DUP2 PUSH3 0x1AD JUMP JUMPDEST DUP2 EQ PUSH3 0x1CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1E2 DUP2 PUSH3 0x1B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1FD DUP2 PUSH3 0x1E8 JUMP JUMPDEST DUP2 EQ PUSH3 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x21D DUP2 PUSH3 0x1F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x242 DUP2 PUSH3 0x223 JUMP JUMPDEST DUP2 EQ PUSH3 0x24E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x262 DUP2 PUSH3 0x237 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x283 DUP2 PUSH3 0x268 JUMP JUMPDEST DUP2 EQ PUSH3 0x28F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2A3 DUP2 PUSH3 0x278 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0x2C9 JUMPI PUSH3 0x2C8 PUSH3 0x143 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2D9 DUP10 DUP3 DUP11 ADD PUSH3 0x196 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH3 0x2EC DUP10 DUP3 DUP11 ADD PUSH3 0x1D1 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH3 0x2FF DUP10 DUP3 DUP11 ADD PUSH3 0x20C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH3 0x312 DUP10 DUP3 DUP11 ADD PUSH3 0x251 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH3 0x325 DUP10 DUP3 DUP11 ADD PUSH3 0x292 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH3 0x338 DUP10 DUP3 DUP11 ADD PUSH3 0x1D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH2 0x133E PUSH3 0x3EF PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x726 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x5D4 ADD MSTORE PUSH2 0x6B9 ADD MSTORE PUSH1 0x0 PUSH2 0x5B3 ADD MSTORE PUSH1 0x0 PUSH2 0x590 ADD MSTORE PUSH1 0x0 PUSH2 0x56F ADD MSTORE PUSH1 0x0 PUSH2 0x533 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x212 ADD MSTORE PUSH2 0x30F ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x24F ADD MSTORE PUSH2 0x2A3 ADD MSTORE PUSH2 0x133E PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x86 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4585E33B GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0x473F1DDC EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x53A2C19A EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0xE55AE4E8 EQ PUSH2 0x1D1 JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x9BC33A7 EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x115CBAF5 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0xE1 JUMPI DUP1 PUSH4 0x2CFCC539 EQ PUSH2 0x10A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH2 0x20E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xAC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCB PUSH2 0x236 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0xB5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x103 SWAP2 SWAP1 PUSH2 0xD0E JUMP JUMPDEST PUSH2 0x24D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x112 PUSH2 0x30D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x136 SWAP2 SWAP1 PUSH2 0xDC5 JUMP JUMPDEST PUSH2 0x47C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x152 PUSH2 0x68B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xE53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x174 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17D PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0xAC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0xF23 JUMP JUMPDEST PUSH2 0x6E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C8 SWAP3 SWAP2 SWAP1 PUSH2 0x1006 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x1036 JUMP JUMPDEST PUSH2 0x790 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x205 SWAP2 SWAP1 PUSH2 0xE53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2FF JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F6 SWAP3 SWAP2 SWAP1 PUSH2 0x1063 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x309 DUP3 DUP3 PUSH2 0x7D7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 CALLVALUE LT ISZERO PUSH2 0x367 JUMPI PUSH1 0x40 MLOAD PUSH32 0xBD4E069500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x37B JUMPI PUSH2 0x37A PUSH2 0xAE3 JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x39D JUMPI PUSH2 0x39C PUSH2 0xAE3 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x3D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1425571C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x805E1D667BDDB8A95F0F09880CF94F403FB596CE79928D9F29B74203BA284D4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x496 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x6E3 JUMP JUMPDEST POP SWAP1 POP DUP1 PUSH2 0x505 JUMPI SELFBALANCE PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x4C7 JUMPI PUSH2 0x4C6 PUSH2 0xAE3 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x3A8D608600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x108C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x52A JUMPI PUSH2 0x529 PUSH2 0xAE3 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D3B1D30 PUSH32 0x0 PUSH32 0x0 PUSH1 0x3 PUSH32 0x0 PUSH32 0x0 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x613 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x113B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x632 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x656 SWAP2 SWAP1 PUSH2 0x11A3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH32 0xCD6E45C8998311CAB7E9D4385596CAC867E20A0587194B954FA3A731C93CE78B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x70B JUMPI PUSH2 0x70A PUSH2 0xAE3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x71F JUMPI PUSH2 0x71E PUSH2 0xAE3 JUMP JUMPDEST JUMPDEST EQ SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0x753 SWAP2 SWAP1 PUSH2 0x11FF JUMP JUMPDEST GT SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 POP GT SWAP1 POP PUSH1 0x0 DUP1 SELFBALANCE GT SWAP1 POP DUP4 DUP1 ISZERO PUSH2 0x773 JUMPI POP DUP3 JUMPDEST DUP1 ISZERO PUSH2 0x77C JUMPI POP DUP2 JUMPDEST DUP1 ISZERO PUSH2 0x785 JUMPI POP DUP1 JUMPDEST SWAP6 POP POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x7A5 JUMPI PUSH2 0x7A4 PUSH2 0x1233 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SLOAD SWAP1 POP DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x7F2 JUMPI PUSH2 0x7F1 PUSH2 0x1233 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x804 SWAP2 SWAP1 PUSH2 0x1291 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x81B JUMPI PUSH2 0x81A PUSH2 0x1233 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x8AF JUMPI PUSH2 0x8AE PUSH2 0xAE3 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8CF JUMPI PUSH2 0x8CE PUSH2 0xBCB JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x8FD JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x913 SWAP3 SWAP2 SWAP1 PUSH2 0xA08 JUMP JUMPDEST POP TIMESTAMP PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0x941 SWAP1 PUSH2 0x12F3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x97E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x983 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x9BE JUMPI PUSH1 0x40 MLOAD PUSH32 0xA1D04B3900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5B690EC4A06FE979403046EAEEA5B3CE38524683C3001F662C8B5A829632F7DF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xA81 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xA80 JUMPI DUP3 MLOAD DUP3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xA28 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0xA8E SWAP2 SWAP1 PUSH2 0xA92 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xAAB JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xA93 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAC2 DUP2 PUSH2 0xAAF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xADD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAB9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0xB23 JUMPI PUSH2 0xB22 PUSH2 0xAE3 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0xB34 DUP3 PUSH2 0xB12 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB44 DUP3 PUSH2 0xB26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB54 DUP2 PUSH2 0xB39 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB6F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB4B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB92 DUP2 PUSH2 0xAAF JUMP JUMPDEST DUP2 EQ PUSH2 0xB9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBAF DUP2 PUSH2 0xB89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xC03 DUP3 PUSH2 0xBBA JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xC22 JUMPI PUSH2 0xC21 PUSH2 0xBCB JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC35 PUSH2 0xB75 JUMP JUMPDEST SWAP1 POP PUSH2 0xC41 DUP3 DUP3 PUSH2 0xBFA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xC61 JUMPI PUSH2 0xC60 PUSH2 0xBCB JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC8A PUSH2 0xC85 DUP5 PUSH2 0xC46 JUMP JUMPDEST PUSH2 0xC2B JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xCAD JUMPI PUSH2 0xCAC PUSH2 0xC72 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xCD6 JUMPI DUP1 PUSH2 0xCC2 DUP9 DUP3 PUSH2 0xBA0 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xCAF JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xCF5 JUMPI PUSH2 0xCF4 PUSH2 0xBB5 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD05 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xC77 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD25 JUMPI PUSH2 0xD24 PUSH2 0xB7F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD33 DUP6 DUP3 DUP7 ADD PUSH2 0xBA0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD54 JUMPI PUSH2 0xD53 PUSH2 0xB84 JUMP JUMPDEST JUMPDEST PUSH2 0xD60 DUP6 DUP3 DUP7 ADD PUSH2 0xCE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xD85 JUMPI PUSH2 0xD84 PUSH2 0xBB5 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDA2 JUMPI PUSH2 0xDA1 PUSH2 0xD6A JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xDBE JUMPI PUSH2 0xDBD PUSH2 0xC72 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDDC JUMPI PUSH2 0xDDB PUSH2 0xB7F JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDFA JUMPI PUSH2 0xDF9 PUSH2 0xB84 JUMP JUMPDEST JUMPDEST PUSH2 0xE06 DUP6 DUP3 DUP7 ADD PUSH2 0xD6F JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE3D DUP3 PUSH2 0xE12 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE4D DUP2 PUSH2 0xE32 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE68 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE44 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xE8E JUMPI PUSH2 0xE8D PUSH2 0xBCB JUMP JUMPDEST JUMPDEST PUSH2 0xE97 DUP3 PUSH2 0xBBA JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEC6 PUSH2 0xEC1 DUP5 PUSH2 0xE73 JUMP JUMPDEST PUSH2 0xC2B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xEE2 JUMPI PUSH2 0xEE1 PUSH2 0xE6E JUMP JUMPDEST JUMPDEST PUSH2 0xEED DUP5 DUP3 DUP6 PUSH2 0xEA4 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF0A JUMPI PUSH2 0xF09 PUSH2 0xBB5 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF1A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xEB3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF39 JUMPI PUSH2 0xF38 PUSH2 0xB7F JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF57 JUMPI PUSH2 0xF56 PUSH2 0xB84 JUMP JUMPDEST JUMPDEST PUSH2 0xF63 DUP5 DUP3 DUP6 ADD PUSH2 0xEF5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF81 DUP2 PUSH2 0xF6C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFC1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xFA6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD8 DUP3 PUSH2 0xF87 JUMP JUMPDEST PUSH2 0xFE2 DUP2 DUP6 PUSH2 0xF92 JUMP JUMPDEST SWAP4 POP PUSH2 0xFF2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xFA3 JUMP JUMPDEST PUSH2 0xFFB DUP2 PUSH2 0xBBA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x101B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xF78 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x102D DUP2 DUP5 PUSH2 0xFCD JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x104C JUMPI PUSH2 0x104B PUSH2 0xB7F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x105A DUP5 DUP3 DUP6 ADD PUSH2 0xBA0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1078 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xE44 JUMP JUMPDEST PUSH2 0x1085 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE44 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x10A1 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xAB9 JUMP JUMPDEST PUSH2 0x10AE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xAB9 JUMP JUMPDEST PUSH2 0x10BB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xAB9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10D6 DUP2 PUSH2 0x10C3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10F9 DUP2 PUSH2 0x10DC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1116 DUP2 PUSH2 0x10FF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1135 DUP2 PUSH2 0x111C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1150 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x10CD JUMP JUMPDEST PUSH2 0x115D PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x10F0 JUMP JUMPDEST PUSH2 0x116A PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x110D JUMP JUMPDEST PUSH2 0x1177 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x112C JUMP JUMPDEST PUSH2 0x1184 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x112C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x119D DUP2 PUSH2 0xB89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11B9 JUMPI PUSH2 0x11B8 PUSH2 0xB7F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11C7 DUP5 DUP3 DUP6 ADD PUSH2 0x118E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x120A DUP3 PUSH2 0xAAF JUMP JUMPDEST SWAP2 POP PUSH2 0x1215 DUP4 PUSH2 0xAAF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x122D JUMPI PUSH2 0x122C PUSH2 0x11D0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x129C DUP3 PUSH2 0xAAF JUMP JUMPDEST SWAP2 POP PUSH2 0x12A7 DUP4 PUSH2 0xAAF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x12B7 JUMPI PUSH2 0x12B6 PUSH2 0x1262 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12DD PUSH1 0x0 DUP4 PUSH2 0x12C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x12E8 DUP3 PUSH2 0x12CD JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12FE DUP3 PUSH2 0x12D0 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL 0xEC 0xDC XOR ADD 0xEF 0xEE DUP11 0xEA 0xD5 SWAP11 REVERT DUP16 DUP14 RETURNDATASIZE 0xCB SWAP7 DUP11 ADDRESS PUSH26 0x60B49F480D377F7CFF39621664736F6C63430008120033000000 ","sourceMap":"823:6161:7:-:0;;;1471:1;1434:38;;;;;;;;;2023:641;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2242:16;5616:15:2;5599:32;;;;;;;;;;5556:80;2286:11:7::1;2270:27;;;;::::0;::::1;2352:16;2307:62;;;;;;;;::::0;::::1;2391:7;2379:19;;;;::::0;::::1;2427:14;2408:33;;;;;;;;::::0;::::1;2472:16;2451:37;;;;;;;;::::0;::::1;2514:16;2498:13;;:32;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2611:15;2593;:33;;;;2649:8;2636:21;;;;::::0;::::1;2023:641:::0;;;;;;823:6161;;88:117:8;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:77::-;1242:7;1271:5;1260:16;;1205:77;;;:::o;1288:122::-;1361:24;1379:5;1361:24;:::i;:::-;1354:5;1351:35;1341:63;;1400:1;1397;1390:12;1341:63;1288:122;:::o;1416:143::-;1473:5;1504:6;1498:13;1489:22;;1520:33;1547:5;1520:33;:::i;:::-;1416:143;;;;:::o;1565:101::-;1601:7;1641:18;1634:5;1630:30;1619:41;;1565:101;;;:::o;1672:120::-;1744:23;1761:5;1744:23;:::i;:::-;1737:5;1734:34;1724:62;;1782:1;1779;1772:12;1724:62;1672:120;:::o;1798:141::-;1854:5;1885:6;1879:13;1870:22;;1901:32;1927:5;1901:32;:::i;:::-;1798:141;;;;:::o;1945:93::-;1981:7;2021:10;2014:5;2010:22;1999:33;;1945:93;;;:::o;2044:120::-;2116:23;2133:5;2116:23;:::i;:::-;2109:5;2106:34;2096:62;;2154:1;2151;2144:12;2096:62;2044:120;:::o;2170:141::-;2226:5;2257:6;2251:13;2242:22;;2273:32;2299:5;2273:32;:::i;:::-;2170:141;;;;:::o;2317:1130::-;2430:6;2438;2446;2454;2462;2470;2519:3;2507:9;2498:7;2494:23;2490:33;2487:120;;;2526:79;;:::i;:::-;2487:120;2646:1;2671:64;2727:7;2718:6;2707:9;2703:22;2671:64;:::i;:::-;2661:74;;2617:128;2784:2;2810:64;2866:7;2857:6;2846:9;2842:22;2810:64;:::i;:::-;2800:74;;2755:129;2923:2;2949:64;3005:7;2996:6;2985:9;2981:22;2949:64;:::i;:::-;2939:74;;2894:129;3062:2;3088:63;3143:7;3134:6;3123:9;3119:22;3088:63;:::i;:::-;3078:73;;3033:128;3200:3;3227:63;3282:7;3273:6;3262:9;3258:22;3227:63;:::i;:::-;3217:73;;3171:129;3339:3;3366:64;3422:7;3413:6;3402:9;3398:22;3366:64;:::i;:::-;3356:74;;3310:130;2317:1130;;;;;;;;:::o;3453:180::-;3501:77;3498:1;3491:88;3598:4;3595:1;3588:15;3622:4;3619:1;3612:15;823:6161:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@checkUpkeep_593":{"entryPoint":1763,"id":593,"parameterSlots":1,"returnSlots":2},"@enterRaffle_534":{"entryPoint":781,"id":534,"parameterSlots":0,"returnSlots":0},"@fulfillRandomWords_715":{"entryPoint":2007,"id":715,"parameterSlots":2,"returnSlots":0},"@getEntranceFee_723":{"entryPoint":526,"id":723,"parameterSlots":0,"returnSlots":1},"@getNumWords_760":{"entryPoint":1717,"id":760,"parameterSlots":0,"returnSlots":1},"@getPlayer_735":{"entryPoint":1936,"id":735,"parameterSlots":1,"returnSlots":1},"@getRaffleState_752":{"entryPoint":566,"id":752,"parameterSlots":0,"returnSlots":1},"@getRecentWinner_743":{"entryPoint":1675,"id":743,"parameterSlots":0,"returnSlots":1},"@performUpkeep_644":{"entryPoint":1148,"id":644,"parameterSlots":2,"returnSlots":0},"@rawFulfillRandomWords_238":{"entryPoint":589,"id":238,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":3191,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":3763,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":3296,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":3439,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bytes_memory_ptr":{"entryPoint":3829,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2976,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":4494,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes_calldata_ptr":{"entryPoint":3525,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes_memory_ptr":{"entryPoint":3875,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":4150,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":4515,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":3342,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3652,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3960,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":4301,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":4045,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_enum$_RaffleState_$401_to_t_uint8_fromStack":{"entryPoint":2891,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4816,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint16_to_t_uint16_fromStack":{"entryPoint":4365,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2745,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":4396,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":4336,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":4851,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3667,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":4195,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":4102,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed":{"entryPoint":4411,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_enum$_RaffleState_$401__to_t_uint8__fromStack_reversed":{"entryPoint":2906,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":2760,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":4236,"id":null,"parameterSlots":4,"returnSlots":1},"allocate_memory":{"entryPoint":3115,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":2933,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":3142,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":3699,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":3975,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":3986,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4802,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":4607,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3634,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3948,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":4291,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_enum$_RaffleState_$401":{"entryPoint":2854,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint16":{"entryPoint":4351,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3602,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2735,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":4380,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":4316,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_enum$_RaffleState_$401_to_t_uint8":{"entryPoint":2873,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":3748,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":4003,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":3066,"id":null,"parameterSlots":2,"returnSlots":0},"mod_t_uint256":{"entryPoint":4753,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":4560,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":4706,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":2787,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":4659,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3019,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":3434,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":2997,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":3186,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":3694,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":2948,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2943,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":3002,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":4813,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_t_enum$_RaffleState_$401":{"entryPoint":2834,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2953,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:15544:8","statements":[{"body":{"nodeType":"YulBlock","src":"52:32:8","statements":[{"nodeType":"YulAssignment","src":"62:16:8","value":{"name":"value","nodeType":"YulIdentifier","src":"73:5:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:8"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:8","type":""}],"src":"7:77:8"},{"body":{"nodeType":"YulBlock","src":"155:53:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"172:3:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"195:5:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"177:17:8"},"nodeType":"YulFunctionCall","src":"177:24:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"165:6:8"},"nodeType":"YulFunctionCall","src":"165:37:8"},"nodeType":"YulExpressionStatement","src":"165:37:8"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"143:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"150:3:8","type":""}],"src":"90:118:8"},{"body":{"nodeType":"YulBlock","src":"312:124:8","statements":[{"nodeType":"YulAssignment","src":"322:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"334:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"345:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"330:3:8"},"nodeType":"YulFunctionCall","src":"330:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"322:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"402:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"415:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"426:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"411:3:8"},"nodeType":"YulFunctionCall","src":"411:17:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"358:43:8"},"nodeType":"YulFunctionCall","src":"358:71:8"},"nodeType":"YulExpressionStatement","src":"358:71:8"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"284:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"296:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"307:4:8","type":""}],"src":"214:222:8"},{"body":{"nodeType":"YulBlock","src":"470:152:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"487:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"490:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"480:6:8"},"nodeType":"YulFunctionCall","src":"480:88:8"},"nodeType":"YulExpressionStatement","src":"480:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"584:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"587:4:8","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"577:6:8"},"nodeType":"YulFunctionCall","src":"577:15:8"},"nodeType":"YulExpressionStatement","src":"577:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"608:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"611:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"601:6:8"},"nodeType":"YulFunctionCall","src":"601:15:8"},"nodeType":"YulExpressionStatement","src":"601:15:8"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"442:180:8"},{"body":{"nodeType":"YulBlock","src":"686:62:8","statements":[{"body":{"nodeType":"YulBlock","src":"720:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"722:16:8"},"nodeType":"YulFunctionCall","src":"722:18:8"},"nodeType":"YulExpressionStatement","src":"722:18:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"709:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"716:1:8","type":"","value":"2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"706:2:8"},"nodeType":"YulFunctionCall","src":"706:12:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"699:6:8"},"nodeType":"YulFunctionCall","src":"699:20:8"},"nodeType":"YulIf","src":"696:46:8"}]},"name":"validator_assert_t_enum$_RaffleState_$401","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"679:5:8","type":""}],"src":"628:120:8"},{"body":{"nodeType":"YulBlock","src":"814:81:8","statements":[{"nodeType":"YulAssignment","src":"824:16:8","value":{"name":"value","nodeType":"YulIdentifier","src":"835:5:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"824:7:8"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"883:5:8"}],"functionName":{"name":"validator_assert_t_enum$_RaffleState_$401","nodeType":"YulIdentifier","src":"841:41:8"},"nodeType":"YulFunctionCall","src":"841:48:8"},"nodeType":"YulExpressionStatement","src":"841:48:8"}]},"name":"cleanup_t_enum$_RaffleState_$401","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"796:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"806:7:8","type":""}],"src":"754:141:8"},{"body":{"nodeType":"YulBlock","src":"974:68:8","statements":[{"nodeType":"YulAssignment","src":"984:52:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1030:5:8"}],"functionName":{"name":"cleanup_t_enum$_RaffleState_$401","nodeType":"YulIdentifier","src":"997:32:8"},"nodeType":"YulFunctionCall","src":"997:39:8"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"984:9:8"}]}]},"name":"convert_t_enum$_RaffleState_$401_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"954:5:8","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"964:9:8","type":""}],"src":"901:141:8"},{"body":{"nodeType":"YulBlock","src":"1126:79:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1143:3:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1192:5:8"}],"functionName":{"name":"convert_t_enum$_RaffleState_$401_to_t_uint8","nodeType":"YulIdentifier","src":"1148:43:8"},"nodeType":"YulFunctionCall","src":"1148:50:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1136:6:8"},"nodeType":"YulFunctionCall","src":"1136:63:8"},"nodeType":"YulExpressionStatement","src":"1136:63:8"}]},"name":"abi_encode_t_enum$_RaffleState_$401_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1114:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1121:3:8","type":""}],"src":"1048:157:8"},{"body":{"nodeType":"YulBlock","src":"1322:137:8","statements":[{"nodeType":"YulAssignment","src":"1332:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1344:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"1355:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1340:3:8"},"nodeType":"YulFunctionCall","src":"1340:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1332:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1425:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1438:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"1449:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1434:3:8"},"nodeType":"YulFunctionCall","src":"1434:17:8"}],"functionName":{"name":"abi_encode_t_enum$_RaffleState_$401_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"1368:56:8"},"nodeType":"YulFunctionCall","src":"1368:84:8"},"nodeType":"YulExpressionStatement","src":"1368:84:8"}]},"name":"abi_encode_tuple_t_enum$_RaffleState_$401__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1294:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1306:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1317:4:8","type":""}],"src":"1211:248:8"},{"body":{"nodeType":"YulBlock","src":"1505:35:8","statements":[{"nodeType":"YulAssignment","src":"1515:19:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1531:2:8","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1525:5:8"},"nodeType":"YulFunctionCall","src":"1525:9:8"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1515:6:8"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1498:6:8","type":""}],"src":"1465:75:8"},{"body":{"nodeType":"YulBlock","src":"1635:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1652:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1655:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1645:6:8"},"nodeType":"YulFunctionCall","src":"1645:12:8"},"nodeType":"YulExpressionStatement","src":"1645:12:8"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1546:117:8"},{"body":{"nodeType":"YulBlock","src":"1758:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1775:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1778:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1768:6:8"},"nodeType":"YulFunctionCall","src":"1768:12:8"},"nodeType":"YulExpressionStatement","src":"1768:12:8"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1669:117:8"},{"body":{"nodeType":"YulBlock","src":"1835:79:8","statements":[{"body":{"nodeType":"YulBlock","src":"1892:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1901:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1904:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1894:6:8"},"nodeType":"YulFunctionCall","src":"1894:12:8"},"nodeType":"YulExpressionStatement","src":"1894:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1858:5:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1883:5:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1865:17:8"},"nodeType":"YulFunctionCall","src":"1865:24:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1855:2:8"},"nodeType":"YulFunctionCall","src":"1855:35:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1848:6:8"},"nodeType":"YulFunctionCall","src":"1848:43:8"},"nodeType":"YulIf","src":"1845:63:8"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1828:5:8","type":""}],"src":"1792:122:8"},{"body":{"nodeType":"YulBlock","src":"1972:87:8","statements":[{"nodeType":"YulAssignment","src":"1982:29:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2004:6:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1991:12:8"},"nodeType":"YulFunctionCall","src":"1991:20:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1982:5:8"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2047:5:8"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2020:26:8"},"nodeType":"YulFunctionCall","src":"2020:33:8"},"nodeType":"YulExpressionStatement","src":"2020:33:8"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1950:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"1958:3:8","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1966:5:8","type":""}],"src":"1920:139:8"},{"body":{"nodeType":"YulBlock","src":"2154:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2171:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2174:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2164:6:8"},"nodeType":"YulFunctionCall","src":"2164:12:8"},"nodeType":"YulExpressionStatement","src":"2164:12:8"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"2065:117:8"},{"body":{"nodeType":"YulBlock","src":"2236:54:8","statements":[{"nodeType":"YulAssignment","src":"2246:38:8","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2264:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"2271:2:8","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2260:3:8"},"nodeType":"YulFunctionCall","src":"2260:14:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2280:2:8","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2276:3:8"},"nodeType":"YulFunctionCall","src":"2276:7:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2256:3:8"},"nodeType":"YulFunctionCall","src":"2256:28:8"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2246:6:8"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2219:5:8","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2229:6:8","type":""}],"src":"2188:102:8"},{"body":{"nodeType":"YulBlock","src":"2324:152:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2341:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2344:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2334:6:8"},"nodeType":"YulFunctionCall","src":"2334:88:8"},"nodeType":"YulExpressionStatement","src":"2334:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2438:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2441:4:8","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2431:6:8"},"nodeType":"YulFunctionCall","src":"2431:15:8"},"nodeType":"YulExpressionStatement","src":"2431:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2462:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2465:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2455:6:8"},"nodeType":"YulFunctionCall","src":"2455:15:8"},"nodeType":"YulExpressionStatement","src":"2455:15:8"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2296:180:8"},{"body":{"nodeType":"YulBlock","src":"2525:238:8","statements":[{"nodeType":"YulVariableDeclaration","src":"2535:58:8","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2557:6:8"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2587:4:8"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2565:21:8"},"nodeType":"YulFunctionCall","src":"2565:27:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2553:3:8"},"nodeType":"YulFunctionCall","src":"2553:40:8"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2539:10:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"2704:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2706:16:8"},"nodeType":"YulFunctionCall","src":"2706:18:8"},"nodeType":"YulExpressionStatement","src":"2706:18:8"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2647:10:8"},{"kind":"number","nodeType":"YulLiteral","src":"2659:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2644:2:8"},"nodeType":"YulFunctionCall","src":"2644:34:8"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2683:10:8"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2695:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2680:2:8"},"nodeType":"YulFunctionCall","src":"2680:22:8"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2641:2:8"},"nodeType":"YulFunctionCall","src":"2641:62:8"},"nodeType":"YulIf","src":"2638:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2742:2:8","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2746:10:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2735:6:8"},"nodeType":"YulFunctionCall","src":"2735:22:8"},"nodeType":"YulExpressionStatement","src":"2735:22:8"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2511:6:8","type":""},{"name":"size","nodeType":"YulTypedName","src":"2519:4:8","type":""}],"src":"2482:281:8"},{"body":{"nodeType":"YulBlock","src":"2810:88:8","statements":[{"nodeType":"YulAssignment","src":"2820:30:8","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"2830:18:8"},"nodeType":"YulFunctionCall","src":"2830:20:8"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2820:6:8"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2879:6:8"},{"name":"size","nodeType":"YulIdentifier","src":"2887:4:8"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"2859:19:8"},"nodeType":"YulFunctionCall","src":"2859:33:8"},"nodeType":"YulExpressionStatement","src":"2859:33:8"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"2794:4:8","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2803:6:8","type":""}],"src":"2769:129:8"},{"body":{"nodeType":"YulBlock","src":"2986:229:8","statements":[{"body":{"nodeType":"YulBlock","src":"3091:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3093:16:8"},"nodeType":"YulFunctionCall","src":"3093:18:8"},"nodeType":"YulExpressionStatement","src":"3093:18:8"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3063:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"3071:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3060:2:8"},"nodeType":"YulFunctionCall","src":"3060:30:8"},"nodeType":"YulIf","src":"3057:56:8"},{"nodeType":"YulAssignment","src":"3123:25:8","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3135:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"3143:4:8","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3131:3:8"},"nodeType":"YulFunctionCall","src":"3131:17:8"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3123:4:8"}]},{"nodeType":"YulAssignment","src":"3185:23:8","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3197:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"3203:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3193:3:8"},"nodeType":"YulFunctionCall","src":"3193:15:8"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3185:4:8"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"2970:6:8","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"2981:4:8","type":""}],"src":"2904:311:8"},{"body":{"nodeType":"YulBlock","src":"3310:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3327:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3330:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3320:6:8"},"nodeType":"YulFunctionCall","src":"3320:12:8"},"nodeType":"YulExpressionStatement","src":"3320:12:8"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"3221:117:8"},{"body":{"nodeType":"YulBlock","src":"3463:608:8","statements":[{"nodeType":"YulAssignment","src":"3473:90:8","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3555:6:8"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"3498:56:8"},"nodeType":"YulFunctionCall","src":"3498:64:8"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"3482:15:8"},"nodeType":"YulFunctionCall","src":"3482:81:8"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3473:5:8"}]},{"nodeType":"YulVariableDeclaration","src":"3572:16:8","value":{"name":"array","nodeType":"YulIdentifier","src":"3583:5:8"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"3576:3:8","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3605:5:8"},{"name":"length","nodeType":"YulIdentifier","src":"3612:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3598:6:8"},"nodeType":"YulFunctionCall","src":"3598:21:8"},"nodeType":"YulExpressionStatement","src":"3598:21:8"},{"nodeType":"YulAssignment","src":"3628:23:8","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3639:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"3646:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3635:3:8"},"nodeType":"YulFunctionCall","src":"3635:16:8"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3628:3:8"}]},{"nodeType":"YulVariableDeclaration","src":"3661:44:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3679:6:8"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3691:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"3699:4:8","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3687:3:8"},"nodeType":"YulFunctionCall","src":"3687:17:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3675:3:8"},"nodeType":"YulFunctionCall","src":"3675:30:8"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"3665:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"3733:103:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"3747:77:8"},"nodeType":"YulFunctionCall","src":"3747:79:8"},"nodeType":"YulExpressionStatement","src":"3747:79:8"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"3720:6:8"},{"name":"end","nodeType":"YulIdentifier","src":"3728:3:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3717:2:8"},"nodeType":"YulFunctionCall","src":"3717:15:8"},"nodeType":"YulIf","src":"3714:122:8"},{"body":{"nodeType":"YulBlock","src":"3921:144:8","statements":[{"nodeType":"YulVariableDeclaration","src":"3936:21:8","value":{"name":"src","nodeType":"YulIdentifier","src":"3954:3:8"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"3940:10:8","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3978:3:8"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"4004:10:8"},{"name":"end","nodeType":"YulIdentifier","src":"4016:3:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3983:20:8"},"nodeType":"YulFunctionCall","src":"3983:37:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3971:6:8"},"nodeType":"YulFunctionCall","src":"3971:50:8"},"nodeType":"YulExpressionStatement","src":"3971:50:8"},{"nodeType":"YulAssignment","src":"4034:21:8","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4045:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"4050:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4041:3:8"},"nodeType":"YulFunctionCall","src":"4041:14:8"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"4034:3:8"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3874:3:8"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"3879:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3871:2:8"},"nodeType":"YulFunctionCall","src":"3871:15:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3887:25:8","statements":[{"nodeType":"YulAssignment","src":"3889:21:8","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3900:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"3905:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3896:3:8"},"nodeType":"YulFunctionCall","src":"3896:14:8"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"3889:3:8"}]}]},"pre":{"nodeType":"YulBlock","src":"3849:21:8","statements":[{"nodeType":"YulVariableDeclaration","src":"3851:17:8","value":{"name":"offset","nodeType":"YulIdentifier","src":"3862:6:8"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"3855:3:8","type":""}]}]},"src":"3845:220:8"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3433:6:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"3441:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"3449:3:8","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3457:5:8","type":""}],"src":"3361:710:8"},{"body":{"nodeType":"YulBlock","src":"4171:293:8","statements":[{"body":{"nodeType":"YulBlock","src":"4220:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"4222:77:8"},"nodeType":"YulFunctionCall","src":"4222:79:8"},"nodeType":"YulExpressionStatement","src":"4222:79:8"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4199:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"4207:4:8","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4195:3:8"},"nodeType":"YulFunctionCall","src":"4195:17:8"},{"name":"end","nodeType":"YulIdentifier","src":"4214:3:8"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4191:3:8"},"nodeType":"YulFunctionCall","src":"4191:27:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4184:6:8"},"nodeType":"YulFunctionCall","src":"4184:35:8"},"nodeType":"YulIf","src":"4181:122:8"},{"nodeType":"YulVariableDeclaration","src":"4312:34:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4339:6:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4326:12:8"},"nodeType":"YulFunctionCall","src":"4326:20:8"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4316:6:8","type":""}]},{"nodeType":"YulAssignment","src":"4355:103:8","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4431:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"4439:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4427:3:8"},"nodeType":"YulFunctionCall","src":"4427:17:8"},{"name":"length","nodeType":"YulIdentifier","src":"4446:6:8"},{"name":"end","nodeType":"YulIdentifier","src":"4454:3:8"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"4364:62:8"},"nodeType":"YulFunctionCall","src":"4364:94:8"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4355:5:8"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4149:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"4157:3:8","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4165:5:8","type":""}],"src":"4094:370:8"},{"body":{"nodeType":"YulBlock","src":"4578:576:8","statements":[{"body":{"nodeType":"YulBlock","src":"4624:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4626:77:8"},"nodeType":"YulFunctionCall","src":"4626:79:8"},"nodeType":"YulExpressionStatement","src":"4626:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4599:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"4608:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4595:3:8"},"nodeType":"YulFunctionCall","src":"4595:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"4620:2:8","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4591:3:8"},"nodeType":"YulFunctionCall","src":"4591:32:8"},"nodeType":"YulIf","src":"4588:119:8"},{"nodeType":"YulBlock","src":"4717:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"4732:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"4746:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4736:6:8","type":""}]},{"nodeType":"YulAssignment","src":"4761:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4796:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"4807:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4792:3:8"},"nodeType":"YulFunctionCall","src":"4792:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4816:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4771:20:8"},"nodeType":"YulFunctionCall","src":"4771:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4761:6:8"}]}]},{"nodeType":"YulBlock","src":"4844:303:8","statements":[{"nodeType":"YulVariableDeclaration","src":"4859:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4890:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"4901:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4886:3:8"},"nodeType":"YulFunctionCall","src":"4886:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4873:12:8"},"nodeType":"YulFunctionCall","src":"4873:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4863:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"4952:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4954:77:8"},"nodeType":"YulFunctionCall","src":"4954:79:8"},"nodeType":"YulExpressionStatement","src":"4954:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4924:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"4932:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4921:2:8"},"nodeType":"YulFunctionCall","src":"4921:30:8"},"nodeType":"YulIf","src":"4918:117:8"},{"nodeType":"YulAssignment","src":"5049:88:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5109:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"5120:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5105:3:8"},"nodeType":"YulFunctionCall","src":"5105:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5129:7:8"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5059:45:8"},"nodeType":"YulFunctionCall","src":"5059:78:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5049:6:8"}]}]}]},"name":"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4540:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4551:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4563:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4571:6:8","type":""}],"src":"4470:684:8"},{"body":{"nodeType":"YulBlock","src":"5249:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5266:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5269:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5259:6:8"},"nodeType":"YulFunctionCall","src":"5259:12:8"},"nodeType":"YulExpressionStatement","src":"5259:12:8"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"5160:117:8"},{"body":{"nodeType":"YulBlock","src":"5370:478:8","statements":[{"body":{"nodeType":"YulBlock","src":"5419:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"5421:77:8"},"nodeType":"YulFunctionCall","src":"5421:79:8"},"nodeType":"YulExpressionStatement","src":"5421:79:8"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5398:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"5406:4:8","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5394:3:8"},"nodeType":"YulFunctionCall","src":"5394:17:8"},{"name":"end","nodeType":"YulIdentifier","src":"5413:3:8"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5390:3:8"},"nodeType":"YulFunctionCall","src":"5390:27:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5383:6:8"},"nodeType":"YulFunctionCall","src":"5383:35:8"},"nodeType":"YulIf","src":"5380:122:8"},{"nodeType":"YulAssignment","src":"5511:30:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5534:6:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5521:12:8"},"nodeType":"YulFunctionCall","src":"5521:20:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5511:6:8"}]},{"body":{"nodeType":"YulBlock","src":"5584:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"5586:77:8"},"nodeType":"YulFunctionCall","src":"5586:79:8"},"nodeType":"YulExpressionStatement","src":"5586:79:8"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5556:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"5564:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5553:2:8"},"nodeType":"YulFunctionCall","src":"5553:30:8"},"nodeType":"YulIf","src":"5550:117:8"},{"nodeType":"YulAssignment","src":"5676:29:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5692:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"5700:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5688:3:8"},"nodeType":"YulFunctionCall","src":"5688:17:8"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"5676:8:8"}]},{"body":{"nodeType":"YulBlock","src":"5759:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"5761:77:8"},"nodeType":"YulFunctionCall","src":"5761:79:8"},"nodeType":"YulExpressionStatement","src":"5761:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"5724:8:8"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5738:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"5746:4:8","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5734:3:8"},"nodeType":"YulFunctionCall","src":"5734:17:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5720:3:8"},"nodeType":"YulFunctionCall","src":"5720:32:8"},{"name":"end","nodeType":"YulIdentifier","src":"5754:3:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5717:2:8"},"nodeType":"YulFunctionCall","src":"5717:41:8"},"nodeType":"YulIf","src":"5714:128:8"}]},"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5337:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"5345:3:8","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"5353:8:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"5363:6:8","type":""}],"src":"5296:552:8"},{"body":{"nodeType":"YulBlock","src":"5939:442:8","statements":[{"body":{"nodeType":"YulBlock","src":"5985:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5987:77:8"},"nodeType":"YulFunctionCall","src":"5987:79:8"},"nodeType":"YulExpressionStatement","src":"5987:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5960:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"5969:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5956:3:8"},"nodeType":"YulFunctionCall","src":"5956:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"5981:2:8","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5952:3:8"},"nodeType":"YulFunctionCall","src":"5952:32:8"},"nodeType":"YulIf","src":"5949:119:8"},{"nodeType":"YulBlock","src":"6078:296:8","statements":[{"nodeType":"YulVariableDeclaration","src":"6093:45:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6124:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"6135:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6120:3:8"},"nodeType":"YulFunctionCall","src":"6120:17:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6107:12:8"},"nodeType":"YulFunctionCall","src":"6107:31:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6097:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"6185:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"6187:77:8"},"nodeType":"YulFunctionCall","src":"6187:79:8"},"nodeType":"YulExpressionStatement","src":"6187:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6157:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"6165:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6154:2:8"},"nodeType":"YulFunctionCall","src":"6154:30:8"},"nodeType":"YulIf","src":"6151:117:8"},{"nodeType":"YulAssignment","src":"6282:82:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6336:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"6347:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6332:3:8"},"nodeType":"YulFunctionCall","src":"6332:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6356:7:8"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"6300:31:8"},"nodeType":"YulFunctionCall","src":"6300:64:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6282:6:8"},{"name":"value1","nodeType":"YulIdentifier","src":"6290:6:8"}]}]}]},"name":"abi_decode_tuple_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5901:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5912:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5924:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5932:6:8","type":""}],"src":"5854:527:8"},{"body":{"nodeType":"YulBlock","src":"6432:81:8","statements":[{"nodeType":"YulAssignment","src":"6442:65:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6457:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"6464:42:8","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6453:3:8"},"nodeType":"YulFunctionCall","src":"6453:54:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6442:7:8"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6414:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6424:7:8","type":""}],"src":"6387:126:8"},{"body":{"nodeType":"YulBlock","src":"6564:51:8","statements":[{"nodeType":"YulAssignment","src":"6574:35:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6603:5:8"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"6585:17:8"},"nodeType":"YulFunctionCall","src":"6585:24:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6574:7:8"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6546:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6556:7:8","type":""}],"src":"6519:96:8"},{"body":{"nodeType":"YulBlock","src":"6686:53:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6703:3:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6726:5:8"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6708:17:8"},"nodeType":"YulFunctionCall","src":"6708:24:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6696:6:8"},"nodeType":"YulFunctionCall","src":"6696:37:8"},"nodeType":"YulExpressionStatement","src":"6696:37:8"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6674:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6681:3:8","type":""}],"src":"6621:118:8"},{"body":{"nodeType":"YulBlock","src":"6843:124:8","statements":[{"nodeType":"YulAssignment","src":"6853:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6865:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"6876:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6861:3:8"},"nodeType":"YulFunctionCall","src":"6861:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6853:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6933:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6946:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"6957:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6942:3:8"},"nodeType":"YulFunctionCall","src":"6942:17:8"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6889:43:8"},"nodeType":"YulFunctionCall","src":"6889:71:8"},"nodeType":"YulExpressionStatement","src":"6889:71:8"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6815:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6827:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6838:4:8","type":""}],"src":"6745:222:8"},{"body":{"nodeType":"YulBlock","src":"7062:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7079:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7082:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7072:6:8"},"nodeType":"YulFunctionCall","src":"7072:12:8"},"nodeType":"YulExpressionStatement","src":"7072:12:8"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"6973:117:8"},{"body":{"nodeType":"YulBlock","src":"7162:241:8","statements":[{"body":{"nodeType":"YulBlock","src":"7267:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7269:16:8"},"nodeType":"YulFunctionCall","src":"7269:18:8"},"nodeType":"YulExpressionStatement","src":"7269:18:8"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7239:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"7247:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7236:2:8"},"nodeType":"YulFunctionCall","src":"7236:30:8"},"nodeType":"YulIf","src":"7233:56:8"},{"nodeType":"YulAssignment","src":"7299:37:8","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7329:6:8"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7307:21:8"},"nodeType":"YulFunctionCall","src":"7307:29:8"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7299:4:8"}]},{"nodeType":"YulAssignment","src":"7373:23:8","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7385:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"7391:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7381:3:8"},"nodeType":"YulFunctionCall","src":"7381:15:8"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7373:4:8"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"7146:6:8","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"7157:4:8","type":""}],"src":"7096:307:8"},{"body":{"nodeType":"YulBlock","src":"7473:82:8","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7496:3:8"},{"name":"src","nodeType":"YulIdentifier","src":"7501:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"7506:6:8"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"7483:12:8"},"nodeType":"YulFunctionCall","src":"7483:30:8"},"nodeType":"YulExpressionStatement","src":"7483:30:8"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7533:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"7538:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7529:3:8"},"nodeType":"YulFunctionCall","src":"7529:16:8"},{"kind":"number","nodeType":"YulLiteral","src":"7547:1:8","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7522:6:8"},"nodeType":"YulFunctionCall","src":"7522:27:8"},"nodeType":"YulExpressionStatement","src":"7522:27:8"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"7455:3:8","type":""},{"name":"dst","nodeType":"YulTypedName","src":"7460:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"7465:6:8","type":""}],"src":"7409:146:8"},{"body":{"nodeType":"YulBlock","src":"7644:340:8","statements":[{"nodeType":"YulAssignment","src":"7654:74:8","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7720:6:8"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"7679:40:8"},"nodeType":"YulFunctionCall","src":"7679:48:8"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"7663:15:8"},"nodeType":"YulFunctionCall","src":"7663:65:8"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7654:5:8"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7744:5:8"},{"name":"length","nodeType":"YulIdentifier","src":"7751:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7737:6:8"},"nodeType":"YulFunctionCall","src":"7737:21:8"},"nodeType":"YulExpressionStatement","src":"7737:21:8"},{"nodeType":"YulVariableDeclaration","src":"7767:27:8","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7782:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"7789:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7778:3:8"},"nodeType":"YulFunctionCall","src":"7778:16:8"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"7771:3:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"7832:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"7834:77:8"},"nodeType":"YulFunctionCall","src":"7834:79:8"},"nodeType":"YulExpressionStatement","src":"7834:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7813:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"7818:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7809:3:8"},"nodeType":"YulFunctionCall","src":"7809:16:8"},{"name":"end","nodeType":"YulIdentifier","src":"7827:3:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7806:2:8"},"nodeType":"YulFunctionCall","src":"7806:25:8"},"nodeType":"YulIf","src":"7803:112:8"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7961:3:8"},{"name":"dst","nodeType":"YulIdentifier","src":"7966:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"7971:6:8"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"7924:36:8"},"nodeType":"YulFunctionCall","src":"7924:54:8"},"nodeType":"YulExpressionStatement","src":"7924:54:8"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"7617:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"7622:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"7630:3:8","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7638:5:8","type":""}],"src":"7561:423:8"},{"body":{"nodeType":"YulBlock","src":"8064:277:8","statements":[{"body":{"nodeType":"YulBlock","src":"8113:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8115:77:8"},"nodeType":"YulFunctionCall","src":"8115:79:8"},"nodeType":"YulExpressionStatement","src":"8115:79:8"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8092:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"8100:4:8","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8088:3:8"},"nodeType":"YulFunctionCall","src":"8088:17:8"},{"name":"end","nodeType":"YulIdentifier","src":"8107:3:8"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8084:3:8"},"nodeType":"YulFunctionCall","src":"8084:27:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8077:6:8"},"nodeType":"YulFunctionCall","src":"8077:35:8"},"nodeType":"YulIf","src":"8074:122:8"},{"nodeType":"YulVariableDeclaration","src":"8205:34:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8232:6:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8219:12:8"},"nodeType":"YulFunctionCall","src":"8219:20:8"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8209:6:8","type":""}]},{"nodeType":"YulAssignment","src":"8248:87:8","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8308:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"8316:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8304:3:8"},"nodeType":"YulFunctionCall","src":"8304:17:8"},{"name":"length","nodeType":"YulIdentifier","src":"8323:6:8"},{"name":"end","nodeType":"YulIdentifier","src":"8331:3:8"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8257:46:8"},"nodeType":"YulFunctionCall","src":"8257:78:8"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8248:5:8"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8042:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"8050:3:8","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8058:5:8","type":""}],"src":"8003:338:8"},{"body":{"nodeType":"YulBlock","src":"8422:432:8","statements":[{"body":{"nodeType":"YulBlock","src":"8468:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8470:77:8"},"nodeType":"YulFunctionCall","src":"8470:79:8"},"nodeType":"YulExpressionStatement","src":"8470:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8443:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"8452:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8439:3:8"},"nodeType":"YulFunctionCall","src":"8439:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"8464:2:8","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8435:3:8"},"nodeType":"YulFunctionCall","src":"8435:32:8"},"nodeType":"YulIf","src":"8432:119:8"},{"nodeType":"YulBlock","src":"8561:286:8","statements":[{"nodeType":"YulVariableDeclaration","src":"8576:45:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8607:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"8618:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8603:3:8"},"nodeType":"YulFunctionCall","src":"8603:17:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8590:12:8"},"nodeType":"YulFunctionCall","src":"8590:31:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8580:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"8668:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"8670:77:8"},"nodeType":"YulFunctionCall","src":"8670:79:8"},"nodeType":"YulExpressionStatement","src":"8670:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8640:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"8648:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8637:2:8"},"nodeType":"YulFunctionCall","src":"8637:30:8"},"nodeType":"YulIf","src":"8634:117:8"},{"nodeType":"YulAssignment","src":"8765:72:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8809:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"8820:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8805:3:8"},"nodeType":"YulFunctionCall","src":"8805:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8829:7:8"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8775:29:8"},"nodeType":"YulFunctionCall","src":"8775:62:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8765:6:8"}]}]}]},"name":"abi_decode_tuple_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8392:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8403:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8415:6:8","type":""}],"src":"8347:507:8"},{"body":{"nodeType":"YulBlock","src":"8902:48:8","statements":[{"nodeType":"YulAssignment","src":"8912:32:8","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8937:5:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8930:6:8"},"nodeType":"YulFunctionCall","src":"8930:13:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8923:6:8"},"nodeType":"YulFunctionCall","src":"8923:21:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8912:7:8"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8884:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8894:7:8","type":""}],"src":"8860:90:8"},{"body":{"nodeType":"YulBlock","src":"9015:50:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9032:3:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9052:5:8"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"9037:14:8"},"nodeType":"YulFunctionCall","src":"9037:21:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9025:6:8"},"nodeType":"YulFunctionCall","src":"9025:34:8"},"nodeType":"YulExpressionStatement","src":"9025:34:8"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9003:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9010:3:8","type":""}],"src":"8956:109:8"},{"body":{"nodeType":"YulBlock","src":"9129:40:8","statements":[{"nodeType":"YulAssignment","src":"9140:22:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9156:5:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9150:5:8"},"nodeType":"YulFunctionCall","src":"9150:12:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"9140:6:8"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9112:5:8","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"9122:6:8","type":""}],"src":"9071:98:8"},{"body":{"nodeType":"YulBlock","src":"9270:73:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9287:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"9292:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9280:6:8"},"nodeType":"YulFunctionCall","src":"9280:19:8"},"nodeType":"YulExpressionStatement","src":"9280:19:8"},{"nodeType":"YulAssignment","src":"9308:29:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9327:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"9332:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9323:3:8"},"nodeType":"YulFunctionCall","src":"9323:14:8"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9308:11:8"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9242:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"9247:6:8","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9258:11:8","type":""}],"src":"9175:168:8"},{"body":{"nodeType":"YulBlock","src":"9411:184:8","statements":[{"nodeType":"YulVariableDeclaration","src":"9421:10:8","value":{"kind":"number","nodeType":"YulLiteral","src":"9430:1:8","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"9425:1:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"9490:63:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9515:3:8"},{"name":"i","nodeType":"YulIdentifier","src":"9520:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9511:3:8"},"nodeType":"YulFunctionCall","src":"9511:11:8"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9534:3:8"},{"name":"i","nodeType":"YulIdentifier","src":"9539:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9530:3:8"},"nodeType":"YulFunctionCall","src":"9530:11:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9524:5:8"},"nodeType":"YulFunctionCall","src":"9524:18:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9504:6:8"},"nodeType":"YulFunctionCall","src":"9504:39:8"},"nodeType":"YulExpressionStatement","src":"9504:39:8"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9451:1:8"},{"name":"length","nodeType":"YulIdentifier","src":"9454:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9448:2:8"},"nodeType":"YulFunctionCall","src":"9448:13:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9462:19:8","statements":[{"nodeType":"YulAssignment","src":"9464:15:8","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9473:1:8"},{"kind":"number","nodeType":"YulLiteral","src":"9476:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9469:3:8"},"nodeType":"YulFunctionCall","src":"9469:10:8"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"9464:1:8"}]}]},"pre":{"nodeType":"YulBlock","src":"9444:3:8","statements":[]},"src":"9440:113:8"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9573:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"9578:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9569:3:8"},"nodeType":"YulFunctionCall","src":"9569:16:8"},{"kind":"number","nodeType":"YulLiteral","src":"9587:1:8","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9562:6:8"},"nodeType":"YulFunctionCall","src":"9562:27:8"},"nodeType":"YulExpressionStatement","src":"9562:27:8"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"9393:3:8","type":""},{"name":"dst","nodeType":"YulTypedName","src":"9398:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"9403:6:8","type":""}],"src":"9349:246:8"},{"body":{"nodeType":"YulBlock","src":"9691:283:8","statements":[{"nodeType":"YulVariableDeclaration","src":"9701:52:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9747:5:8"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9715:31:8"},"nodeType":"YulFunctionCall","src":"9715:38:8"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9705:6:8","type":""}]},{"nodeType":"YulAssignment","src":"9762:77:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9827:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"9832:6:8"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9769:57:8"},"nodeType":"YulFunctionCall","src":"9769:70:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9762:3:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9887:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"9894:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9883:3:8"},"nodeType":"YulFunctionCall","src":"9883:16:8"},{"name":"pos","nodeType":"YulIdentifier","src":"9901:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"9906:6:8"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"9848:34:8"},"nodeType":"YulFunctionCall","src":"9848:65:8"},"nodeType":"YulExpressionStatement","src":"9848:65:8"},{"nodeType":"YulAssignment","src":"9922:46:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9933:3:8"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9960:6:8"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"9938:21:8"},"nodeType":"YulFunctionCall","src":"9938:29:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9929:3:8"},"nodeType":"YulFunctionCall","src":"9929:39:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9922:3:8"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9672:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9679:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9687:3:8","type":""}],"src":"9601:373:8"},{"body":{"nodeType":"YulBlock","src":"10118:269:8","statements":[{"nodeType":"YulAssignment","src":"10128:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10140:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"10151:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10136:3:8"},"nodeType":"YulFunctionCall","src":"10136:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10128:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10202:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10215:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"10226:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10211:3:8"},"nodeType":"YulFunctionCall","src":"10211:17:8"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"10164:37:8"},"nodeType":"YulFunctionCall","src":"10164:65:8"},"nodeType":"YulExpressionStatement","src":"10164:65:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10250:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"10261:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10246:3:8"},"nodeType":"YulFunctionCall","src":"10246:18:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10270:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"10276:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10266:3:8"},"nodeType":"YulFunctionCall","src":"10266:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10239:6:8"},"nodeType":"YulFunctionCall","src":"10239:48:8"},"nodeType":"YulExpressionStatement","src":"10239:48:8"},{"nodeType":"YulAssignment","src":"10296:84:8","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10366:6:8"},{"name":"tail","nodeType":"YulIdentifier","src":"10375:4:8"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10304:61:8"},"nodeType":"YulFunctionCall","src":"10304:76:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10296:4:8"}]}]},"name":"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10082:9:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10094:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10102:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10113:4:8","type":""}],"src":"9980:407:8"},{"body":{"nodeType":"YulBlock","src":"10459:263:8","statements":[{"body":{"nodeType":"YulBlock","src":"10505:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10507:77:8"},"nodeType":"YulFunctionCall","src":"10507:79:8"},"nodeType":"YulExpressionStatement","src":"10507:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10480:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"10489:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10476:3:8"},"nodeType":"YulFunctionCall","src":"10476:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"10501:2:8","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10472:3:8"},"nodeType":"YulFunctionCall","src":"10472:32:8"},"nodeType":"YulIf","src":"10469:119:8"},{"nodeType":"YulBlock","src":"10598:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"10613:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"10627:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10617:6:8","type":""}]},{"nodeType":"YulAssignment","src":"10642:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10677:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"10688:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10673:3:8"},"nodeType":"YulFunctionCall","src":"10673:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10697:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"10652:20:8"},"nodeType":"YulFunctionCall","src":"10652:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10642:6:8"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10429:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10440:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10452:6:8","type":""}],"src":"10393:329:8"},{"body":{"nodeType":"YulBlock","src":"10854:206:8","statements":[{"nodeType":"YulAssignment","src":"10864:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10876:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"10887:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10872:3:8"},"nodeType":"YulFunctionCall","src":"10872:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10864:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10944:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10957:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"10968:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10953:3:8"},"nodeType":"YulFunctionCall","src":"10953:17:8"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10900:43:8"},"nodeType":"YulFunctionCall","src":"10900:71:8"},"nodeType":"YulExpressionStatement","src":"10900:71:8"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11025:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11038:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"11049:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11034:3:8"},"nodeType":"YulFunctionCall","src":"11034:18:8"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10981:43:8"},"nodeType":"YulFunctionCall","src":"10981:72:8"},"nodeType":"YulExpressionStatement","src":"10981:72:8"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10818:9:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10830:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10838:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10849:4:8","type":""}],"src":"10728:332:8"},{"body":{"nodeType":"YulBlock","src":"11220:288:8","statements":[{"nodeType":"YulAssignment","src":"11230:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11242:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"11253:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11238:3:8"},"nodeType":"YulFunctionCall","src":"11238:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11230:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11310:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11323:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"11334:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11319:3:8"},"nodeType":"YulFunctionCall","src":"11319:17:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11266:43:8"},"nodeType":"YulFunctionCall","src":"11266:71:8"},"nodeType":"YulExpressionStatement","src":"11266:71:8"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11391:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11404:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"11415:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11400:3:8"},"nodeType":"YulFunctionCall","src":"11400:18:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11347:43:8"},"nodeType":"YulFunctionCall","src":"11347:72:8"},"nodeType":"YulExpressionStatement","src":"11347:72:8"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11473:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11486:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"11497:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11482:3:8"},"nodeType":"YulFunctionCall","src":"11482:18:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11429:43:8"},"nodeType":"YulFunctionCall","src":"11429:72:8"},"nodeType":"YulExpressionStatement","src":"11429:72:8"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11176:9:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11188:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11196:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11204:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11215:4:8","type":""}],"src":"11066:442:8"},{"body":{"nodeType":"YulBlock","src":"11559:32:8","statements":[{"nodeType":"YulAssignment","src":"11569:16:8","value":{"name":"value","nodeType":"YulIdentifier","src":"11580:5:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11569:7:8"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11541:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11551:7:8","type":""}],"src":"11514:77:8"},{"body":{"nodeType":"YulBlock","src":"11662:53:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11679:3:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11702:5:8"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"11684:17:8"},"nodeType":"YulFunctionCall","src":"11684:24:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11672:6:8"},"nodeType":"YulFunctionCall","src":"11672:37:8"},"nodeType":"YulExpressionStatement","src":"11672:37:8"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11650:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11657:3:8","type":""}],"src":"11597:118:8"},{"body":{"nodeType":"YulBlock","src":"11765:57:8","statements":[{"nodeType":"YulAssignment","src":"11775:41:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11790:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"11797:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11786:3:8"},"nodeType":"YulFunctionCall","src":"11786:30:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11775:7:8"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11747:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11757:7:8","type":""}],"src":"11721:101:8"},{"body":{"nodeType":"YulBlock","src":"11891:52:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11908:3:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11930:5:8"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"11913:16:8"},"nodeType":"YulFunctionCall","src":"11913:23:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11901:6:8"},"nodeType":"YulFunctionCall","src":"11901:36:8"},"nodeType":"YulExpressionStatement","src":"11901:36:8"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11879:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11886:3:8","type":""}],"src":"11828:115:8"},{"body":{"nodeType":"YulBlock","src":"11993:45:8","statements":[{"nodeType":"YulAssignment","src":"12003:29:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12018:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"12025:6:8","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12014:3:8"},"nodeType":"YulFunctionCall","src":"12014:18:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"12003:7:8"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11975:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11985:7:8","type":""}],"src":"11949:89:8"},{"body":{"nodeType":"YulBlock","src":"12107:52:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12124:3:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12146:5:8"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"12129:16:8"},"nodeType":"YulFunctionCall","src":"12129:23:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12117:6:8"},"nodeType":"YulFunctionCall","src":"12117:36:8"},"nodeType":"YulExpressionStatement","src":"12117:36:8"}]},"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12095:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12102:3:8","type":""}],"src":"12044:115:8"},{"body":{"nodeType":"YulBlock","src":"12209:49:8","statements":[{"nodeType":"YulAssignment","src":"12219:33:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12234:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"12241:10:8","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12230:3:8"},"nodeType":"YulFunctionCall","src":"12230:22:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"12219:7:8"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12191:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"12201:7:8","type":""}],"src":"12165:93:8"},{"body":{"nodeType":"YulBlock","src":"12327:52:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12344:3:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12366:5:8"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"12349:16:8"},"nodeType":"YulFunctionCall","src":"12349:23:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12337:6:8"},"nodeType":"YulFunctionCall","src":"12337:36:8"},"nodeType":"YulExpressionStatement","src":"12337:36:8"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12315:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12322:3:8","type":""}],"src":"12264:115:8"},{"body":{"nodeType":"YulBlock","src":"12587:446:8","statements":[{"nodeType":"YulAssignment","src":"12597:27:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12609:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"12620:3:8","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12605:3:8"},"nodeType":"YulFunctionCall","src":"12605:19:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12597:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12678:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12691:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"12702:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12687:3:8"},"nodeType":"YulFunctionCall","src":"12687:17:8"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"12634:43:8"},"nodeType":"YulFunctionCall","src":"12634:71:8"},"nodeType":"YulExpressionStatement","src":"12634:71:8"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12757:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12770:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"12781:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12766:3:8"},"nodeType":"YulFunctionCall","src":"12766:18:8"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"12715:41:8"},"nodeType":"YulFunctionCall","src":"12715:70:8"},"nodeType":"YulExpressionStatement","src":"12715:70:8"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"12837:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12850:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"12861:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12846:3:8"},"nodeType":"YulFunctionCall","src":"12846:18:8"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"12795:41:8"},"nodeType":"YulFunctionCall","src":"12795:70:8"},"nodeType":"YulExpressionStatement","src":"12795:70:8"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"12917:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12930:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"12941:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12926:3:8"},"nodeType":"YulFunctionCall","src":"12926:18:8"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"12875:41:8"},"nodeType":"YulFunctionCall","src":"12875:70:8"},"nodeType":"YulExpressionStatement","src":"12875:70:8"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"12997:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13010:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"13021:3:8","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13006:3:8"},"nodeType":"YulFunctionCall","src":"13006:19:8"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"12955:41:8"},"nodeType":"YulFunctionCall","src":"12955:71:8"},"nodeType":"YulExpressionStatement","src":"12955:71:8"}]},"name":"abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12527:9:8","type":""},{"name":"value4","nodeType":"YulTypedName","src":"12539:6:8","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12547:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12555:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12563:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12571:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12582:4:8","type":""}],"src":"12385:648:8"},{"body":{"nodeType":"YulBlock","src":"13102:80:8","statements":[{"nodeType":"YulAssignment","src":"13112:22:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13127:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13121:5:8"},"nodeType":"YulFunctionCall","src":"13121:13:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"13112:5:8"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13170:5:8"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"13143:26:8"},"nodeType":"YulFunctionCall","src":"13143:33:8"},"nodeType":"YulExpressionStatement","src":"13143:33:8"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"13080:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"13088:3:8","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"13096:5:8","type":""}],"src":"13039:143:8"},{"body":{"nodeType":"YulBlock","src":"13265:274:8","statements":[{"body":{"nodeType":"YulBlock","src":"13311:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13313:77:8"},"nodeType":"YulFunctionCall","src":"13313:79:8"},"nodeType":"YulExpressionStatement","src":"13313:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13286:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"13295:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13282:3:8"},"nodeType":"YulFunctionCall","src":"13282:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"13307:2:8","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13278:3:8"},"nodeType":"YulFunctionCall","src":"13278:32:8"},"nodeType":"YulIf","src":"13275:119:8"},{"nodeType":"YulBlock","src":"13404:128:8","statements":[{"nodeType":"YulVariableDeclaration","src":"13419:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"13433:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13423:6:8","type":""}]},{"nodeType":"YulAssignment","src":"13448:74:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13494:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"13505:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13490:3:8"},"nodeType":"YulFunctionCall","src":"13490:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13514:7:8"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"13458:31:8"},"nodeType":"YulFunctionCall","src":"13458:64:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13448:6:8"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13235:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13246:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13258:6:8","type":""}],"src":"13188:351:8"},{"body":{"nodeType":"YulBlock","src":"13573:152:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13590:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13593:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13583:6:8"},"nodeType":"YulFunctionCall","src":"13583:88:8"},"nodeType":"YulExpressionStatement","src":"13583:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13687:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13690:4:8","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13680:6:8"},"nodeType":"YulFunctionCall","src":"13680:15:8"},"nodeType":"YulExpressionStatement","src":"13680:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13711:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13714:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13704:6:8"},"nodeType":"YulFunctionCall","src":"13704:15:8"},"nodeType":"YulExpressionStatement","src":"13704:15:8"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"13545:180:8"},{"body":{"nodeType":"YulBlock","src":"13776:149:8","statements":[{"nodeType":"YulAssignment","src":"13786:25:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13809:1:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"13791:17:8"},"nodeType":"YulFunctionCall","src":"13791:20:8"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"13786:1:8"}]},{"nodeType":"YulAssignment","src":"13820:25:8","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"13843:1:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"13825:17:8"},"nodeType":"YulFunctionCall","src":"13825:20:8"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"13820:1:8"}]},{"nodeType":"YulAssignment","src":"13854:17:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13866:1:8"},{"name":"y","nodeType":"YulIdentifier","src":"13869:1:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13862:3:8"},"nodeType":"YulFunctionCall","src":"13862:9:8"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"13854:4:8"}]},{"body":{"nodeType":"YulBlock","src":"13896:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"13898:16:8"},"nodeType":"YulFunctionCall","src":"13898:18:8"},"nodeType":"YulExpressionStatement","src":"13898:18:8"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"13887:4:8"},{"name":"x","nodeType":"YulIdentifier","src":"13893:1:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13884:2:8"},"nodeType":"YulFunctionCall","src":"13884:11:8"},"nodeType":"YulIf","src":"13881:37:8"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"13762:1:8","type":""},{"name":"y","nodeType":"YulTypedName","src":"13765:1:8","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"13771:4:8","type":""}],"src":"13731:194:8"},{"body":{"nodeType":"YulBlock","src":"13959:152:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13976:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13979:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13969:6:8"},"nodeType":"YulFunctionCall","src":"13969:88:8"},"nodeType":"YulExpressionStatement","src":"13969:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14073:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14076:4:8","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14066:6:8"},"nodeType":"YulFunctionCall","src":"14066:15:8"},"nodeType":"YulExpressionStatement","src":"14066:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14097:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14100:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14090:6:8"},"nodeType":"YulFunctionCall","src":"14090:15:8"},"nodeType":"YulExpressionStatement","src":"14090:15:8"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"13931:180:8"},{"body":{"nodeType":"YulBlock","src":"14145:152:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14162:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14165:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14155:6:8"},"nodeType":"YulFunctionCall","src":"14155:88:8"},"nodeType":"YulExpressionStatement","src":"14155:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14259:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14262:4:8","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14252:6:8"},"nodeType":"YulFunctionCall","src":"14252:15:8"},"nodeType":"YulExpressionStatement","src":"14252:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14283:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14286:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14276:6:8"},"nodeType":"YulFunctionCall","src":"14276:15:8"},"nodeType":"YulExpressionStatement","src":"14276:15:8"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"14117:180:8"},{"body":{"nodeType":"YulBlock","src":"14337:142:8","statements":[{"nodeType":"YulAssignment","src":"14347:25:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14370:1:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14352:17:8"},"nodeType":"YulFunctionCall","src":"14352:20:8"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"14347:1:8"}]},{"nodeType":"YulAssignment","src":"14381:25:8","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"14404:1:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14386:17:8"},"nodeType":"YulFunctionCall","src":"14386:20:8"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"14381:1:8"}]},{"body":{"nodeType":"YulBlock","src":"14428:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"14430:16:8"},"nodeType":"YulFunctionCall","src":"14430:18:8"},"nodeType":"YulExpressionStatement","src":"14430:18:8"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"14425:1:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14418:6:8"},"nodeType":"YulFunctionCall","src":"14418:9:8"},"nodeType":"YulIf","src":"14415:35:8"},{"nodeType":"YulAssignment","src":"14459:14:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14468:1:8"},{"name":"y","nodeType":"YulIdentifier","src":"14471:1:8"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"14464:3:8"},"nodeType":"YulFunctionCall","src":"14464:9:8"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"14459:1:8"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"14326:1:8","type":""},{"name":"y","nodeType":"YulTypedName","src":"14329:1:8","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"14335:1:8","type":""}],"src":"14303:176:8"},{"body":{"nodeType":"YulBlock","src":"14598:34:8","statements":[{"nodeType":"YulAssignment","src":"14608:18:8","value":{"name":"pos","nodeType":"YulIdentifier","src":"14623:3:8"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"14608:11:8"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14570:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"14575:6:8","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"14586:11:8","type":""}],"src":"14485:147:8"},{"body":{"nodeType":"YulBlock","src":"14744:8:8","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14736:6:8","type":""}],"src":"14638:114:8"},{"body":{"nodeType":"YulBlock","src":"14921:235:8","statements":[{"nodeType":"YulAssignment","src":"14931:90:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15014:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"15019:1:8","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"14938:75:8"},"nodeType":"YulFunctionCall","src":"14938:83:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14931:3:8"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15119:3:8"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulIdentifier","src":"15030:88:8"},"nodeType":"YulFunctionCall","src":"15030:93:8"},"nodeType":"YulExpressionStatement","src":"15030:93:8"},{"nodeType":"YulAssignment","src":"15132:18:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15143:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"15148:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15139:3:8"},"nodeType":"YulFunctionCall","src":"15139:11:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15132:3:8"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14909:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14917:3:8","type":""}],"src":"14758:398:8"},{"body":{"nodeType":"YulBlock","src":"15350:191:8","statements":[{"nodeType":"YulAssignment","src":"15361:154:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15511:3:8"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"15368:141:8"},"nodeType":"YulFunctionCall","src":"15368:147:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15361:3:8"}]},{"nodeType":"YulAssignment","src":"15525:10:8","value":{"name":"pos","nodeType":"YulIdentifier","src":"15532:3:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15525:3:8"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15337:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15346:3:8","type":""}],"src":"15162:379:8"}]},"contents":"{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_RaffleState_$401(value) {\n        if iszero(lt(value, 2)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_RaffleState_$401(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_RaffleState_$401(value)\n    }\n\n    function convert_t_enum$_RaffleState_$401_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_RaffleState_$401(value)\n    }\n\n    function abi_encode_t_enum$_RaffleState_$401_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_RaffleState_$401_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_RaffleState_$401__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_RaffleState_$401_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n}\n","id":8,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"192":[{"length":32,"start":591},{"length":32,"start":675}],"403":[{"length":32,"start":530},{"length":32,"start":783}],"409":[{"length":32,"start":1331}],"411":[{"length":32,"start":1391}],"413":[{"length":32,"start":1424}],"418":[{"length":32,"start":1459}],"421":[{"length":32,"start":1492},{"length":32,"start":1721}],"430":[{"length":32,"start":1830}]},"linkReferences":{},"object":"6080604052600436106100865760003560e01c80634585e33b116100595780634585e33b14610114578063473f1ddc1461013d57806353a2c19a146101685780636e04ff0d14610193578063e55ae4e8146101d157610086565b806309bc33a71461008b578063115cbaf5146100b65780631fe543e3146100e15780632cfcc5391461010a575b600080fd5b34801561009757600080fd5b506100a061020e565b6040516100ad9190610ac8565b60405180910390f35b3480156100c257600080fd5b506100cb610236565b6040516100d89190610b5a565b60405180910390f35b3480156100ed57600080fd5b5061010860048036038101906101039190610d0e565b61024d565b005b61011261030d565b005b34801561012057600080fd5b5061013b60048036038101906101369190610dc5565b61047c565b005b34801561014957600080fd5b5061015261068b565b60405161015f9190610e53565b60405180910390f35b34801561017457600080fd5b5061017d6106b5565b60405161018a9190610ac8565b60405180910390f35b34801561019f57600080fd5b506101ba60048036038101906101b59190610f23565b6106e3565b6040516101c8929190611006565b60405180910390f35b3480156101dd57600080fd5b506101f860048036038101906101f39190611036565b610790565b6040516102059190610e53565b60405180910390f35b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600160149054906101000a900460ff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ff57337f00000000000000000000000000000000000000000000000000000000000000006040517f1cf993f40000000000000000000000000000000000000000000000000000000081526004016102f6929190611063565b60405180910390fd5b61030982826107d7565b5050565b7f0000000000000000000000000000000000000000000000000000000000000000341015610367576040517fbd4e069500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600181111561037b5761037a610ae3565b5b600160149054906101000a900460ff16600181111561039d5761039c610ae3565b5b146103d4576040517f1425571c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f0805e1d667bddb8a95f0f09880cf94f403fb596ce79928d9f29b74203ba284d460405160405180910390a2565b6000610496604051806020016040528060008152506106e3565b509050806105055747600080549050600160149054906101000a900460ff1660018111156104c7576104c6610ae3565b5b6040517f3a8d60860000000000000000000000000000000000000000000000000000000081526004016104fc9392919061108c565b60405180910390fd5b60018060146101000a81548160ff0219169083600181111561052a57610529610ae3565b5b021790555060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635d3b1d307f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000060037f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006040518663ffffffff1660e01b815260040161061395949392919061113b565b6020604051808303816000875af1158015610632573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065691906111a3565b9050807fcd6e45c8998311cab7e9d4385596cac867e20a0587194b954fa3a731c93ce78b60405160405180910390a250505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60007f000000000000000000000000000000000000000000000000000000000000000063ffffffff16905090565b600060606000600160149054906101000a900460ff16600181111561070b5761070a610ae3565b5b6000600181111561071f5761071e610ae3565b5b14905060007f00000000000000000000000000000000000000000000000000000000000000006002544261075391906111ff565b119050600080600080549050119050600080471190508380156107735750825b801561077c5750815b80156107855750805b955050505050915091565b60008082815481106107a5576107a4611233565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008080549050826000815181106107f2576107f1611233565b5b60200260200101516108049190611291565b9050600080828154811061081b5761081a611233565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160146101000a81548160ff021916908360018111156108af576108ae610ae3565b5b0217905550600067ffffffffffffffff8111156108cf576108ce610bcb565b5b6040519080825280602002602001820160405280156108fd5781602001602082028036833780820191505090505b5060009080519060200190610913929190610a08565b504260028190555060008173ffffffffffffffffffffffffffffffffffffffff1647604051610941906112f3565b60006040518083038185875af1925050503d806000811461097e576040519150601f19603f3d011682016040523d82523d6000602084013e610983565b606091505b50509050806109be576040517fa1d04b3900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff167f5b690ec4a06fe979403046eaeea5b3ce38524683c3001f662c8b5a829632f7df60405160405180910390a25050505050565b828054828255906000526020600020908101928215610a81579160200282015b82811115610a805782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a28565b5b509050610a8e9190610a92565b5090565b5b80821115610aab576000816000905550600101610a93565b5090565b6000819050919050565b610ac281610aaf565b82525050565b6000602082019050610add6000830184610ab9565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110610b2357610b22610ae3565b5b50565b6000819050610b3482610b12565b919050565b6000610b4482610b26565b9050919050565b610b5481610b39565b82525050565b6000602082019050610b6f6000830184610b4b565b92915050565b6000604051905090565b600080fd5b600080fd5b610b9281610aaf565b8114610b9d57600080fd5b50565b600081359050610baf81610b89565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610c0382610bba565b810181811067ffffffffffffffff82111715610c2257610c21610bcb565b5b80604052505050565b6000610c35610b75565b9050610c418282610bfa565b919050565b600067ffffffffffffffff821115610c6157610c60610bcb565b5b602082029050602081019050919050565b600080fd5b6000610c8a610c8584610c46565b610c2b565b90508083825260208201905060208402830185811115610cad57610cac610c72565b5b835b81811015610cd65780610cc28882610ba0565b845260208401935050602081019050610caf565b5050509392505050565b600082601f830112610cf557610cf4610bb5565b5b8135610d05848260208601610c77565b91505092915050565b60008060408385031215610d2557610d24610b7f565b5b6000610d3385828601610ba0565b925050602083013567ffffffffffffffff811115610d5457610d53610b84565b5b610d6085828601610ce0565b9150509250929050565b600080fd5b60008083601f840112610d8557610d84610bb5565b5b8235905067ffffffffffffffff811115610da257610da1610d6a565b5b602083019150836001820283011115610dbe57610dbd610c72565b5b9250929050565b60008060208385031215610ddc57610ddb610b7f565b5b600083013567ffffffffffffffff811115610dfa57610df9610b84565b5b610e0685828601610d6f565b92509250509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e3d82610e12565b9050919050565b610e4d81610e32565b82525050565b6000602082019050610e686000830184610e44565b92915050565b600080fd5b600067ffffffffffffffff821115610e8e57610e8d610bcb565b5b610e9782610bba565b9050602081019050919050565b82818337600083830152505050565b6000610ec6610ec184610e73565b610c2b565b905082815260208101848484011115610ee257610ee1610e6e565b5b610eed848285610ea4565b509392505050565b600082601f830112610f0a57610f09610bb5565b5b8135610f1a848260208601610eb3565b91505092915050565b600060208284031215610f3957610f38610b7f565b5b600082013567ffffffffffffffff811115610f5757610f56610b84565b5b610f6384828501610ef5565b91505092915050565b60008115159050919050565b610f8181610f6c565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610fc1578082015181840152602081019050610fa6565b60008484015250505050565b6000610fd882610f87565b610fe28185610f92565b9350610ff2818560208601610fa3565b610ffb81610bba565b840191505092915050565b600060408201905061101b6000830185610f78565b818103602083015261102d8184610fcd565b90509392505050565b60006020828403121561104c5761104b610b7f565b5b600061105a84828501610ba0565b91505092915050565b60006040820190506110786000830185610e44565b6110856020830184610e44565b9392505050565b60006060820190506110a16000830186610ab9565b6110ae6020830185610ab9565b6110bb6040830184610ab9565b949350505050565b6000819050919050565b6110d6816110c3565b82525050565b600067ffffffffffffffff82169050919050565b6110f9816110dc565b82525050565b600061ffff82169050919050565b611116816110ff565b82525050565b600063ffffffff82169050919050565b6111358161111c565b82525050565b600060a08201905061115060008301886110cd565b61115d60208301876110f0565b61116a604083018661110d565b611177606083018561112c565b611184608083018461112c565b9695505050505050565b60008151905061119d81610b89565b92915050565b6000602082840312156111b9576111b8610b7f565b5b60006111c78482850161118e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061120a82610aaf565b915061121583610aaf565b925082820390508181111561122d5761122c6111d0565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061129c82610aaf565b91506112a783610aaf565b9250826112b7576112b6611262565b5b828206905092915050565b600081905092915050565b50565b60006112dd6000836112c2565b91506112e8826112cd565b600082019050919050565b60006112fe826112d0565b915081905091905056fea26469706673582212201becdc1801efee8aead59afd8f8d3dcb968a307960b49f480d377f7cff39621664736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x86 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4585E33B GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0x473F1DDC EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x53A2C19A EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0xE55AE4E8 EQ PUSH2 0x1D1 JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x9BC33A7 EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x115CBAF5 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0xE1 JUMPI DUP1 PUSH4 0x2CFCC539 EQ PUSH2 0x10A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH2 0x20E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xAC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCB PUSH2 0x236 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0xB5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x103 SWAP2 SWAP1 PUSH2 0xD0E JUMP JUMPDEST PUSH2 0x24D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x112 PUSH2 0x30D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x136 SWAP2 SWAP1 PUSH2 0xDC5 JUMP JUMPDEST PUSH2 0x47C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x152 PUSH2 0x68B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xE53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x174 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17D PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0xAC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0xF23 JUMP JUMPDEST PUSH2 0x6E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C8 SWAP3 SWAP2 SWAP1 PUSH2 0x1006 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x1036 JUMP JUMPDEST PUSH2 0x790 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x205 SWAP2 SWAP1 PUSH2 0xE53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2FF JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F6 SWAP3 SWAP2 SWAP1 PUSH2 0x1063 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x309 DUP3 DUP3 PUSH2 0x7D7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 CALLVALUE LT ISZERO PUSH2 0x367 JUMPI PUSH1 0x40 MLOAD PUSH32 0xBD4E069500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x37B JUMPI PUSH2 0x37A PUSH2 0xAE3 JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x39D JUMPI PUSH2 0x39C PUSH2 0xAE3 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x3D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1425571C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x805E1D667BDDB8A95F0F09880CF94F403FB596CE79928D9F29B74203BA284D4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x496 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x6E3 JUMP JUMPDEST POP SWAP1 POP DUP1 PUSH2 0x505 JUMPI SELFBALANCE PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x4C7 JUMPI PUSH2 0x4C6 PUSH2 0xAE3 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x3A8D608600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x108C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x52A JUMPI PUSH2 0x529 PUSH2 0xAE3 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D3B1D30 PUSH32 0x0 PUSH32 0x0 PUSH1 0x3 PUSH32 0x0 PUSH32 0x0 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x613 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x113B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x632 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x656 SWAP2 SWAP1 PUSH2 0x11A3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH32 0xCD6E45C8998311CAB7E9D4385596CAC867E20A0587194B954FA3A731C93CE78B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x70B JUMPI PUSH2 0x70A PUSH2 0xAE3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x71F JUMPI PUSH2 0x71E PUSH2 0xAE3 JUMP JUMPDEST JUMPDEST EQ SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0x753 SWAP2 SWAP1 PUSH2 0x11FF JUMP JUMPDEST GT SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 POP GT SWAP1 POP PUSH1 0x0 DUP1 SELFBALANCE GT SWAP1 POP DUP4 DUP1 ISZERO PUSH2 0x773 JUMPI POP DUP3 JUMPDEST DUP1 ISZERO PUSH2 0x77C JUMPI POP DUP2 JUMPDEST DUP1 ISZERO PUSH2 0x785 JUMPI POP DUP1 JUMPDEST SWAP6 POP POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x7A5 JUMPI PUSH2 0x7A4 PUSH2 0x1233 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SLOAD SWAP1 POP DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x7F2 JUMPI PUSH2 0x7F1 PUSH2 0x1233 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x804 SWAP2 SWAP1 PUSH2 0x1291 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x81B JUMPI PUSH2 0x81A PUSH2 0x1233 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x8AF JUMPI PUSH2 0x8AE PUSH2 0xAE3 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8CF JUMPI PUSH2 0x8CE PUSH2 0xBCB JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x8FD JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x913 SWAP3 SWAP2 SWAP1 PUSH2 0xA08 JUMP JUMPDEST POP TIMESTAMP PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0x941 SWAP1 PUSH2 0x12F3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x97E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x983 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x9BE JUMPI PUSH1 0x40 MLOAD PUSH32 0xA1D04B3900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5B690EC4A06FE979403046EAEEA5B3CE38524683C3001F662C8B5A829632F7DF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xA81 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xA80 JUMPI DUP3 MLOAD DUP3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xA28 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0xA8E SWAP2 SWAP1 PUSH2 0xA92 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xAAB JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xA93 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAC2 DUP2 PUSH2 0xAAF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xADD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAB9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0xB23 JUMPI PUSH2 0xB22 PUSH2 0xAE3 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0xB34 DUP3 PUSH2 0xB12 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB44 DUP3 PUSH2 0xB26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB54 DUP2 PUSH2 0xB39 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB6F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB4B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB92 DUP2 PUSH2 0xAAF JUMP JUMPDEST DUP2 EQ PUSH2 0xB9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBAF DUP2 PUSH2 0xB89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xC03 DUP3 PUSH2 0xBBA JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xC22 JUMPI PUSH2 0xC21 PUSH2 0xBCB JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC35 PUSH2 0xB75 JUMP JUMPDEST SWAP1 POP PUSH2 0xC41 DUP3 DUP3 PUSH2 0xBFA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xC61 JUMPI PUSH2 0xC60 PUSH2 0xBCB JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC8A PUSH2 0xC85 DUP5 PUSH2 0xC46 JUMP JUMPDEST PUSH2 0xC2B JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xCAD JUMPI PUSH2 0xCAC PUSH2 0xC72 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xCD6 JUMPI DUP1 PUSH2 0xCC2 DUP9 DUP3 PUSH2 0xBA0 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xCAF JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xCF5 JUMPI PUSH2 0xCF4 PUSH2 0xBB5 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD05 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xC77 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD25 JUMPI PUSH2 0xD24 PUSH2 0xB7F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD33 DUP6 DUP3 DUP7 ADD PUSH2 0xBA0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD54 JUMPI PUSH2 0xD53 PUSH2 0xB84 JUMP JUMPDEST JUMPDEST PUSH2 0xD60 DUP6 DUP3 DUP7 ADD PUSH2 0xCE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xD85 JUMPI PUSH2 0xD84 PUSH2 0xBB5 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDA2 JUMPI PUSH2 0xDA1 PUSH2 0xD6A JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xDBE JUMPI PUSH2 0xDBD PUSH2 0xC72 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDDC JUMPI PUSH2 0xDDB PUSH2 0xB7F JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDFA JUMPI PUSH2 0xDF9 PUSH2 0xB84 JUMP JUMPDEST JUMPDEST PUSH2 0xE06 DUP6 DUP3 DUP7 ADD PUSH2 0xD6F JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE3D DUP3 PUSH2 0xE12 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE4D DUP2 PUSH2 0xE32 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE68 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE44 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xE8E JUMPI PUSH2 0xE8D PUSH2 0xBCB JUMP JUMPDEST JUMPDEST PUSH2 0xE97 DUP3 PUSH2 0xBBA JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEC6 PUSH2 0xEC1 DUP5 PUSH2 0xE73 JUMP JUMPDEST PUSH2 0xC2B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xEE2 JUMPI PUSH2 0xEE1 PUSH2 0xE6E JUMP JUMPDEST JUMPDEST PUSH2 0xEED DUP5 DUP3 DUP6 PUSH2 0xEA4 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF0A JUMPI PUSH2 0xF09 PUSH2 0xBB5 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF1A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xEB3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF39 JUMPI PUSH2 0xF38 PUSH2 0xB7F JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF57 JUMPI PUSH2 0xF56 PUSH2 0xB84 JUMP JUMPDEST JUMPDEST PUSH2 0xF63 DUP5 DUP3 DUP6 ADD PUSH2 0xEF5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF81 DUP2 PUSH2 0xF6C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFC1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xFA6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD8 DUP3 PUSH2 0xF87 JUMP JUMPDEST PUSH2 0xFE2 DUP2 DUP6 PUSH2 0xF92 JUMP JUMPDEST SWAP4 POP PUSH2 0xFF2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xFA3 JUMP JUMPDEST PUSH2 0xFFB DUP2 PUSH2 0xBBA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x101B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xF78 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x102D DUP2 DUP5 PUSH2 0xFCD JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x104C JUMPI PUSH2 0x104B PUSH2 0xB7F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x105A DUP5 DUP3 DUP6 ADD PUSH2 0xBA0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1078 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xE44 JUMP JUMPDEST PUSH2 0x1085 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE44 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x10A1 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xAB9 JUMP JUMPDEST PUSH2 0x10AE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xAB9 JUMP JUMPDEST PUSH2 0x10BB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xAB9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10D6 DUP2 PUSH2 0x10C3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10F9 DUP2 PUSH2 0x10DC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1116 DUP2 PUSH2 0x10FF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1135 DUP2 PUSH2 0x111C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1150 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x10CD JUMP JUMPDEST PUSH2 0x115D PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x10F0 JUMP JUMPDEST PUSH2 0x116A PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x110D JUMP JUMPDEST PUSH2 0x1177 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x112C JUMP JUMPDEST PUSH2 0x1184 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x112C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x119D DUP2 PUSH2 0xB89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11B9 JUMPI PUSH2 0x11B8 PUSH2 0xB7F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11C7 DUP5 DUP3 DUP6 ADD PUSH2 0x118E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x120A DUP3 PUSH2 0xAAF JUMP JUMPDEST SWAP2 POP PUSH2 0x1215 DUP4 PUSH2 0xAAF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x122D JUMPI PUSH2 0x122C PUSH2 0x11D0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x129C DUP3 PUSH2 0xAAF JUMP JUMPDEST SWAP2 POP PUSH2 0x12A7 DUP4 PUSH2 0xAAF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x12B7 JUMPI PUSH2 0x12B6 PUSH2 0x1262 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12DD PUSH1 0x0 DUP4 PUSH2 0x12C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x12E8 DUP3 PUSH2 0x12CD JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12FE DUP3 PUSH2 0x12D0 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL 0xEC 0xDC XOR ADD 0xEF 0xEE DUP11 0xEA 0xD5 SWAP11 REVERT DUP16 DUP14 RETURNDATASIZE 0xCB SWAP7 DUP11 ADDRESS PUSH26 0x60B49F480D377F7CFF39621664736F6C63430008120033000000 ","sourceMap":"823:6161:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6489:92;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6795:96;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6618:256:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2670:583:7;;;:::i;:::-;;4609:955;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6695:94;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6897:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3804:748;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;6587:102;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6489:92;6536:7;6561:13;6554:20;;6489:92;:::o;6795:96::-;6841:11;6871:13;;;;;;;;;;;6864:20;;6795:96;:::o;6618:256:2:-;6731:14;6717:28;;:10;:28;;;6713:109;;6788:10;6800:14;6762:53;;;;;;;;;;;;:::i;:::-;;;;;;;;6713:109;6827:42;6846:9;6857:11;6827:18;:42::i;:::-;6618:256;;:::o;2670:583:7:-;2849:13;2837:9;:25;2834:68;;;2871:29;;;;;;;;;;;;;;2834:68;2952:16;2935:33;;;;;;;;:::i;:::-;;:13;;;;;;;;;;;:33;;;;;;;;:::i;:::-;;;2932:64;;2977:17;;;;;;;;;;;;;;2932:64;3005:9;3029:10;3005:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3234:10;3222:23;;;;;;;;;;;;2670:583::o;4609:955::-;4866:17;4889:15;;;;;;;;;;;;;:11;:15::i;:::-;4865:39;;;4919:12;4914:139;;4978:21;5001:9;:16;;;;5027:13;;;;;;;;;;;5019:22;;;;;;;;:::i;:::-;;4954:88;;;;;;;;;;;;;:::i;:::-;;;;;;;;4914:139;5078:23;5062:13;;:39;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;5111:17;5131:16;:35;;;5243:9;5352:16;1378:1;5417:18;5449:9;5131:379;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5111:399;;5547:9;5525:32;;;;;;;;;;4683:881;;4609:955;;:::o;6695:94::-;6742:7;6768:14;;;;;;;;;;;6761:21;;6695:94;:::o;6897:85::-;6940:7;6966:9;6959:16;;;;6897:85;:::o;3804:748::-;4057:17;4077:12;4122:11;4157:13;;;;;;;;;;;4137:33;;;;;;;;:::i;:::-;;:16;:33;;;;;;;;:::i;:::-;;;4122:49;;4185:15;4241:10;4222:15;;4204;:33;;;;:::i;:::-;4203:48;4185:66;;4319:15;4357:1;4338:9;:16;;;;:20;4319:40;;4373:15;4415:1;4391:21;:25;4373:43;;4446:6;:20;;;;;4456:10;4446:20;:34;;;;;4470:10;4446:34;:48;;;;;4484:10;4446:48;4430:65;;4108:444;;;;3804:748;;;:::o;6587:102::-;6641:7;6666:9;6676:5;6666:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6659:23;;6587:102;;;:::o;5570:881::-;5752:21;5793:9;:16;;;;5776:11;5788:1;5776:14;;;;;;;;:::i;:::-;;;;;;;;:33;;;;:::i;:::-;5752:57;;5819:28;5850:9;5860:13;5850:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5819:55;;5901:12;5884:14;;:29;;;;;;;;;;;;;;;;;;5939:16;5923:13;;:32;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;6034:1;6012:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6000:9;:36;;;;;;;;;;;;:::i;:::-;;6112:15;6094;:33;;;;6229:12;6247;:17;;6272:21;6247:51;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6228:70;;;6339:7;6335:69;;6369:24;;;;;;;;;;;;;;6335:69;6431:12;6418:26;;;;;;;;;;;;5670:781;;;5570:881;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:77:8:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:180::-;490:77;487:1;480:88;587:4;584:1;577:15;611:4;608:1;601:15;628:120;716:1;709:5;706:12;696:46;;722:18;;:::i;:::-;696:46;628:120;:::o;754:141::-;806:7;835:5;824:16;;841:48;883:5;841:48;:::i;:::-;754:141;;;:::o;901:::-;964:9;997:39;1030:5;997:39;:::i;:::-;984:52;;901:141;;;:::o;1048:157::-;1148:50;1192:5;1148:50;:::i;:::-;1143:3;1136:63;1048:157;;:::o;1211:248::-;1317:4;1355:2;1344:9;1340:18;1332:26;;1368:84;1449:1;1438:9;1434:17;1425:6;1368:84;:::i;:::-;1211:248;;;;:::o;1465:75::-;1498:6;1531:2;1525:9;1515:19;;1465:75;:::o;1546:117::-;1655:1;1652;1645:12;1669:117;1778:1;1775;1768:12;1792:122;1865:24;1883:5;1865:24;:::i;:::-;1858:5;1855:35;1845:63;;1904:1;1901;1894:12;1845:63;1792:122;:::o;1920:139::-;1966:5;2004:6;1991:20;1982:29;;2020:33;2047:5;2020:33;:::i;:::-;1920:139;;;;:::o;2065:117::-;2174:1;2171;2164:12;2188:102;2229:6;2280:2;2276:7;2271:2;2264:5;2260:14;2256:28;2246:38;;2188:102;;;:::o;2296:180::-;2344:77;2341:1;2334:88;2441:4;2438:1;2431:15;2465:4;2462:1;2455:15;2482:281;2565:27;2587:4;2565:27;:::i;:::-;2557:6;2553:40;2695:6;2683:10;2680:22;2659:18;2647:10;2644:34;2641:62;2638:88;;;2706:18;;:::i;:::-;2638:88;2746:10;2742:2;2735:22;2525:238;2482:281;;:::o;2769:129::-;2803:6;2830:20;;:::i;:::-;2820:30;;2859:33;2887:4;2879:6;2859:33;:::i;:::-;2769:129;;;:::o;2904:311::-;2981:4;3071:18;3063:6;3060:30;3057:56;;;3093:18;;:::i;:::-;3057:56;3143:4;3135:6;3131:17;3123:25;;3203:4;3197;3193:15;3185:23;;2904:311;;;:::o;3221:117::-;3330:1;3327;3320:12;3361:710;3457:5;3482:81;3498:64;3555:6;3498:64;:::i;:::-;3482:81;:::i;:::-;3473:90;;3583:5;3612:6;3605:5;3598:21;3646:4;3639:5;3635:16;3628:23;;3699:4;3691:6;3687:17;3679:6;3675:30;3728:3;3720:6;3717:15;3714:122;;;3747:79;;:::i;:::-;3714:122;3862:6;3845:220;3879:6;3874:3;3871:15;3845:220;;;3954:3;3983:37;4016:3;4004:10;3983:37;:::i;:::-;3978:3;3971:50;4050:4;4045:3;4041:14;4034:21;;3921:144;3905:4;3900:3;3896:14;3889:21;;3845:220;;;3849:21;3463:608;;3361:710;;;;;:::o;4094:370::-;4165:5;4214:3;4207:4;4199:6;4195:17;4191:27;4181:122;;4222:79;;:::i;:::-;4181:122;4339:6;4326:20;4364:94;4454:3;4446:6;4439:4;4431:6;4427:17;4364:94;:::i;:::-;4355:103;;4171:293;4094:370;;;;:::o;4470:684::-;4563:6;4571;4620:2;4608:9;4599:7;4595:23;4591:32;4588:119;;;4626:79;;:::i;:::-;4588:119;4746:1;4771:53;4816:7;4807:6;4796:9;4792:22;4771:53;:::i;:::-;4761:63;;4717:117;4901:2;4890:9;4886:18;4873:32;4932:18;4924:6;4921:30;4918:117;;;4954:79;;:::i;:::-;4918:117;5059:78;5129:7;5120:6;5109:9;5105:22;5059:78;:::i;:::-;5049:88;;4844:303;4470:684;;;;;:::o;5160:117::-;5269:1;5266;5259:12;5296:552;5353:8;5363:6;5413:3;5406:4;5398:6;5394:17;5390:27;5380:122;;5421:79;;:::i;:::-;5380:122;5534:6;5521:20;5511:30;;5564:18;5556:6;5553:30;5550:117;;;5586:79;;:::i;:::-;5550:117;5700:4;5692:6;5688:17;5676:29;;5754:3;5746:4;5738:6;5734:17;5724:8;5720:32;5717:41;5714:128;;;5761:79;;:::i;:::-;5714:128;5296:552;;;;;:::o;5854:527::-;5924:6;5932;5981:2;5969:9;5960:7;5956:23;5952:32;5949:119;;;5987:79;;:::i;:::-;5949:119;6135:1;6124:9;6120:17;6107:31;6165:18;6157:6;6154:30;6151:117;;;6187:79;;:::i;:::-;6151:117;6300:64;6356:7;6347:6;6336:9;6332:22;6300:64;:::i;:::-;6282:82;;;;6078:296;5854:527;;;;;:::o;6387:126::-;6424:7;6464:42;6457:5;6453:54;6442:65;;6387:126;;;:::o;6519:96::-;6556:7;6585:24;6603:5;6585:24;:::i;:::-;6574:35;;6519:96;;;:::o;6621:118::-;6708:24;6726:5;6708:24;:::i;:::-;6703:3;6696:37;6621:118;;:::o;6745:222::-;6838:4;6876:2;6865:9;6861:18;6853:26;;6889:71;6957:1;6946:9;6942:17;6933:6;6889:71;:::i;:::-;6745:222;;;;:::o;6973:117::-;7082:1;7079;7072:12;7096:307;7157:4;7247:18;7239:6;7236:30;7233:56;;;7269:18;;:::i;:::-;7233:56;7307:29;7329:6;7307:29;:::i;:::-;7299:37;;7391:4;7385;7381:15;7373:23;;7096:307;;;:::o;7409:146::-;7506:6;7501:3;7496;7483:30;7547:1;7538:6;7533:3;7529:16;7522:27;7409:146;;;:::o;7561:423::-;7638:5;7663:65;7679:48;7720:6;7679:48;:::i;:::-;7663:65;:::i;:::-;7654:74;;7751:6;7744:5;7737:21;7789:4;7782:5;7778:16;7827:3;7818:6;7813:3;7809:16;7806:25;7803:112;;;7834:79;;:::i;:::-;7803:112;7924:54;7971:6;7966:3;7961;7924:54;:::i;:::-;7644:340;7561:423;;;;;:::o;8003:338::-;8058:5;8107:3;8100:4;8092:6;8088:17;8084:27;8074:122;;8115:79;;:::i;:::-;8074:122;8232:6;8219:20;8257:78;8331:3;8323:6;8316:4;8308:6;8304:17;8257:78;:::i;:::-;8248:87;;8064:277;8003:338;;;;:::o;8347:507::-;8415:6;8464:2;8452:9;8443:7;8439:23;8435:32;8432:119;;;8470:79;;:::i;:::-;8432:119;8618:1;8607:9;8603:17;8590:31;8648:18;8640:6;8637:30;8634:117;;;8670:79;;:::i;:::-;8634:117;8775:62;8829:7;8820:6;8809:9;8805:22;8775:62;:::i;:::-;8765:72;;8561:286;8347:507;;;;:::o;8860:90::-;8894:7;8937:5;8930:13;8923:21;8912:32;;8860:90;;;:::o;8956:109::-;9037:21;9052:5;9037:21;:::i;:::-;9032:3;9025:34;8956:109;;:::o;9071:98::-;9122:6;9156:5;9150:12;9140:22;;9071:98;;;:::o;9175:168::-;9258:11;9292:6;9287:3;9280:19;9332:4;9327:3;9323:14;9308:29;;9175:168;;;;:::o;9349:246::-;9430:1;9440:113;9454:6;9451:1;9448:13;9440:113;;;9539:1;9534:3;9530:11;9524:18;9520:1;9515:3;9511:11;9504:39;9476:2;9473:1;9469:10;9464:15;;9440:113;;;9587:1;9578:6;9573:3;9569:16;9562:27;9411:184;9349:246;;;:::o;9601:373::-;9687:3;9715:38;9747:5;9715:38;:::i;:::-;9769:70;9832:6;9827:3;9769:70;:::i;:::-;9762:77;;9848:65;9906:6;9901:3;9894:4;9887:5;9883:16;9848:65;:::i;:::-;9938:29;9960:6;9938:29;:::i;:::-;9933:3;9929:39;9922:46;;9691:283;9601:373;;;;:::o;9980:407::-;10113:4;10151:2;10140:9;10136:18;10128:26;;10164:65;10226:1;10215:9;10211:17;10202:6;10164:65;:::i;:::-;10276:9;10270:4;10266:20;10261:2;10250:9;10246:18;10239:48;10304:76;10375:4;10366:6;10304:76;:::i;:::-;10296:84;;9980:407;;;;;:::o;10393:329::-;10452:6;10501:2;10489:9;10480:7;10476:23;10472:32;10469:119;;;10507:79;;:::i;:::-;10469:119;10627:1;10652:53;10697:7;10688:6;10677:9;10673:22;10652:53;:::i;:::-;10642:63;;10598:117;10393:329;;;;:::o;10728:332::-;10849:4;10887:2;10876:9;10872:18;10864:26;;10900:71;10968:1;10957:9;10953:17;10944:6;10900:71;:::i;:::-;10981:72;11049:2;11038:9;11034:18;11025:6;10981:72;:::i;:::-;10728:332;;;;;:::o;11066:442::-;11215:4;11253:2;11242:9;11238:18;11230:26;;11266:71;11334:1;11323:9;11319:17;11310:6;11266:71;:::i;:::-;11347:72;11415:2;11404:9;11400:18;11391:6;11347:72;:::i;:::-;11429;11497:2;11486:9;11482:18;11473:6;11429:72;:::i;:::-;11066:442;;;;;;:::o;11514:77::-;11551:7;11580:5;11569:16;;11514:77;;;:::o;11597:118::-;11684:24;11702:5;11684:24;:::i;:::-;11679:3;11672:37;11597:118;;:::o;11721:101::-;11757:7;11797:18;11790:5;11786:30;11775:41;;11721:101;;;:::o;11828:115::-;11913:23;11930:5;11913:23;:::i;:::-;11908:3;11901:36;11828:115;;:::o;11949:89::-;11985:7;12025:6;12018:5;12014:18;12003:29;;11949:89;;;:::o;12044:115::-;12129:23;12146:5;12129:23;:::i;:::-;12124:3;12117:36;12044:115;;:::o;12165:93::-;12201:7;12241:10;12234:5;12230:22;12219:33;;12165:93;;;:::o;12264:115::-;12349:23;12366:5;12349:23;:::i;:::-;12344:3;12337:36;12264:115;;:::o;12385:648::-;12582:4;12620:3;12609:9;12605:19;12597:27;;12634:71;12702:1;12691:9;12687:17;12678:6;12634:71;:::i;:::-;12715:70;12781:2;12770:9;12766:18;12757:6;12715:70;:::i;:::-;12795;12861:2;12850:9;12846:18;12837:6;12795:70;:::i;:::-;12875;12941:2;12930:9;12926:18;12917:6;12875:70;:::i;:::-;12955:71;13021:3;13010:9;13006:19;12997:6;12955:71;:::i;:::-;12385:648;;;;;;;;:::o;13039:143::-;13096:5;13127:6;13121:13;13112:22;;13143:33;13170:5;13143:33;:::i;:::-;13039:143;;;;:::o;13188:351::-;13258:6;13307:2;13295:9;13286:7;13282:23;13278:32;13275:119;;;13313:79;;:::i;:::-;13275:119;13433:1;13458:64;13514:7;13505:6;13494:9;13490:22;13458:64;:::i;:::-;13448:74;;13404:128;13188:351;;;;:::o;13545:180::-;13593:77;13590:1;13583:88;13690:4;13687:1;13680:15;13714:4;13711:1;13704:15;13731:194;13771:4;13791:20;13809:1;13791:20;:::i;:::-;13786:25;;13825:20;13843:1;13825:20;:::i;:::-;13820:25;;13869:1;13866;13862:9;13854:17;;13893:1;13887:4;13884:11;13881:37;;;13898:18;;:::i;:::-;13881:37;13731:194;;;;:::o;13931:180::-;13979:77;13976:1;13969:88;14076:4;14073:1;14066:15;14100:4;14097:1;14090:15;14117:180;14165:77;14162:1;14155:88;14262:4;14259:1;14252:15;14286:4;14283:1;14276:15;14303:176;14335:1;14352:20;14370:1;14352:20;:::i;:::-;14347:25;;14386:20;14404:1;14386:20;:::i;:::-;14381:25;;14425:1;14415:35;;14430:18;;:::i;:::-;14415:35;14471:1;14468;14464:9;14459:14;;14303:176;;;;:::o;14485:147::-;14586:11;14623:3;14608:18;;14485:147;;;;:::o;14638:114::-;;:::o;14758:398::-;14917:3;14938:83;15019:1;15014:3;14938:83;:::i;:::-;14931:90;;15030:93;15119:3;15030:93;:::i;:::-;15148:1;15143:3;15139:11;15132:18;;14758:398;;;:::o;15162:379::-;15346:3;15368:147;15511:3;15368:147;:::i;:::-;15361:154;;15532:3;15525:10;;15162:379;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"985200","executionCost":"infinite","totalCost":"infinite"},"external":{"checkUpkeep(bytes)":"infinite","enterRaffle()":"infinite","getEntranceFee()":"infinite","getNumWords()":"infinite","getPlayer(uint256)":"5055","getRaffleState()":"2641","getRecentWinner()":"2544","performUpkeep(bytes)":"infinite","rawFulfillRandomWords(uint256,uint256[])":"infinite"},"internal":{"fulfillRandomWords(uint256,uint256[] memory)":"infinite"}},"methodIdentifiers":{"checkUpkeep(bytes)":"6e04ff0d","enterRaffle()":"2cfcc539","getEntranceFee()":"09bc33a7","getNumWords()":"53a2c19a","getPlayer(uint256)":"e55ae4e8","getRaffleState()":"115cbaf5","getRecentWinner()":"473f1ddc","performUpkeep(bytes)":"4585e33b","rawFulfillRandomWords(uint256,uint256[])":"1fe543e3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vrfCoordinatorV2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"entranceFee\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasLane\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"interval\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Raffle__NotEnoughETHEntered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Raffle__NotOpen\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Raffle__TransferFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"currentBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numPlayers\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"raffleState\",\"type\":\"uint256\"}],\"name\":\"Raffle__UpKeepNotNeeded\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"RaffleEnter\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"RequestedRaffleWinner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"WinnerPicked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enterRaffle\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEntranceFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getPlayer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRaffleState\",\"outputs\":[{\"internalType\":\"enum Raffle.RaffleState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRecentWinner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"This is the function that the Chainlink Keeper nodes call They look for the`upkeepNeeded` to return true. The following should be true in order to return true. 1. Our time internal should have passed 2. The lottery should have at least 1 player, and have some ETH 3. Our subscription is funded with LINK 4. Lottery should be in an *open* state, and when it is requesting for a random number, it should be a *closed/calculating* state, to prevent people from joining during that time.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Raffle.sol\":\"Raffle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/ConfirmedOwner.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./ConfirmedOwnerWithProposal.sol\\\";\\n\\n/**\\n * @title The ConfirmedOwner contract\\n * @notice A contract with helpers for basic contract ownership.\\n */\\ncontract ConfirmedOwner is ConfirmedOwnerWithProposal {\\n  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {}\\n}\\n\",\"keccak256\":\"0x99d0b0786fe368970009c703f2249bfbc56340ddf1a28b60d2915bb58c34cd72\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./interfaces/OwnableInterface.sol\\\";\\n\\n/**\\n * @title The ConfirmedOwner contract\\n * @notice A contract with helpers for basic contract ownership.\\n */\\ncontract ConfirmedOwnerWithProposal is OwnableInterface {\\n  address private s_owner;\\n  address private s_pendingOwner;\\n\\n  event OwnershipTransferRequested(address indexed from, address indexed to);\\n  event OwnershipTransferred(address indexed from, address indexed to);\\n\\n  constructor(address newOwner, address pendingOwner) {\\n    require(newOwner != address(0), \\\"Cannot set owner to zero\\\");\\n\\n    s_owner = newOwner;\\n    if (pendingOwner != address(0)) {\\n      _transferOwnership(pendingOwner);\\n    }\\n  }\\n\\n  /**\\n   * @notice Allows an owner to begin transferring ownership to a new address,\\n   * pending.\\n   */\\n  function transferOwnership(address to) public override onlyOwner {\\n    _transferOwnership(to);\\n  }\\n\\n  /**\\n   * @notice Allows an ownership transfer to be completed by the recipient.\\n   */\\n  function acceptOwnership() external override {\\n    require(msg.sender == s_pendingOwner, \\\"Must be proposed owner\\\");\\n\\n    address oldOwner = s_owner;\\n    s_owner = msg.sender;\\n    s_pendingOwner = address(0);\\n\\n    emit OwnershipTransferred(oldOwner, msg.sender);\\n  }\\n\\n  /**\\n   * @notice Get the current owner\\n   */\\n  function owner() public view override returns (address) {\\n    return s_owner;\\n  }\\n\\n  /**\\n   * @notice validate, transfer ownership, and emit relevant events\\n   */\\n  function _transferOwnership(address to) private {\\n    require(to != msg.sender, \\\"Cannot transfer to self\\\");\\n\\n    s_pendingOwner = to;\\n\\n    emit OwnershipTransferRequested(s_owner, to);\\n  }\\n\\n  /**\\n   * @notice validate access\\n   */\\n  function _validateOwnership() internal view {\\n    require(msg.sender == s_owner, \\\"Only callable by owner\\\");\\n  }\\n\\n  /**\\n   * @notice Reverts if called by anyone other than the contract owner.\\n   */\\n  modifier onlyOwner() {\\n    _validateOwnership();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0xa2f137a1d066795aeac76226e58f33c982278cdd34b4f09e5a2243d5a0924654\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AutomationCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n/**\\n * @notice This is a deprecated interface. Please use AutomationCompatibleInterface directly.\\n */\\npragma solidity ^0.8.0;\\nimport {AutomationCompatibleInterface as KeeperCompatibleInterface} from \\\"./AutomationCompatibleInterface.sol\\\";\\n\",\"keccak256\":\"0xac76a31c20c6d66196247376d113a0f19229569ab8c123989649d50be3333e0a\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface OwnableInterface {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0xb8b3a97783dddc198b790c4cec1eda7fb47aa38cbaea6555220d0ed8c735c086\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig()\\n    external\\n    view\\n    returns (\\n      uint16,\\n      uint32,\\n      bytes32[] memory\\n    );\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(uint64 subId)\\n    external\\n    view\\n    returns (\\n      uint96 balance,\\n      uint64 reqCount,\\n      address owner,\\n      address[] memory consumers\\n    );\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint64 subId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x54cdc97717cbae1a51a5500c8ee4875ebf056c95b54d2155a9544a79cb4f4494\",\"license\":\"MIT\"},\"contracts/Raffle.sol\":{\"content\":\"// Raffle\\n\\n// Enter the lottery ( pay some amount)\\n// Pick a random winnder (verifiably random) \\n\\n//winer to be selected every X mins -> completed automated.abi\\n// Chainlink Oracle -> randomess, Automated Execution (chainlink keeper)\\n\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/ConfirmedOwner.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\\\"; //We using the subscription method, not direct funding\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\\\";\\n\\nerror Raffle__NotEnoughETHEntered();\\nerror Raffle__TransferFailed();\\nerror Raffle__NotOpen();\\nerror Raffle__UpKeepNotNeeded(uint256 currentBalance, uint256 numPlayers , uint256 raffleState);\\n\\ncontract Raffle is VRFConsumerBaseV2, KeeperCompatibleInterface {\\n    /* Type declarations */\\n    enum RaffleState {\\n        OPEN,\\n        CALCULATING\\n    } // same as (uint256 0 = OPEN, 1 = CALCULATING), but this is being more explicit\\n\\n    /* State Variable */\\n    uint256 private immutable i_entranceFee;\\n    address payable[] private s_players;\\n    VRFCoordinatorV2Interface private immutable i_vrfCoordinator;\\n    bytes32 private immutable i_gasLane;\\n    uint64 private immutable i_subscriptionId;\\n    uint16 private constant REQUEST_CONFIRMATIONS = 3;\\n    uint32 private immutable i_callbackGasLimit;\\n    uint32 private immutable NUM_WORDS = 1;\\n    \\n\\n    // Lottery Variables\\n    address private s_recentWinner;\\n    // uint256 private s_state; // 1 = pending, 2 = open, 3 = closed, 4 = calculating (while u can do this, it is better to use enums.)\\n    RaffleState private s_raffleState; // using the enum's method, to create new \\\"TYPE\\\"\\n    uint256 private s_lastTimeStamp;\\n    uint256 private immutable i_interval;\\n\\n    /* Events */\\n    event RaffleEnter(address indexed player);\\n    event RequestedRaffleWinner(uint256 indexed requestId);\\n    event WinnerPicked(address indexed winner);\\n\\n\\n    constructor (\\n        address vrfCoordinatorV2, \\n        uint256 entranceFee, \\n        bytes32 gasLane, \\n        uint64 subscriptionId, \\n        uint32 callbackGasLimit,\\n        uint256 interval\\n    ) VRFConsumerBaseV2(vrfCoordinatorV2) {\\n        i_entranceFee = entranceFee;\\n        i_vrfCoordinator = VRFCoordinatorV2Interface(vrfCoordinatorV2);\\n        i_gasLane = gasLane;\\n        i_subscriptionId = subscriptionId;\\n        i_callbackGasLimit = callbackGasLimit;\\n        s_raffleState = RaffleState.OPEN; // or u can also do  s_raffleState = RaffleState(0);\\n        s_lastTimeStamp = block.timestamp;\\n        i_interval = interval;\\n    }\\n\\n    function enterRaffle() public payable {\\n        // require (msg.value > i_entranceFee, \\\"Not enough ETH!\\\") //Not as GAS efficient, because there is \\\"string\\\"\\n        if(msg.value < i_entranceFee){revert Raffle__NotEnoughETHEntered();} //More GAS efficient\\n        if(s_raffleState != RaffleState.OPEN){revert Raffle__NotOpen();}\\n        s_players.push(payable (msg.sender));\\n        // EVENTS (whenever we update a dynamic object like arrays or mapping, we always want to emit an event. )\\n        // Named events with function name reverse.\\n        emit RaffleEnter(msg.sender);\\n\\n    }\\n\\n    /// @dev This is the function that the Chainlink Keeper nodes call\\n    /// They look for the`upkeepNeeded` to return true.\\n    /// The following should be true in order to return true.\\n    /// 1. Our time internal should have passed\\n    /// 2. The lottery should have at least 1 player, and have some ETH\\n    /// 3. Our subscription is funded with LINK\\n    /// 4. Lottery should be in an *open* state, and when it is requesting for a random number, it should be a *closed/calculating* state, to prevent people from joining during that time.\\n    function checkUpkeep(\\n        bytes memory /*checkData*/  //In this case we don't need to use any Data, but the input parameter of type bytes make it very flexible such that u can even input and call other functions()\\n        ) public override returns (bool upkeepNeeded , bytes memory /*performData */) {\\n            bool isOpen = (RaffleState.OPEN == s_raffleState);\\n            bool timePassed = (block.timestamp - s_lastTimeStamp) > i_interval;// (block.timestamp - last block timestamp) > interval\\n            bool hasPlayers = (s_players.length > 0);\\n            bool hasBalance = address(this).balance > 0;\\n            upkeepNeeded = (isOpen && timePassed && hasPlayers && hasBalance); // if all true, then request a random number.\\n        }\\n\\n    // use Chainlink VRF & also Chainlink Keepers.\\n    function performUpkeep(bytes calldata /*performData*/)  external override {\\n        //request RND number\\n        // Once we get it, do something with it\\n        // 2 transaction process\\n        // Will revert if subscription is not set and funded.\\n        (bool upkeepNeeded, ) = checkUpkeep(\\\"\\\");\\n        if (!upkeepNeeded) {\\n            revert Raffle__UpKeepNotNeeded(address(this).balance, s_players.length, uint256(s_raffleState));\\n        }\\n        s_raffleState = RaffleState.CALCULATING;\\n        uint256 requestId = i_vrfCoordinator.requestRandomWords( // we call the requestRandomWords() method from the interface.\\n            i_gasLane, // keyHash aka gasLane, thhe maximum gas price u willing to pay for a request in wei.\\n            i_subscriptionId,\\n            REQUEST_CONFIRMATIONS,\\n            i_callbackGasLimit,\\n            NUM_WORDS // how many random numbers we want to get\\n        );\\n        emit RequestedRaffleWinner(requestId);\\n    }\\n\\n    function fulfillRandomWords(uint256 /*requestId*/,  uint256[] memory randomWords) internal override {\\n        // use Modulo to get random number in array of dynamic size \\\"x\\\"\\n        uint256 indexOfWinner = randomWords[0] % s_players.length;\\n        address payable recentWinner = s_players[indexOfWinner];\\n        s_recentWinner = recentWinner;\\n        s_raffleState = RaffleState.OPEN; // after calculating, open it back\\n        s_players = new address payable[](0); // After calculating, reset the player's array.\\n        s_lastTimeStamp = block.timestamp;\\n        // now that we have the address of the winner, now we need to send them the money.\\n        (bool success, ) = recentWinner.call{value: address(this).balance}(\\\"\\\");\\n        //require(success)\\n        if(!success) {\\n            revert Raffle__TransferFailed();\\n        }\\n        emit WinnerPicked(recentWinner);\\n    }\\n\\n    /* view / pure functions */\\n    function getEntranceFee() public view returns (uint256){\\n        return i_entranceFee;\\n    }\\n\\n    function getPlayer(uint256 index) public view returns(address){\\n        return s_players[index];\\n    }\\n\\n    function getRecentWinner() public view returns(address) {\\n        return s_recentWinner;\\n    }\\n\\n    function getRaffleState() public view returns(RaffleState) {\\n        return s_raffleState;\\n    }\\n\\n    function getNumWords() public view returns(uint256) {\\n        return NUM_WORDS;\\n    }\\n}\",\"keccak256\":\"0x20f1983603dcdb4cfb886e4b3f3de8a12a797cbcd95ceeeffdd244d6d763d0a9\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":406,"contract":"contracts/Raffle.sol:Raffle","label":"s_players","offset":0,"slot":"0","type":"t_array(t_address_payable)dyn_storage"},{"astId":423,"contract":"contracts/Raffle.sol:Raffle","label":"s_recentWinner","offset":0,"slot":"1","type":"t_address"},{"astId":426,"contract":"contracts/Raffle.sol:Raffle","label":"s_raffleState","offset":20,"slot":"1","type":"t_enum(RaffleState)401"},{"astId":428,"contract":"contracts/Raffle.sol:Raffle","label":"s_lastTimeStamp","offset":0,"slot":"2","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_address_payable":{"encoding":"inplace","label":"address payable","numberOfBytes":"20"},"t_array(t_address_payable)dyn_storage":{"base":"t_address_payable","encoding":"dynamic_array","label":"address payable[]","numberOfBytes":"32"},"t_enum(RaffleState)401":{"encoding":"inplace","label":"enum Raffle.RaffleState","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}