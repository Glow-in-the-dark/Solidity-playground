{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_mockAggregator",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "DecentralizedStableCoin__AmountMustBeMoreThanZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DecentralizedStableCoin__BurnAmountExceedsBalance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DecentralizedStableCoin__NotZeroAddress",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "currentAllowance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "requestedDecrease",
          "type": "uint256"
        }
      ],
      "name": "ERC20FailedDecreaseAllowance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientAllowance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSpender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "requestedDecrease",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060405162000e1938038062000e19833981016040819052620000349162000134565b336040518060400160405280601781526020017f446563656e7472616c697a6564537461626c65436f696e0000000000000000008152506040518060400160405280600381526020016244534360e81b81525081600390816200009891906200020b565b506004620000a782826200020b565b505050620000bb81620000e260201b60201c565b50600680546001600160a01b0319166001600160a01b0392909216919091179055620002d7565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156200014757600080fd5b81516001600160a01b03811681146200015f57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200019157607f821691505b602082108103620001b257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200020657600081815260208120601f850160051c81016020861015620001e15750805b601f850160051c820191505b818110156200020257828155600101620001ed565b5050505b505050565b81516001600160401b0381111562000227576200022762000166565b6200023f816200023884546200017c565b84620001b8565b602080601f8311600181146200027757600084156200025e5750858301515b600019600386901b1c1916600185901b17855562000202565b600085815260208120601f198616915b82811015620002a85788860151825594840194600190910190840162000287565b5085821015620002c75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610b3280620002e76000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806370a08231116100a257806395d89b411161007157806395d89b411461021f578063a457c2d714610227578063a9059cbb1461023a578063dd62ed3e1461024d578063f2fde38b1461026057600080fd5b806370a08231146101c0578063715018a6146101e957806379cc6790146101f15780638da5cb5b1461020457600080fd5b8063313ce567116100de578063313ce56714610176578063395093511461018557806340c10f191461019857806342966c68146101ab57600080fd5b806306fdde0314610110578063095ea7b31461012e57806318160ddd1461015157806323b872dd14610163575b600080fd5b610118610273565b6040516101259190610963565b60405180910390f35b61014161013c3660046109cd565b610305565b6040519015158152602001610125565b6002545b604051908152602001610125565b6101416101713660046109f7565b61031f565b60405160128152602001610125565b6101416101933660046109cd565b610343565b6101416101a63660046109cd565b610365565b6101be6101b9366004610a33565b6103ca565b005b6101556101ce366004610a4c565b6001600160a01b031660009081526020819052604090205490565b6101be61048d565b6101be6101ff3660046109cd565b6104a1565b6005546040516001600160a01b039091168152602001610125565b6101186104b6565b6101416102353660046109cd565b6104c5565b6101416102483660046109cd565b610521565b61015561025b366004610a6e565b61052f565b6101be61026e366004610a4c565b61055a565b60606003805461028290610aa1565b80601f01602080910402602001604051908101604052809291908181526020018280546102ae90610aa1565b80156102fb5780601f106102d0576101008083540402835291602001916102fb565b820191906000526020600020905b8154815290600101906020018083116102de57829003601f168201915b5050505050905090565b600033610313818585610598565b60019150505b92915050565b60003361032d8582856105aa565b610338858585610610565b506001949350505050565b600033610313818585610356838361052f565b6103609190610adb565b610598565b600061036f61066f565b6001600160a01b0383166103965760405163f3c190e960e01b815260040160405180910390fd5b600082116103b75760405163ae8ba12360e01b815260040160405180910390fd5b6103c1838361069c565b50600192915050565b6103d261066f565b60065460405163543d106760e11b8152600060048201526001600160a01b039091169063a87a20ce90602401600060405180830381600087803b15801561041857600080fd5b505af115801561042c573d6000803e3d6000fd5b5050336000908152602081905260409020549150508161045f5760405163ae8ba12360e01b815260040160405180910390fd5b818110156104805760405163fe9c6abb60e01b815260040160405180910390fd5b610489826106d2565b5050565b61049561066f565b61049f60006106dc565b565b6104ac8233836105aa565b610489828261072e565b60606004805461028290610aa1565b600033816104d3828661052f565b90508381101561051457604051632983c0c360e21b81526001600160a01b038616600482015260248101829052604481018590526064015b60405180910390fd5b6103388286868403610598565b600033610313818585610610565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61056261066f565b6001600160a01b03811661058c57604051631e4fbdf760e01b81526000600482015260240161050b565b610595816106dc565b50565b6105a58383836001610764565b505050565b60006105b6848461052f565b9050600019811461060a57818110156105fb57604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161050b565b61060a84848484036000610764565b50505050565b6001600160a01b03831661063a57604051634b637e8f60e11b81526000600482015260240161050b565b6001600160a01b0382166106645760405163ec442f0560e01b81526000600482015260240161050b565b6105a5838383610839565b6005546001600160a01b0316331461049f5760405163118cdaa760e01b815233600482015260240161050b565b6001600160a01b0382166106c65760405163ec442f0560e01b81526000600482015260240161050b565b61048960008383610839565b610595338261072e565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03821661075857604051634b637e8f60e11b81526000600482015260240161050b565b61048982600083610839565b6001600160a01b03841661078e5760405163e602df0560e01b81526000600482015260240161050b565b6001600160a01b0383166107b857604051634a1406b160e11b81526000600482015260240161050b565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561060a57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161082b91815260200190565b60405180910390a350505050565b6001600160a01b0383166108645780600260008282546108599190610adb565b909155506108d69050565b6001600160a01b038316600090815260208190526040902054818110156108b75760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161050b565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166108f257600280548290039055610911565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161095691815260200190565b60405180910390a3505050565b600060208083528351808285015260005b8181101561099057858101830151858201604001528201610974565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146109c857600080fd5b919050565b600080604083850312156109e057600080fd5b6109e9836109b1565b946020939093013593505050565b600080600060608486031215610a0c57600080fd5b610a15846109b1565b9250610a23602085016109b1565b9150604084013590509250925092565b600060208284031215610a4557600080fd5b5035919050565b600060208284031215610a5e57600080fd5b610a67826109b1565b9392505050565b60008060408385031215610a8157600080fd5b610a8a836109b1565b9150610a98602084016109b1565b90509250929050565b600181811c90821680610ab557607f821691505b602082108103610ad557634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561031957634e487b7160e01b600052601160045260246000fdfea2646970667358221220b631c65c241f2e8732fa56bab1b677c7af2ee49a041182a8b933da5adc88316564736f6c63430008130033",
    "sourceMap": "1123:1676:35:-:0;;;1832:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;720:10:27;2250:113:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2250:113:23;;;2324:5;2316;:13;;;;;;:::i;:::-;-1:-1:-1;2339:7:23;:17;2349:7;2339;:17;:::i;:::-;;2250:113;;1269:32:19;1288:12;1269:18;;;:32;;:::i;:::-;-1:-1:-1;1941:14:35::2;:32:::0;;-1:-1:-1;;;;;;1941:32:35::2;-1:-1:-1::0;;;;;1941:32:35;;;::::2;::::0;;;::::2;::::0;;1123:1676;;2808:187:19;2900:6;;;-1:-1:-1;;;;;2916:17:19;;;-1:-1:-1;;;;;;2916:17:19;;;;;;;2948:40;;2900:6;;;2916:17;2900:6;;2948:40;;2881:16;;2948:40;2871:124;2808:187;:::o;14:290:38:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:38;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:38:o;309:127::-;370:10;365:3;361:20;358:1;351:31;401:4;398:1;391:15;425:4;422:1;415:15;441:380;520:1;516:12;;;;563;;;584:61;;638:4;630:6;626:17;616:27;;584:61;691:2;683:6;680:14;660:18;657:38;654:161;;737:10;732:3;728:20;725:1;718:31;772:4;769:1;762:15;800:4;797:1;790:15;654:161;;441:380;;;:::o;952:545::-;1054:2;1049:3;1046:11;1043:448;;;1090:1;1115:5;1111:2;1104:17;1160:4;1156:2;1146:19;1230:2;1218:10;1214:19;1211:1;1207:27;1201:4;1197:38;1266:4;1254:10;1251:20;1248:47;;;-1:-1:-1;1289:4:38;1248:47;1344:2;1339:3;1335:12;1332:1;1328:20;1322:4;1318:31;1308:41;;1399:82;1417:2;1410:5;1407:13;1399:82;;;1462:17;;;1443:1;1432:13;1399:82;;;1403:3;;;1043:448;952:545;;;:::o;1673:1352::-;1793:10;;-1:-1:-1;;;;;1815:30:38;;1812:56;;;1848:18;;:::i;:::-;1877:97;1967:6;1927:38;1959:4;1953:11;1927:38;:::i;:::-;1921:4;1877:97;:::i;:::-;2029:4;;2093:2;2082:14;;2110:1;2105:663;;;;2812:1;2829:6;2826:89;;;-1:-1:-1;2881:19:38;;;2875:26;2826:89;-1:-1:-1;;1630:1:38;1626:11;;;1622:24;1618:29;1608:40;1654:1;1650:11;;;1605:57;2928:81;;2075:944;;2105:663;899:1;892:14;;;936:4;923:18;;-1:-1:-1;;2141:20:38;;;2259:236;2273:7;2270:1;2267:14;2259:236;;;2362:19;;;2356:26;2341:42;;2454:27;;;;2422:1;2410:14;;;;2289:19;;2259:236;;;2263:3;2523:6;2514:7;2511:19;2508:201;;;2584:19;;;2578:26;-1:-1:-1;;2667:1:38;2663:14;;;2679:3;2659:24;2655:37;2651:42;2636:58;2621:74;;2508:201;-1:-1:-1;;;;;2755:1:38;2739:14;;;2735:22;2722:36;;-1:-1:-1;1673:1352:38:o;:::-;1123:1676:35;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061010b5760003560e01c806370a08231116100a257806395d89b411161007157806395d89b411461021f578063a457c2d714610227578063a9059cbb1461023a578063dd62ed3e1461024d578063f2fde38b1461026057600080fd5b806370a08231146101c0578063715018a6146101e957806379cc6790146101f15780638da5cb5b1461020457600080fd5b8063313ce567116100de578063313ce56714610176578063395093511461018557806340c10f191461019857806342966c68146101ab57600080fd5b806306fdde0314610110578063095ea7b31461012e57806318160ddd1461015157806323b872dd14610163575b600080fd5b610118610273565b6040516101259190610963565b60405180910390f35b61014161013c3660046109cd565b610305565b6040519015158152602001610125565b6002545b604051908152602001610125565b6101416101713660046109f7565b61031f565b60405160128152602001610125565b6101416101933660046109cd565b610343565b6101416101a63660046109cd565b610365565b6101be6101b9366004610a33565b6103ca565b005b6101556101ce366004610a4c565b6001600160a01b031660009081526020819052604090205490565b6101be61048d565b6101be6101ff3660046109cd565b6104a1565b6005546040516001600160a01b039091168152602001610125565b6101186104b6565b6101416102353660046109cd565b6104c5565b6101416102483660046109cd565b610521565b61015561025b366004610a6e565b61052f565b6101be61026e366004610a4c565b61055a565b60606003805461028290610aa1565b80601f01602080910402602001604051908101604052809291908181526020018280546102ae90610aa1565b80156102fb5780601f106102d0576101008083540402835291602001916102fb565b820191906000526020600020905b8154815290600101906020018083116102de57829003601f168201915b5050505050905090565b600033610313818585610598565b60019150505b92915050565b60003361032d8582856105aa565b610338858585610610565b506001949350505050565b600033610313818585610356838361052f565b6103609190610adb565b610598565b600061036f61066f565b6001600160a01b0383166103965760405163f3c190e960e01b815260040160405180910390fd5b600082116103b75760405163ae8ba12360e01b815260040160405180910390fd5b6103c1838361069c565b50600192915050565b6103d261066f565b60065460405163543d106760e11b8152600060048201526001600160a01b039091169063a87a20ce90602401600060405180830381600087803b15801561041857600080fd5b505af115801561042c573d6000803e3d6000fd5b5050336000908152602081905260409020549150508161045f5760405163ae8ba12360e01b815260040160405180910390fd5b818110156104805760405163fe9c6abb60e01b815260040160405180910390fd5b610489826106d2565b5050565b61049561066f565b61049f60006106dc565b565b6104ac8233836105aa565b610489828261072e565b60606004805461028290610aa1565b600033816104d3828661052f565b90508381101561051457604051632983c0c360e21b81526001600160a01b038616600482015260248101829052604481018590526064015b60405180910390fd5b6103388286868403610598565b600033610313818585610610565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61056261066f565b6001600160a01b03811661058c57604051631e4fbdf760e01b81526000600482015260240161050b565b610595816106dc565b50565b6105a58383836001610764565b505050565b60006105b6848461052f565b9050600019811461060a57818110156105fb57604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161050b565b61060a84848484036000610764565b50505050565b6001600160a01b03831661063a57604051634b637e8f60e11b81526000600482015260240161050b565b6001600160a01b0382166106645760405163ec442f0560e01b81526000600482015260240161050b565b6105a5838383610839565b6005546001600160a01b0316331461049f5760405163118cdaa760e01b815233600482015260240161050b565b6001600160a01b0382166106c65760405163ec442f0560e01b81526000600482015260240161050b565b61048960008383610839565b610595338261072e565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03821661075857604051634b637e8f60e11b81526000600482015260240161050b565b61048982600083610839565b6001600160a01b03841661078e5760405163e602df0560e01b81526000600482015260240161050b565b6001600160a01b0383166107b857604051634a1406b160e11b81526000600482015260240161050b565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561060a57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161082b91815260200190565b60405180910390a350505050565b6001600160a01b0383166108645780600260008282546108599190610adb565b909155506108d69050565b6001600160a01b038316600090815260208190526040902054818110156108b75760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161050b565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166108f257600280548290039055610911565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161095691815260200190565b60405180910390a3505050565b600060208083528351808285015260005b8181101561099057858101830151858201604001528201610974565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146109c857600080fd5b919050565b600080604083850312156109e057600080fd5b6109e9836109b1565b946020939093013593505050565b600080600060608486031215610a0c57600080fd5b610a15846109b1565b9250610a23602085016109b1565b9150604084013590509250925092565b600060208284031215610a4557600080fd5b5035919050565b600060208284031215610a5e57600080fd5b610a67826109b1565b9392505050565b60008060408385031215610a8157600080fd5b610a8a836109b1565b9150610a98602084016109b1565b90509250929050565b600181811c90821680610ab557607f821691505b602082108103610ad557634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561031957634e487b7160e01b600052601160045260246000fdfea2646970667358221220b631c65c241f2e8732fa56bab1b677c7af2ee49a041182a8b933da5adc88316564736f6c63430008130033",
    "sourceMap": "1123:1676:35:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2428:89:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4647:186;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:38;;1162:22;1144:41;;1132:2;1117:18;4647:186:23;1004:187:38;3498:97:23;3576:12;;3498:97;;;1342:25:38;;;1330:2;1315:18;3498:97:23;1196:177:38;5393:244:23;;;;;;:::i;:::-;;:::i;3356:82::-;;;3429:2;1853:36:38;;1841:2;1826:18;3356:82:23;1711:184:38;6032:234:23;;;;;;:::i;:::-;;:::i;2447:350:35:-;;;;;;:::i;:::-;;:::i;1986:455::-;;;;;;:::i;:::-;;:::i;:::-;;3653:116:23;;;;;;:::i;:::-;-1:-1:-1;;;;;3744:18:23;3718:7;3744:18;;;;;;;;;;;;3653:116;2189:101:19;;;:::i;1021:158:25:-;;;;;;:::i;:::-;;:::i;1534:85:19:-;1606:6;;1534:85;;-1:-1:-1;;;;;1606:6:19;;;2422:51:38;;2410:2;2395:18;1534:85:19;2276:203:38;2630:93:23;;;:::i;6935:493::-;;;;;;:::i;:::-;;:::i;3964:178::-;;;;;;:::i;:::-;;:::i;4200:140::-;;;;;;:::i;:::-;;:::i;2439:215:19:-;;;;;;:::i;:::-;;:::i;2428:89:23:-;2473:13;2505:5;2498:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2428:89;:::o;4647:186::-;4720:4;720:10:27;4774:31:23;720:10:27;4790:7:23;4799:5;4774:8;:31::i;:::-;4822:4;4815:11;;;4647:186;;;;;:::o;5393:244::-;5480:4;720:10:27;5536:37:23;5552:4;720:10:27;5567:5:23;5536:15;:37::i;:::-;5583:26;5593:4;5599:2;5603:5;5583:9;:26::i;:::-;-1:-1:-1;5626:4:23;;5393:244;-1:-1:-1;;;;5393:244:23:o;6032:234::-;6120:4;720:10:27;6174:64:23;720:10:27;6190:7:23;6227:10;6199:25;720:10:27;6190:7:23;6199:9;:25::i;:::-;:38;;;;:::i;:::-;6174:8;:64::i;2447:350:35:-;2519:4;1427:13:19;:11;:13::i;:::-;-1:-1:-1;;;;;2539:17:35;::::1;2535:96;;2579:41;;-1:-1:-1::0;;;2579:41:35::1;;;;;;;;;;;2535:96;2655:1;2644:7;:12;2640:101;;2679:51;;-1:-1:-1::0;;;2679:51:35::1;;;;;;;;;;;2640:101;2750:19;2756:3;2761:7;2750:5;:19::i;:::-;-1:-1:-1::0;2786:4:35::1;2447:350:::0;;;;:::o;1986:455::-;1427:13:19;:11;:13::i;:::-;2100:14:35::1;::::0;2083:48:::1;::::0;-1:-1:-1;;;2083:48:35;;2100:14:::1;2083:48;::::0;::::1;1342:25:38::0;-1:-1:-1;;;;;2100:14:35;;::::1;::::0;2083:45:::1;::::0;1315:18:38;;2083:48:35::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;2169:10:35::1;2141:15;3744:18:23::0;;;;;;;;;;;;-1:-1:-1;;2194:12:35;2190:101:::1;;2229:51;;-1:-1:-1::0;;;2229:51:35::1;;;;;;;;;;;2190:101;2314:7;2304;:17;2300:106;;;2344:51;;-1:-1:-1::0;;;2344:51:35::1;;;;;;;;;;;2300:106;2415:19;2426:7;2415:10;:19::i;:::-;2043:398;1986:455:::0;:::o;2189:101:19:-;1427:13;:11;:13::i;:::-;2253:30:::1;2280:1;2253:18;:30::i;:::-;2189:101::o:0;1021:158:25:-;1096:45;1112:7;720:10:27;1135:5:25;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;2630:93:23:-;2677:13;2709:7;2702:14;;;;;:::i;6935:493::-;7030:4;720:10:27;7030:4:23;7111:25;720:10:27;7128:7:23;7111:9;:25::i;:::-;7084:52;;7169:17;7150:16;:36;7146:148;;;7209:74;;-1:-1:-1;;;7209:74:23;;-1:-1:-1;;;;;3770:32:38;;7209:74:23;;;3752:51:38;3819:18;;;3812:34;;;3862:18;;;3855:34;;;3725:18;;7209:74:23;;;;;;;;7146:148;7327:62;7336:5;7343:7;7371:17;7352:16;:36;7327:8;:62::i;3964:178::-;4033:4;720:10:27;4087:27:23;720:10:27;4104:2:23;4108:5;4087:9;:27::i;4200:140::-;-1:-1:-1;;;;;4306:18:23;;;4280:7;4306:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4200:140::o;2439:215:19:-;1427:13;:11;:13::i;:::-;-1:-1:-1;;;;;2523:22:19;::::1;2519:91;;2568:31;::::0;-1:-1:-1;;;2568:31:19;;2596:1:::1;2568:31;::::0;::::1;2422:51:38::0;2395:18;;2568:31:19::1;2276:203:38::0;2519:91:19::1;2619:28;2638:8;2619:18;:28::i;:::-;2439:215:::0;:::o;11020:136:23:-;11112:37;11121:5;11128:7;11137:5;11144:4;11112:8;:37::i;:::-;11020:136;;;:::o;12715:477::-;12814:24;12841:25;12851:5;12858:7;12841:9;:25::i;:::-;12814:52;;-1:-1:-1;;12880:16:23;:37;12876:310;;12956:5;12937:16;:24;12933:130;;;12988:60;;-1:-1:-1;;;12988:60:23;;-1:-1:-1;;;;;3770:32:38;;12988:60:23;;;3752:51:38;3819:18;;;3812:34;;;3862:18;;;3855:34;;;3725:18;;12988:60:23;3550:345:38;12933:130:23;13104:57;13113:5;13120:7;13148:5;13129:16;:24;13155:5;13104:8;:57::i;:::-;12804:388;12715:477;;;:::o;7801:300::-;-1:-1:-1;;;;;7884:18:23;;7880:86;;7925:30;;-1:-1:-1;;;7925:30:23;;7952:1;7925:30;;;2422:51:38;2395:18;;7925:30:23;2276:203:38;7880:86:23;-1:-1:-1;;;;;7979:16:23;;7975:86;;8018:32;;-1:-1:-1;;;8018:32:23;;8047:1;8018:32;;;2422:51:38;2395:18;;8018:32:23;2276:203:38;7975:86:23;8070:24;8078:4;8084:2;8088:5;8070:7;:24::i;1692:162:19:-;1606:6;;-1:-1:-1;;;;;1606:6:19;720:10:27;1751:23:19;1747:101;;1797:40;;-1:-1:-1;;;1797:40:19;;720:10:27;1797:40:19;;;2422:51:38;2395:18;;1797:40:19;2276:203:38;9859:208:23;-1:-1:-1;;;;;9929:21:23;;9925:91;;9973:32;;-1:-1:-1;;;9973:32:23;;10002:1;9973:32;;;2422:51:38;2395:18;;9973:32:23;2276:203:38;9925:91:23;10025:35;10041:1;10045:7;10054:5;10025:7;:35::i;618:87:25:-;672:26;720:10:27;692:5:25;672;:26::i;2808:187:19:-;2900:6;;;-1:-1:-1;;;;;2916:17:19;;;-1:-1:-1;;;;;;2916:17:19;;;;;;;2948:40;;2900:6;;;2916:17;2900:6;;2948:40;;2881:16;;2948:40;2871:124;2808:187;:::o;10392:206:23:-;-1:-1:-1;;;;;10462:21:23;;10458:89;;10506:30;;-1:-1:-1;;;10506:30:23;;10533:1;10506:30;;;2422:51:38;2395:18;;10506:30:23;2276:203:38;10458:89:23;10556:35;10564:7;10581:1;10585:5;10556:7;:35::i;12004:432::-;-1:-1:-1;;;;;12116:19:23;;12112:89;;12158:32;;-1:-1:-1;;;12158:32:23;;12187:1;12158:32;;;2422:51:38;2395:18;;12158:32:23;2276:203:38;12112:89:23;-1:-1:-1;;;;;12214:21:23;;12210:90;;12258:31;;-1:-1:-1;;;12258:31:23;;12286:1;12258:31;;;2422:51:38;2395:18;;12258:31:23;2276:203:38;12210:90:23;-1:-1:-1;;;;;12309:18:23;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;12354:76;;;;12404:7;-1:-1:-1;;;;;12388:31:23;12397:5;-1:-1:-1;;;;;12388:31:23;;12413:5;12388:31;;;;1342:25:38;;1330:2;1315:18;;1196:177;12388:31:23;;;;;;;;12004:432;;;;:::o;8409:1107::-;-1:-1:-1;;;;;8498:18:23;;8494:540;;8650:5;8634:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;8494:540:23;;-1:-1:-1;8494:540:23;;-1:-1:-1;;;;;8708:15:23;;8686:19;8708:15;;;;;;;;;;;8741:19;;;8737:115;;;8787:50;;-1:-1:-1;;;8787:50:23;;-1:-1:-1;;;;;3770:32:38;;8787:50:23;;;3752:51:38;3819:18;;;3812:34;;;3862:18;;;3855:34;;;3725:18;;8787:50:23;3550:345:38;8737:115:23;-1:-1:-1;;;;;8972:15:23;;:9;:15;;;;;;;;;;8990:19;;;;8972:37;;8494:540;-1:-1:-1;;;;;9048:16:23;;9044:425;;9211:12;:21;;;;;;;9044:425;;;-1:-1:-1;;;;;9422:13:23;;:9;:13;;;;;;;;;;:22;;;;;;9044:425;9499:2;-1:-1:-1;;;;;9484:25:23;9493:4;-1:-1:-1;;;;;9484:25:23;;9503:5;9484:25;;;;1342::38;;1330:2;1315:18;;1196:177;9484:25:23;;;;;;;;8409:1107;;;:::o;14:548:38:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:38;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:38:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:180::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;-1:-1:-1;2051:23:38;;1900:180;-1:-1:-1;1900:180:38:o;2085:186::-;2144:6;2197:2;2185:9;2176:7;2172:23;2168:32;2165:52;;;2213:1;2210;2203:12;2165:52;2236:29;2255:9;2236:29;:::i;:::-;2226:39;2085:186;-1:-1:-1;;;2085:186:38:o;2484:260::-;2552:6;2560;2613:2;2601:9;2592:7;2588:23;2584:32;2581:52;;;2629:1;2626;2619:12;2581:52;2652:29;2671:9;2652:29;:::i;:::-;2642:39;;2700:38;2734:2;2723:9;2719:18;2700:38;:::i;:::-;2690:48;;2484:260;;;;;:::o;2749:380::-;2828:1;2824:12;;;;2871;;;2892:61;;2946:4;2938:6;2934:17;2924:27;;2892:61;2999:2;2991:6;2988:14;2968:18;2965:38;2962:161;;3045:10;3040:3;3036:20;3033:1;3026:31;3080:4;3077:1;3070:15;3108:4;3105:1;3098:15;2962:161;;2749:380;;;:::o;3134:222::-;3199:9;;;3220:10;;;3217:133;;;3272:10;3267:3;3263:20;3260:1;3253:31;3307:4;3304:1;3297:15;3335:4;3332:1;3325:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "burnFrom(address,uint256)": "79cc6790",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "increaseAllowance(address,uint256)": "39509351",
    "mint(address,uint256)": "40c10f19",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_mockAggregator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"DecentralizedStableCoin__AmountMustBeMoreThanZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DecentralizedStableCoin__BurnAmountExceedsBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DecentralizedStableCoin__NotZeroAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"ERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `requestedDecrease`. NOTE: Although this function is designed to avoid double spending with {approval}, it can still be frontrunned, preventing any attempt of allowance reduction.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/mocks/MockMoreDebtDSC.sol\":\"MockMoreDebtDSC\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0x35b70c1f89b9bd6291182fe550499c6ac42a410c1eb19f0668f87147f339b0a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7129da5d478d04c7b3ad121f0f84310b12a6def55ba906caa3775db676aceaa\",\"dweb:/ipfs/QmPpVwyjxnjFRS4CsHMr3STwBohAxLUwxgtu3gG93m7ybB\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x65f8f2e155906c577234df623982489c643261b29aa629a1506a480d85925473\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5de395c5805ddefd412e760200c76572e819a4e037163b5242de960aa42fc58f\",\"dweb:/ipfs/QmefoWnSj4uEGmuoT7zWedHGQGSMeZnMkWVX253tvRM9VK\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa6e9993c14f239cfb1fd4ca225f702136937ac82564321b71904165439294fa6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7422f196280085c3c87a6762c52c19e0ff8f05ecd353f003d31dc8f6d7a47b40\",\"dweb:/ipfs/QmaeiCttNWvaBvx1Xm9Rpqi9PjWqQHCjja4vwxbfjh7AhW\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x446f5eba28390de7608b93345376c1144758ab48783c26df8aa14b6f2a7987bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://701c9ebd54d50d7508efe7eb253cd50d4fc9fdbd161db886ae889d0e3487242e\",\"dweb:/ipfs/QmYF5uh258PwhgxYMZULiyG8b8RN4SBAbU7igQGyfe9QnB\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x4dffdbf042789b8741c8b910d796a62a2949808bdd79001a794f05a3d345161b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4311a1011f68f843de49f853121ee63173404a5086d15a6f21cdb75b14b3dae2\",\"dweb:/ipfs/QmZA2s76KLgUmHnRUgnrohaGwizJTfqNY2bkByWFjY68tL\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x93143932d71fb23e868494499eaa4112a75a60c9d472c3ebbe9f64b5d2900195\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aaeb077f10f0a5255645914bfe7f3c7784e4e62637fcf19e5553ff59708c38fd\",\"dweb:/ipfs/QmViQfyQ5fu1yU4vt1n76tQRRwrGxx5kdQTYjCzSn5UNpD\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x639f180f9bedd48998c68f1bf4f8d01b37a4573bc496acb04a55308c6de0045c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ff2313c66e4e14d167aae923b38509ec68dcaa281d2314f45b527139d33d4af\",\"dweb:/ipfs/QmU7aik96EmKeG8feBbQZ8BufngtYB6guGTkZoX5umP73i\"]},\"test/mocks/MockMoreDebtDSC.sol\":{\"keccak256\":\"0xfc9387596a56461eefd2f01d3f450888a169c79e6cf91eaee17207787b644dcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25a7e8124465dc4b96e55d900dfc8578fd6833529682e75b70fc23a0c22dd47a\",\"dweb:/ipfs/QmXKvu8vkbiqnRCgYAKqKY39evGtT1YGpAkmdmGxMyg3xc\"]},\"test/mocks/MockV3Aggregator.sol\":{\"keccak256\":\"0xfa3065da5c898c3627d1bd545e49f02c6f64cf9fb22b80291735372795a83095\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa40bb78bdf3b4eba910fff70ecc21dc0921affc637b09d0814a1401e7e906f6\",\"dweb:/ipfs/QmWewaGc7Ax2vdAf4dpXcEpM4j6SypTdjSETUQHgbf54g7\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_mockAggregator",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DecentralizedStableCoin__AmountMustBeMoreThanZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DecentralizedStableCoin__BurnAmountExceedsBalance"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DecentralizedStableCoin__NotZeroAddress"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "currentAllowance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "requestedDecrease",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC20FailedDecreaseAllowance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "allowance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC20InsufficientAllowance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC20InsufficientBalance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "approver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidApprover"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidReceiver"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidSender"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidSpender"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableInvalidOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableUnauthorizedAccount"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burnFrom"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "requestedDecrease",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "burnFrom(address,uint256)": {
            "details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `requestedDecrease`. NOTE: Although this function is designed to avoid double spending with {approval}, it can still be frontrunned, preventing any attempt of allowance reduction."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/mocks/MockMoreDebtDSC.sol": "MockMoreDebtDSC"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0x35b70c1f89b9bd6291182fe550499c6ac42a410c1eb19f0668f87147f339b0a0",
        "urls": [
          "bzz-raw://d7129da5d478d04c7b3ad121f0f84310b12a6def55ba906caa3775db676aceaa",
          "dweb:/ipfs/QmPpVwyjxnjFRS4CsHMr3STwBohAxLUwxgtu3gG93m7ybB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x65f8f2e155906c577234df623982489c643261b29aa629a1506a480d85925473",
        "urls": [
          "bzz-raw://5de395c5805ddefd412e760200c76572e819a4e037163b5242de960aa42fc58f",
          "dweb:/ipfs/QmefoWnSj4uEGmuoT7zWedHGQGSMeZnMkWVX253tvRM9VK"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa6e9993c14f239cfb1fd4ca225f702136937ac82564321b71904165439294fa6",
        "urls": [
          "bzz-raw://7422f196280085c3c87a6762c52c19e0ff8f05ecd353f003d31dc8f6d7a47b40",
          "dweb:/ipfs/QmaeiCttNWvaBvx1Xm9Rpqi9PjWqQHCjja4vwxbfjh7AhW"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x446f5eba28390de7608b93345376c1144758ab48783c26df8aa14b6f2a7987bc",
        "urls": [
          "bzz-raw://701c9ebd54d50d7508efe7eb253cd50d4fc9fdbd161db886ae889d0e3487242e",
          "dweb:/ipfs/QmYF5uh258PwhgxYMZULiyG8b8RN4SBAbU7igQGyfe9QnB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "keccak256": "0x4dffdbf042789b8741c8b910d796a62a2949808bdd79001a794f05a3d345161b",
        "urls": [
          "bzz-raw://4311a1011f68f843de49f853121ee63173404a5086d15a6f21cdb75b14b3dae2",
          "dweb:/ipfs/QmZA2s76KLgUmHnRUgnrohaGwizJTfqNY2bkByWFjY68tL"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x93143932d71fb23e868494499eaa4112a75a60c9d472c3ebbe9f64b5d2900195",
        "urls": [
          "bzz-raw://aaeb077f10f0a5255645914bfe7f3c7784e4e62637fcf19e5553ff59708c38fd",
          "dweb:/ipfs/QmViQfyQ5fu1yU4vt1n76tQRRwrGxx5kdQTYjCzSn5UNpD"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x639f180f9bedd48998c68f1bf4f8d01b37a4573bc496acb04a55308c6de0045c",
        "urls": [
          "bzz-raw://4ff2313c66e4e14d167aae923b38509ec68dcaa281d2314f45b527139d33d4af",
          "dweb:/ipfs/QmU7aik96EmKeG8feBbQZ8BufngtYB6guGTkZoX5umP73i"
        ],
        "license": "MIT"
      },
      "test/mocks/MockMoreDebtDSC.sol": {
        "keccak256": "0xfc9387596a56461eefd2f01d3f450888a169c79e6cf91eaee17207787b644dcb",
        "urls": [
          "bzz-raw://25a7e8124465dc4b96e55d900dfc8578fd6833529682e75b70fc23a0c22dd47a",
          "dweb:/ipfs/QmXKvu8vkbiqnRCgYAKqKY39evGtT1YGpAkmdmGxMyg3xc"
        ],
        "license": "MIT"
      },
      "test/mocks/MockV3Aggregator.sol": {
        "keccak256": "0xfa3065da5c898c3627d1bd545e49f02c6f64cf9fb22b80291735372795a83095",
        "urls": [
          "bzz-raw://fa40bb78bdf3b4eba910fff70ecc21dc0921affc637b09d0814a1401e7e906f6",
          "dweb:/ipfs/QmWewaGc7Ax2vdAf4dpXcEpM4j6SypTdjSETUQHgbf54g7"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/mocks/MockMoreDebtDSC.sol",
    "id": 32197,
    "exportedSymbols": {
      "ERC20": [
        30403
      ],
      "ERC20Burnable": [
        30527
      ],
      "MockMoreDebtDSC": [
        32196
      ],
      "MockV3Aggregator": [
        32389
      ],
      "Ownable": [
        29545
      ]
    },
    "nodeType": "SourceUnit",
    "src": "489:2310:35",
    "nodes": [
      {
        "id": 32075,
        "nodeType": "PragmaDirective",
        "src": "489:23:35",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 32078,
        "nodeType": "ImportDirective",
        "src": "514:102:35",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32197,
        "sourceUnit": 30528,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32076,
              "name": "ERC20Burnable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30527,
              "src": "522:13:35",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 32077,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30403,
              "src": "537:5:35",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32080,
        "nodeType": "ImportDirective",
        "src": "617:67:35",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32197,
        "sourceUnit": 29546,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32079,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29545,
              "src": "625:7:35",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32082,
        "nodeType": "ImportDirective",
        "src": "685:56:35",
        "nodes": [],
        "absolutePath": "test/mocks/MockV3Aggregator.sol",
        "file": "./MockV3Aggregator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32197,
        "sourceUnit": 32390,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32081,
              "name": "MockV3Aggregator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32389,
              "src": "693:16:35",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32196,
        "nodeType": "ContractDefinition",
        "src": "1123:1676:35",
        "nodes": [
          {
            "id": 32088,
            "nodeType": "ErrorDefinition",
            "src": "1180:58:35",
            "nodes": [],
            "errorSelector": "ae8ba123",
            "name": "DecentralizedStableCoin__AmountMustBeMoreThanZero",
            "nameLocation": "1186:49:35",
            "parameters": {
              "id": 32087,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1235:2:35"
            }
          },
          {
            "id": 32090,
            "nodeType": "ErrorDefinition",
            "src": "1243:58:35",
            "nodes": [],
            "errorSelector": "fe9c6abb",
            "name": "DecentralizedStableCoin__BurnAmountExceedsBalance",
            "nameLocation": "1249:49:35",
            "parameters": {
              "id": 32089,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1298:2:35"
            }
          },
          {
            "id": 32092,
            "nodeType": "ErrorDefinition",
            "src": "1306:48:35",
            "nodes": [],
            "errorSelector": "f3c190e9",
            "name": "DecentralizedStableCoin__NotZeroAddress",
            "nameLocation": "1312:39:35",
            "parameters": {
              "id": 32091,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1351:2:35"
            }
          },
          {
            "id": 32094,
            "nodeType": "VariableDeclaration",
            "src": "1360:22:35",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "mockAggregator",
            "nameLocation": "1368:14:35",
            "scope": 32196,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 32093,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1360:7:35",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 32112,
            "nodeType": "FunctionDefinition",
            "src": "1832:148:35",
            "nodes": [],
            "body": {
              "id": 32111,
              "nodeType": "Block",
              "src": "1931:49:35",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 32109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32107,
                      "name": "mockAggregator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32094,
                      "src": "1941:14:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 32108,
                      "name": "_mockAggregator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32096,
                      "src": "1958:15:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1941:32:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 32110,
                  "nodeType": "ExpressionStatement",
                  "src": "1941:32:35"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "446563656e7472616c697a6564537461626c65436f696e",
                    "id": 32099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1875:25:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_4c892af6da595460367c882173cb78937ab02fe25724e2f1d5f68069c7732cf8",
                      "typeString": "literal_string \"DecentralizedStableCoin\""
                    },
                    "value": "DecentralizedStableCoin"
                  },
                  {
                    "hexValue": "445343",
                    "id": 32100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1902:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_43f14b70594ce2d8c53eb306c1e4efdb6729cfe75bf89574fb2d9f9db7c097df",
                      "typeString": "literal_string \"DSC\""
                    },
                    "value": "DSC"
                  }
                ],
                "id": 32101,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 32098,
                  "name": "ERC20",
                  "nameLocations": [
                    "1869:5:35"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30403,
                  "src": "1869:5:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "1869:39:35"
              },
              {
                "arguments": [
                  {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 32103,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30565,
                      "src": "1917:10:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 32104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1917:12:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 32105,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 32102,
                  "name": "Ownable",
                  "nameLocations": [
                    "1909:7:35"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29545,
                  "src": "1909:7:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "1909:21:35"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 32097,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32096,
                  "mutability": "mutable",
                  "name": "_mockAggregator",
                  "nameLocation": "1852:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 32112,
                  "src": "1844:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32095,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1844:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1843:25:35"
            },
            "returnParameters": {
              "id": 32106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1931:0:35"
            },
            "scope": 32196,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32157,
            "nodeType": "FunctionDefinition",
            "src": "1986:455:35",
            "nodes": [],
            "body": {
              "id": 32156,
              "nodeType": "Block",
              "src": "2043:398:35",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 32124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2129:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 32121,
                            "name": "mockAggregator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32094,
                            "src": "2100:14:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 32120,
                          "name": "MockV3Aggregator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32389,
                          "src": "2083:16:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_MockV3Aggregator_$32389_$",
                            "typeString": "type(contract MockV3Aggregator)"
                          }
                        },
                        "id": 32122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2083:32:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockV3Aggregator_$32389",
                          "typeString": "contract MockV3Aggregator"
                        }
                      },
                      "id": 32123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2116:12:35",
                      "memberName": "updateAnswer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32276,
                      "src": "2083:45:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_int256_$returns$__$",
                        "typeString": "function (int256) external"
                      }
                    },
                    "id": 32125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2083:48:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32126,
                  "nodeType": "ExpressionStatement",
                  "src": "2083:48:35"
                },
                {
                  "assignments": [
                    32128
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32128,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "2149:7:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 32156,
                      "src": "2141:15:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 32127,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2141:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32133,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32130,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2169:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 32131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2173:6:35",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2169:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 32129,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29915,
                      "src": "2159:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 32132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2159:21:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2141:39:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 32136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 32134,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32114,
                      "src": "2194:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 32135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2205:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2194:12:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 32141,
                  "nodeType": "IfStatement",
                  "src": "2190:101:35",
                  "trueBody": {
                    "id": 32140,
                    "nodeType": "Block",
                    "src": "2208:83:35",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 32137,
                            "name": "DecentralizedStableCoin__AmountMustBeMoreThanZero",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32088,
                            "src": "2229:49:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 32138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2229:51:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32139,
                        "nodeType": "RevertStatement",
                        "src": "2222:58:35"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 32144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 32142,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32128,
                      "src": "2304:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 32143,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32114,
                      "src": "2314:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2304:17:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 32149,
                  "nodeType": "IfStatement",
                  "src": "2300:106:35",
                  "trueBody": {
                    "id": 32148,
                    "nodeType": "Block",
                    "src": "2323:83:35",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 32145,
                            "name": "DecentralizedStableCoin__BurnAmountExceedsBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32090,
                            "src": "2344:49:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 32146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2344:51:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32147,
                        "nodeType": "RevertStatement",
                        "src": "2337:58:35"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32153,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32114,
                        "src": "2426:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 32150,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "2415:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_MockMoreDebtDSC_$32196_$",
                          "typeString": "type(contract super MockMoreDebtDSC)"
                        }
                      },
                      "id": 32152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2421:4:35",
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30505,
                      "src": "2415:10:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 32154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2415:19:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32155,
                  "nodeType": "ExpressionStatement",
                  "src": "2415:19:35"
                }
              ]
            },
            "baseFunctions": [
              30505
            ],
            "functionSelector": "42966c68",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32118,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32117,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2033:9:35"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29456,
                  "src": "2033:9:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "2033:9:35"
              }
            ],
            "name": "burn",
            "nameLocation": "1995:4:35",
            "overrides": {
              "id": 32116,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2024:8:35"
            },
            "parameters": {
              "id": 32115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32114,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2008:7:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 32157,
                  "src": "2000:15:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2000:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1999:17:35"
            },
            "returnParameters": {
              "id": 32119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2043:0:35"
            },
            "scope": 32196,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32195,
            "nodeType": "FunctionDefinition",
            "src": "2447:350:35",
            "nodes": [],
            "body": {
              "id": 32194,
              "nodeType": "Block",
              "src": "2525:272:35",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 32173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 32168,
                      "name": "_to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32159,
                      "src": "2539:3:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 32171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2554:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 32170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2546:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 32169,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2546:7:35",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 32172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2546:10:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2539:17:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 32178,
                  "nodeType": "IfStatement",
                  "src": "2535:96:35",
                  "trueBody": {
                    "id": 32177,
                    "nodeType": "Block",
                    "src": "2558:73:35",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 32174,
                            "name": "DecentralizedStableCoin__NotZeroAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32092,
                            "src": "2579:39:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 32175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2579:41:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32176,
                        "nodeType": "RevertStatement",
                        "src": "2572:48:35"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 32181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 32179,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32161,
                      "src": "2644:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 32180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2655:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2644:12:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 32186,
                  "nodeType": "IfStatement",
                  "src": "2640:101:35",
                  "trueBody": {
                    "id": 32185,
                    "nodeType": "Block",
                    "src": "2658:83:35",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 32182,
                            "name": "DecentralizedStableCoin__AmountMustBeMoreThanZero",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32088,
                            "src": "2679:49:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 32183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2679:51:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32184,
                        "nodeType": "RevertStatement",
                        "src": "2672:58:35"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32188,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32159,
                        "src": "2756:3:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 32189,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32161,
                        "src": "2761:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 32187,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30243,
                      "src": "2750:5:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 32190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2750:19:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32191,
                  "nodeType": "ExpressionStatement",
                  "src": "2750:19:35"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 32192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2786:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 32167,
                  "id": 32193,
                  "nodeType": "Return",
                  "src": "2779:11:35"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32164,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32163,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2500:9:35"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29456,
                  "src": "2500:9:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "2500:9:35"
              }
            ],
            "name": "mint",
            "nameLocation": "2456:4:35",
            "parameters": {
              "id": 32162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32159,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "2469:3:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 32195,
                  "src": "2461:11:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32158,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2461:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32161,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2482:7:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 32195,
                  "src": "2474:15:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32160,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2474:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2460:30:35"
            },
            "returnParameters": {
              "id": 32167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32166,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 32195,
                  "src": "2519:4:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 32165,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2519:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2518:6:35"
            },
            "scope": 32196,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 32083,
              "name": "ERC20Burnable",
              "nameLocations": [
                "1151:13:35"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30527,
              "src": "1151:13:35"
            },
            "id": 32084,
            "nodeType": "InheritanceSpecifier",
            "src": "1151:13:35"
          },
          {
            "baseName": {
              "id": 32085,
              "name": "Ownable",
              "nameLocations": [
                "1166:7:35"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29545,
              "src": "1166:7:35"
            },
            "id": 32086,
            "nodeType": "InheritanceSpecifier",
            "src": "1166:7:35"
          }
        ],
        "canonicalName": "MockMoreDebtDSC",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          32196,
          29545,
          30527,
          30403,
          29587,
          30553,
          30481,
          30575
        ],
        "name": "MockMoreDebtDSC",
        "nameLocation": "1132:15:35",
        "scope": 32197,
        "usedErrors": [
          29426,
          29431,
          29557,
          29562,
          29567,
          29576,
          29581,
          29586,
          29849,
          32088,
          32090,
          32092
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 35
}