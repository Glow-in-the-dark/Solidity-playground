{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "DecentralizedStableCoin__BurnAmountExceedsBalance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DecentralizedStableCoin__MustBeMoreThanZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DecentralizedStableCoin__NotZeroAddress",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "currentAllowance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "requestedDecrease",
          "type": "uint256"
        }
      ],
      "name": "ERC20FailedDecreaseAllowance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientAllowance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSpender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "requestedDecrease",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b50336040518060400160405280601781526020017f446563656e7472616c697a6564537461626c65436f696e0000000000000000008152506040518060400160405280600381526020016244534360e81b815250816003908162000076919062000197565b50600462000085828262000197565b5050506200009981620000a060201b60201c565b5062000263565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200011d57607f821691505b6020821081036200013e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200019257600081815260208120601f850160051c810160208610156200016d5750805b601f850160051c820191505b818110156200018e5782815560010162000179565b5050505b505050565b81516001600160401b03811115620001b357620001b3620000f2565b620001cb81620001c4845462000108565b8462000144565b602080601f831160018114620002035760008415620001ea5750858301515b600019600386901b1c1916600185901b1785556200018e565b600085815260208120601f198616915b82811015620002345788860151825594840194600190910190840162000213565b5085821015620002535787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610ad380620002736000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806370a08231116100a257806395d89b411161007157806395d89b411461021f578063a457c2d714610227578063a9059cbb1461023a578063dd62ed3e1461024d578063f2fde38b1461026057600080fd5b806370a08231146101c0578063715018a6146101e957806379cc6790146101f15780638da5cb5b1461020457600080fd5b8063313ce567116100de578063313ce56714610176578063395093511461018557806340c10f191461019857806342966c68146101ab57600080fd5b806306fdde0314610110578063095ea7b31461012e57806318160ddd1461015157806323b872dd14610163575b600080fd5b610118610273565b6040516101259190610904565b60405180910390f35b61014161013c36600461096e565b610305565b6040519015158152602001610125565b6002545b604051908152602001610125565b610141610171366004610998565b61031f565b60405160128152602001610125565b61014161019336600461096e565b610343565b6101416101a636600461096e565b610365565b6101be6101b93660046109d4565b6103ca565b005b6101556101ce3660046109ed565b6001600160a01b031660009081526020819052604090205490565b6101be61042e565b6101be6101ff36600461096e565b610442565b6005546040516001600160a01b039091168152602001610125565b610118610457565b61014161023536600461096e565b610466565b61014161024836600461096e565b6104c2565b61015561025b366004610a0f565b6104d0565b6101be61026e3660046109ed565b6104fb565b60606003805461028290610a42565b80601f01602080910402602001604051908101604052809291908181526020018280546102ae90610a42565b80156102fb5780601f106102d0576101008083540402835291602001916102fb565b820191906000526020600020905b8154815290600101906020018083116102de57829003601f168201915b5050505050905090565b600033610313818585610539565b60019150505b92915050565b60003361032d85828561054b565b6103388585856105b1565b506001949350505050565b60003361031381858561035683836104d0565b6103609190610a7c565b610539565b600061036f610610565b6001600160a01b0383166103965760405163f3c190e960e01b815260040160405180910390fd5b600082116103b7576040516335624ed160e11b815260040160405180910390fd5b6103c1838361063d565b50600192915050565b6103d2610610565b3360009081526020819052604090205481610400576040516335624ed160e11b815260040160405180910390fd5b818110156104215760405163fe9c6abb60e01b815260040160405180910390fd5b61042a82610673565b5050565b610436610610565b610440600061067d565b565b61044d82338361054b565b61042a82826106cf565b60606004805461028290610a42565b6000338161047482866104d0565b9050838110156104b557604051632983c0c360e21b81526001600160a01b038616600482015260248101829052604481018590526064015b60405180910390fd5b6103388286868403610539565b6000336103138185856105b1565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610503610610565b6001600160a01b03811661052d57604051631e4fbdf760e01b8152600060048201526024016104ac565b6105368161067d565b50565b6105468383836001610705565b505050565b600061055784846104d0565b905060001981146105ab578181101561059c57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016104ac565b6105ab84848484036000610705565b50505050565b6001600160a01b0383166105db57604051634b637e8f60e11b8152600060048201526024016104ac565b6001600160a01b0382166106055760405163ec442f0560e01b8152600060048201526024016104ac565b6105468383836107da565b6005546001600160a01b031633146104405760405163118cdaa760e01b81523360048201526024016104ac565b6001600160a01b0382166106675760405163ec442f0560e01b8152600060048201526024016104ac565b61042a600083836107da565b61053633826106cf565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166106f957604051634b637e8f60e11b8152600060048201526024016104ac565b61042a826000836107da565b6001600160a01b03841661072f5760405163e602df0560e01b8152600060048201526024016104ac565b6001600160a01b03831661075957604051634a1406b160e11b8152600060048201526024016104ac565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156105ab57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516107cc91815260200190565b60405180910390a350505050565b6001600160a01b0383166108055780600260008282546107fa9190610a7c565b909155506108779050565b6001600160a01b038316600090815260208190526040902054818110156108585760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016104ac565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610893576002805482900390556108b2565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516108f791815260200190565b60405180910390a3505050565b600060208083528351808285015260005b8181101561093157858101830151858201604001528201610915565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461096957600080fd5b919050565b6000806040838503121561098157600080fd5b61098a83610952565b946020939093013593505050565b6000806000606084860312156109ad57600080fd5b6109b684610952565b92506109c460208501610952565b9150604084013590509250925092565b6000602082840312156109e657600080fd5b5035919050565b6000602082840312156109ff57600080fd5b610a0882610952565b9392505050565b60008060408385031215610a2257600080fd5b610a2b83610952565b9150610a3960208401610952565b90509250929050565b600181811c90821680610a5657607f821691505b602082108103610a7657634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561031957634e487b7160e01b600052601160045260246000fdfea2646970667358221220628f9e2eb986df63d7fb4ab99936b8bfe8f725427eaffba971d872ea9e6e666864736f6c63430008130033",
    "sourceMap": "1012:1229:10:-:0;;;1251:84;;;;;;;;;-1:-1:-1;720:10:8;2250:113:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2250:113:4;;;2324:5;2316;:13;;;;;;:::i;:::-;-1:-1:-1;2339:7:4;:17;2349:7;2339;:17;:::i;:::-;;2250:113;;1269:32:1;1288:12;1269:18;;;:32;;:::i;:::-;1225:83;1012:1229:10;;2808:187:1;2900:6;;;-1:-1:-1;;;;;2916:17:1;;;-1:-1:-1;;;;;;2916:17:1;;;;;;;2948:40;;2900:6;;;2916:17;2900:6;;2948:40;;2881:16;;2948:40;2871:124;2808:187;:::o;14:127:11:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:11;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:11;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:11;;;2580:26;2531:89;-1:-1:-1;;1335:1:11;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:11;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:11;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:11;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:11:o;:::-;1012:1229:10;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061010b5760003560e01c806370a08231116100a257806395d89b411161007157806395d89b411461021f578063a457c2d714610227578063a9059cbb1461023a578063dd62ed3e1461024d578063f2fde38b1461026057600080fd5b806370a08231146101c0578063715018a6146101e957806379cc6790146101f15780638da5cb5b1461020457600080fd5b8063313ce567116100de578063313ce56714610176578063395093511461018557806340c10f191461019857806342966c68146101ab57600080fd5b806306fdde0314610110578063095ea7b31461012e57806318160ddd1461015157806323b872dd14610163575b600080fd5b610118610273565b6040516101259190610904565b60405180910390f35b61014161013c36600461096e565b610305565b6040519015158152602001610125565b6002545b604051908152602001610125565b610141610171366004610998565b61031f565b60405160128152602001610125565b61014161019336600461096e565b610343565b6101416101a636600461096e565b610365565b6101be6101b93660046109d4565b6103ca565b005b6101556101ce3660046109ed565b6001600160a01b031660009081526020819052604090205490565b6101be61042e565b6101be6101ff36600461096e565b610442565b6005546040516001600160a01b039091168152602001610125565b610118610457565b61014161023536600461096e565b610466565b61014161024836600461096e565b6104c2565b61015561025b366004610a0f565b6104d0565b6101be61026e3660046109ed565b6104fb565b60606003805461028290610a42565b80601f01602080910402602001604051908101604052809291908181526020018280546102ae90610a42565b80156102fb5780601f106102d0576101008083540402835291602001916102fb565b820191906000526020600020905b8154815290600101906020018083116102de57829003601f168201915b5050505050905090565b600033610313818585610539565b60019150505b92915050565b60003361032d85828561054b565b6103388585856105b1565b506001949350505050565b60003361031381858561035683836104d0565b6103609190610a7c565b610539565b600061036f610610565b6001600160a01b0383166103965760405163f3c190e960e01b815260040160405180910390fd5b600082116103b7576040516335624ed160e11b815260040160405180910390fd5b6103c1838361063d565b50600192915050565b6103d2610610565b3360009081526020819052604090205481610400576040516335624ed160e11b815260040160405180910390fd5b818110156104215760405163fe9c6abb60e01b815260040160405180910390fd5b61042a82610673565b5050565b610436610610565b610440600061067d565b565b61044d82338361054b565b61042a82826106cf565b60606004805461028290610a42565b6000338161047482866104d0565b9050838110156104b557604051632983c0c360e21b81526001600160a01b038616600482015260248101829052604481018590526064015b60405180910390fd5b6103388286868403610539565b6000336103138185856105b1565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610503610610565b6001600160a01b03811661052d57604051631e4fbdf760e01b8152600060048201526024016104ac565b6105368161067d565b50565b6105468383836001610705565b505050565b600061055784846104d0565b905060001981146105ab578181101561059c57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016104ac565b6105ab84848484036000610705565b50505050565b6001600160a01b0383166105db57604051634b637e8f60e11b8152600060048201526024016104ac565b6001600160a01b0382166106055760405163ec442f0560e01b8152600060048201526024016104ac565b6105468383836107da565b6005546001600160a01b031633146104405760405163118cdaa760e01b81523360048201526024016104ac565b6001600160a01b0382166106675760405163ec442f0560e01b8152600060048201526024016104ac565b61042a600083836107da565b61053633826106cf565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166106f957604051634b637e8f60e11b8152600060048201526024016104ac565b61042a826000836107da565b6001600160a01b03841661072f5760405163e602df0560e01b8152600060048201526024016104ac565b6001600160a01b03831661075957604051634a1406b160e11b8152600060048201526024016104ac565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156105ab57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516107cc91815260200190565b60405180910390a350505050565b6001600160a01b0383166108055780600260008282546107fa9190610a7c565b909155506108779050565b6001600160a01b038316600090815260208190526040902054818110156108585760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016104ac565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610893576002805482900390556108b2565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516108f791815260200190565b60405180910390a3505050565b600060208083528351808285015260005b8181101561093157858101830151858201604001528201610915565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461096957600080fd5b919050565b6000806040838503121561098157600080fd5b61098a83610952565b946020939093013593505050565b6000806000606084860312156109ad57600080fd5b6109b684610952565b92506109c460208501610952565b9150604084013590509250925092565b6000602082840312156109e657600080fd5b5035919050565b6000602082840312156109ff57600080fd5b610a0882610952565b9392505050565b60008060408385031215610a2257600080fd5b610a2b83610952565b9150610a3960208401610952565b90509250929050565b600181811c90821680610a5657607f821691505b602082108103610a7657634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561031957634e487b7160e01b600052601160045260246000fdfea2646970667358221220628f9e2eb986df63d7fb4ab99936b8bfe8f725427eaffba971d872ea9e6e666864736f6c63430008130033",
    "sourceMap": "1012:1229:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2428:89:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4647:186;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:11;;1162:22;1144:41;;1132:2;1117:18;4647:186:4;1004:187:11;3498:97:4;3576:12;;3498:97;;;1342:25:11;;;1330:2;1315:18;3498:97:4;1196:177:11;5393:244:4;;;;;;:::i;:::-;;:::i;3356:82::-;;;3429:2;1853:36:11;;1841:2;1826:18;3356:82:4;1711:184:11;6032:234:4;;;;;;:::i;:::-;;:::i;1896:339:10:-;;;;;;:::i;:::-;;:::i;1341:549::-;;;;;;:::i;:::-;;:::i;:::-;;3653:116:4;;;;;;:::i;:::-;-1:-1:-1;;;;;3744:18:4;3718:7;3744:18;;;;;;;;;;;;3653:116;2189:101:1;;;:::i;1021:158:6:-;;;;;;:::i;:::-;;:::i;1534:85:1:-;1606:6;;1534:85;;-1:-1:-1;;;;;1606:6:1;;;2422:51:11;;2410:2;2395:18;1534:85:1;2276:203:11;2630:93:4;;;:::i;6935:493::-;;;;;;:::i;:::-;;:::i;3964:178::-;;;;;;:::i;:::-;;:::i;4200:140::-;;;;;;:::i;:::-;;:::i;2439:215:1:-;;;;;;:::i;:::-;;:::i;2428:89:4:-;2473:13;2505:5;2498:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2428:89;:::o;4647:186::-;4720:4;720:10:8;4774:31:4;720:10:8;4790:7:4;4799:5;4774:8;:31::i;:::-;4822:4;4815:11;;;4647:186;;;;;:::o;5393:244::-;5480:4;720:10:8;5536:37:4;5552:4;720:10:8;5567:5:4;5536:15;:37::i;:::-;5583:26;5593:4;5599:2;5603:5;5583:9;:26::i;:::-;-1:-1:-1;5626:4:4;;5393:244;-1:-1:-1;;;;5393:244:4:o;6032:234::-;6120:4;720:10:8;6174:64:4;720:10:8;6190:7:4;6227:10;6199:25;720:10:8;6190:7:4;6199:9;:25::i;:::-;:38;;;;:::i;:::-;6174:8;:64::i;1896:339:10:-;1967:4;1427:13:1;:11;:13::i;:::-;-1:-1:-1;;;;;1985:17:10;::::1;1982:95;;2025:41;;-1:-1:-1::0;;;2025:41:10::1;;;;;;;;;;;1982:95;2100:1;2089:7;:12;2086:94;;2124:45;;-1:-1:-1::0;;;2124:45:10::1;;;;;;;;;;;2086:94;2189:18;2195:3;2199:7;2189:5;:18::i;:::-;-1:-1:-1::0;2224:4:10::1;1896:339:::0;;;;:::o;1341:549::-;1427:13:1;:11;:13::i;:::-;1541:10:10::1;1513:15;3744:18:4::0;;;;;;;;;;;1566:12:10;1562:94:::1;;1600:45;;-1:-1:-1::0;;;1600:45:10::1;;;;;;;;;;;1562:94;1679:7;1669;:17;1665:105;;;1708:51;;-1:-1:-1::0;;;1708:51:10::1;;;;;;;;;;;1665:105;1779:19;1790:7;1779:10;:19::i;:::-;1398:492;1341:549:::0;:::o;2189:101:1:-;1427:13;:11;:13::i;:::-;2253:30:::1;2280:1;2253:18;:30::i;:::-;2189:101::o:0;1021:158:6:-;1096:45;1112:7;720:10:8;1135:5:6;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;2630:93:4:-;2677:13;2709:7;2702:14;;;;;:::i;6935:493::-;7030:4;720:10:8;7030:4:4;7111:25;720:10:8;7128:7:4;7111:9;:25::i;:::-;7084:52;;7169:17;7150:16;:36;7146:148;;;7209:74;;-1:-1:-1;;;7209:74:4;;-1:-1:-1;;;;;3581:32:11;;7209:74:4;;;3563:51:11;3630:18;;;3623:34;;;3673:18;;;3666:34;;;3536:18;;7209:74:4;;;;;;;;7146:148;7327:62;7336:5;7343:7;7371:17;7352:16;:36;7327:8;:62::i;3964:178::-;4033:4;720:10:8;4087:27:4;720:10:8;4104:2:4;4108:5;4087:9;:27::i;4200:140::-;-1:-1:-1;;;;;4306:18:4;;;4280:7;4306:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4200:140::o;2439:215:1:-;1427:13;:11;:13::i;:::-;-1:-1:-1;;;;;2523:22:1;::::1;2519:91;;2568:31;::::0;-1:-1:-1;;;2568:31:1;;2596:1:::1;2568:31;::::0;::::1;2422:51:11::0;2395:18;;2568:31:1::1;2276:203:11::0;2519:91:1::1;2619:28;2638:8;2619:18;:28::i;:::-;2439:215:::0;:::o;11020:136:4:-;11112:37;11121:5;11128:7;11137:5;11144:4;11112:8;:37::i;:::-;11020:136;;;:::o;12715:477::-;12814:24;12841:25;12851:5;12858:7;12841:9;:25::i;:::-;12814:52;;-1:-1:-1;;12880:16:4;:37;12876:310;;12956:5;12937:16;:24;12933:130;;;12988:60;;-1:-1:-1;;;12988:60:4;;-1:-1:-1;;;;;3581:32:11;;12988:60:4;;;3563:51:11;3630:18;;;3623:34;;;3673:18;;;3666:34;;;3536:18;;12988:60:4;3361:345:11;12933:130:4;13104:57;13113:5;13120:7;13148:5;13129:16;:24;13155:5;13104:8;:57::i;:::-;12804:388;12715:477;;;:::o;7801:300::-;-1:-1:-1;;;;;7884:18:4;;7880:86;;7925:30;;-1:-1:-1;;;7925:30:4;;7952:1;7925:30;;;2422:51:11;2395:18;;7925:30:4;2276:203:11;7880:86:4;-1:-1:-1;;;;;7979:16:4;;7975:86;;8018:32;;-1:-1:-1;;;8018:32:4;;8047:1;8018:32;;;2422:51:11;2395:18;;8018:32:4;2276:203:11;7975:86:4;8070:24;8078:4;8084:2;8088:5;8070:7;:24::i;1692:162:1:-;1606:6;;-1:-1:-1;;;;;1606:6:1;720:10:8;1751:23:1;1747:101;;1797:40;;-1:-1:-1;;;1797:40:1;;720:10:8;1797:40:1;;;2422:51:11;2395:18;;1797:40:1;2276:203:11;9859:208:4;-1:-1:-1;;;;;9929:21:4;;9925:91;;9973:32;;-1:-1:-1;;;9973:32:4;;10002:1;9973:32;;;2422:51:11;2395:18;;9973:32:4;2276:203:11;9925:91:4;10025:35;10041:1;10045:7;10054:5;10025:7;:35::i;618:87:6:-;672:26;720:10:8;692:5:6;672;:26::i;2808:187:1:-;2900:6;;;-1:-1:-1;;;;;2916:17:1;;;-1:-1:-1;;;;;;2916:17:1;;;;;;;2948:40;;2900:6;;;2916:17;2900:6;;2948:40;;2881:16;;2948:40;2871:124;2808:187;:::o;10392:206:4:-;-1:-1:-1;;;;;10462:21:4;;10458:89;;10506:30;;-1:-1:-1;;;10506:30:4;;10533:1;10506:30;;;2422:51:11;2395:18;;10506:30:4;2276:203:11;10458:89:4;10556:35;10564:7;10581:1;10585:5;10556:7;:35::i;12004:432::-;-1:-1:-1;;;;;12116:19:4;;12112:89;;12158:32;;-1:-1:-1;;;12158:32:4;;12187:1;12158:32;;;2422:51:11;2395:18;;12158:32:4;2276:203:11;12112:89:4;-1:-1:-1;;;;;12214:21:4;;12210:90;;12258:31;;-1:-1:-1;;;12258:31:4;;12286:1;12258:31;;;2422:51:11;2395:18;;12258:31:4;2276:203:11;12210:90:4;-1:-1:-1;;;;;12309:18:4;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;12354:76;;;;12404:7;-1:-1:-1;;;;;12388:31:4;12397:5;-1:-1:-1;;;;;12388:31:4;;12413:5;12388:31;;;;1342:25:11;;1330:2;1315:18;;1196:177;12388:31:4;;;;;;;;12004:432;;;;:::o;8409:1107::-;-1:-1:-1;;;;;8498:18:4;;8494:540;;8650:5;8634:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;8494:540:4;;-1:-1:-1;8494:540:4;;-1:-1:-1;;;;;8708:15:4;;8686:19;8708:15;;;;;;;;;;;8741:19;;;8737:115;;;8787:50;;-1:-1:-1;;;8787:50:4;;-1:-1:-1;;;;;3581:32:11;;8787:50:4;;;3563:51:11;3630:18;;;3623:34;;;3673:18;;;3666:34;;;3536:18;;8787:50:4;3361:345:11;8737:115:4;-1:-1:-1;;;;;8972:15:4;;:9;:15;;;;;;;;;;8990:19;;;;8972:37;;8494:540;-1:-1:-1;;;;;9048:16:4;;9044:425;;9211:12;:21;;;;;;;9044:425;;;-1:-1:-1;;;;;9422:13:4;;:9;:13;;;;;;;;;;:22;;;;;;9044:425;9499:2;-1:-1:-1;;;;;9484:25:4;9493:4;-1:-1:-1;;;;;9484:25:4;;9503:5;9484:25;;;;1342::11;;1330:2;1315:18;;1196:177;9484:25:4;;;;;;;;8409:1107;;;:::o;14:548:11:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:11;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:11:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:180::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;-1:-1:-1;2051:23:11;;1900:180;-1:-1:-1;1900:180:11:o;2085:186::-;2144:6;2197:2;2185:9;2176:7;2172:23;2168:32;2165:52;;;2213:1;2210;2203:12;2165:52;2236:29;2255:9;2236:29;:::i;:::-;2226:39;2085:186;-1:-1:-1;;;2085:186:11:o;2484:260::-;2552:6;2560;2613:2;2601:9;2592:7;2588:23;2584:32;2581:52;;;2629:1;2626;2619:12;2581:52;2652:29;2671:9;2652:29;:::i;:::-;2642:39;;2700:38;2734:2;2723:9;2719:18;2700:38;:::i;:::-;2690:48;;2484:260;;;;;:::o;2749:380::-;2828:1;2824:12;;;;2871;;;2892:61;;2946:4;2938:6;2934:17;2924:27;;2892:61;2999:2;2991:6;2988:14;2968:18;2965:38;2962:161;;3045:10;3040:3;3036:20;3033:1;3026:31;3080:4;3077:1;3070:15;3108:4;3105:1;3098:15;2962:161;;2749:380;;;:::o;3134:222::-;3199:9;;;3220:10;;;3217:133;;;3272:10;3267:3;3263:20;3260:1;3253:31;3307:4;3304:1;3297:15;3335:4;3332:1;3325:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "burnFrom(address,uint256)": "79cc6790",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "increaseAllowance(address,uint256)": "39509351",
    "mint(address,uint256)": "40c10f19",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"DecentralizedStableCoin__BurnAmountExceedsBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DecentralizedStableCoin__MustBeMoreThanZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DecentralizedStableCoin__NotZeroAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"ERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `requestedDecrease`. NOTE: Although this function is designed to avoid double spending with {approval}, it can still be frontrunned, preventing any attempt of allowance reduction.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/DecentralizedStableCoin.sol\":\"DecentralizedStableCoin\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0x35b70c1f89b9bd6291182fe550499c6ac42a410c1eb19f0668f87147f339b0a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7129da5d478d04c7b3ad121f0f84310b12a6def55ba906caa3775db676aceaa\",\"dweb:/ipfs/QmPpVwyjxnjFRS4CsHMr3STwBohAxLUwxgtu3gG93m7ybB\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x65f8f2e155906c577234df623982489c643261b29aa629a1506a480d85925473\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5de395c5805ddefd412e760200c76572e819a4e037163b5242de960aa42fc58f\",\"dweb:/ipfs/QmefoWnSj4uEGmuoT7zWedHGQGSMeZnMkWVX253tvRM9VK\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa6e9993c14f239cfb1fd4ca225f702136937ac82564321b71904165439294fa6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7422f196280085c3c87a6762c52c19e0ff8f05ecd353f003d31dc8f6d7a47b40\",\"dweb:/ipfs/QmaeiCttNWvaBvx1Xm9Rpqi9PjWqQHCjja4vwxbfjh7AhW\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x446f5eba28390de7608b93345376c1144758ab48783c26df8aa14b6f2a7987bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://701c9ebd54d50d7508efe7eb253cd50d4fc9fdbd161db886ae889d0e3487242e\",\"dweb:/ipfs/QmYF5uh258PwhgxYMZULiyG8b8RN4SBAbU7igQGyfe9QnB\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x4dffdbf042789b8741c8b910d796a62a2949808bdd79001a794f05a3d345161b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4311a1011f68f843de49f853121ee63173404a5086d15a6f21cdb75b14b3dae2\",\"dweb:/ipfs/QmZA2s76KLgUmHnRUgnrohaGwizJTfqNY2bkByWFjY68tL\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x93143932d71fb23e868494499eaa4112a75a60c9d472c3ebbe9f64b5d2900195\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aaeb077f10f0a5255645914bfe7f3c7784e4e62637fcf19e5553ff59708c38fd\",\"dweb:/ipfs/QmViQfyQ5fu1yU4vt1n76tQRRwrGxx5kdQTYjCzSn5UNpD\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x639f180f9bedd48998c68f1bf4f8d01b37a4573bc496acb04a55308c6de0045c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ff2313c66e4e14d167aae923b38509ec68dcaa281d2314f45b527139d33d4af\",\"dweb:/ipfs/QmU7aik96EmKeG8feBbQZ8BufngtYB6guGTkZoX5umP73i\"]},\"src/DecentralizedStableCoin.sol\":{\"keccak256\":\"0x46f1b8cb3ec5769f43287d6dc8da61cd77968ad93ca7f7db9b03350a6a5e7d76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2d87377dd1c289564a9ad5f34664d529cb0905ef5750acfde2c86f59308dbbf\",\"dweb:/ipfs/QmQpcqGWDtrUar23hN3vNaerEHjnJ59prEZYE9Khsoc2vk\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DecentralizedStableCoin__BurnAmountExceedsBalance"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DecentralizedStableCoin__MustBeMoreThanZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DecentralizedStableCoin__NotZeroAddress"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "currentAllowance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "requestedDecrease",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC20FailedDecreaseAllowance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "allowance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC20InsufficientAllowance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC20InsufficientBalance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "approver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidApprover"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidReceiver"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidSender"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidSpender"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableInvalidOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableUnauthorizedAccount"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burnFrom"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "requestedDecrease",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "burnFrom(address,uint256)": {
            "details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `requestedDecrease`. NOTE: Although this function is designed to avoid double spending with {approval}, it can still be frontrunned, preventing any attempt of allowance reduction."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/DecentralizedStableCoin.sol": "DecentralizedStableCoin"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0x35b70c1f89b9bd6291182fe550499c6ac42a410c1eb19f0668f87147f339b0a0",
        "urls": [
          "bzz-raw://d7129da5d478d04c7b3ad121f0f84310b12a6def55ba906caa3775db676aceaa",
          "dweb:/ipfs/QmPpVwyjxnjFRS4CsHMr3STwBohAxLUwxgtu3gG93m7ybB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x65f8f2e155906c577234df623982489c643261b29aa629a1506a480d85925473",
        "urls": [
          "bzz-raw://5de395c5805ddefd412e760200c76572e819a4e037163b5242de960aa42fc58f",
          "dweb:/ipfs/QmefoWnSj4uEGmuoT7zWedHGQGSMeZnMkWVX253tvRM9VK"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa6e9993c14f239cfb1fd4ca225f702136937ac82564321b71904165439294fa6",
        "urls": [
          "bzz-raw://7422f196280085c3c87a6762c52c19e0ff8f05ecd353f003d31dc8f6d7a47b40",
          "dweb:/ipfs/QmaeiCttNWvaBvx1Xm9Rpqi9PjWqQHCjja4vwxbfjh7AhW"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x446f5eba28390de7608b93345376c1144758ab48783c26df8aa14b6f2a7987bc",
        "urls": [
          "bzz-raw://701c9ebd54d50d7508efe7eb253cd50d4fc9fdbd161db886ae889d0e3487242e",
          "dweb:/ipfs/QmYF5uh258PwhgxYMZULiyG8b8RN4SBAbU7igQGyfe9QnB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "keccak256": "0x4dffdbf042789b8741c8b910d796a62a2949808bdd79001a794f05a3d345161b",
        "urls": [
          "bzz-raw://4311a1011f68f843de49f853121ee63173404a5086d15a6f21cdb75b14b3dae2",
          "dweb:/ipfs/QmZA2s76KLgUmHnRUgnrohaGwizJTfqNY2bkByWFjY68tL"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x93143932d71fb23e868494499eaa4112a75a60c9d472c3ebbe9f64b5d2900195",
        "urls": [
          "bzz-raw://aaeb077f10f0a5255645914bfe7f3c7784e4e62637fcf19e5553ff59708c38fd",
          "dweb:/ipfs/QmViQfyQ5fu1yU4vt1n76tQRRwrGxx5kdQTYjCzSn5UNpD"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x639f180f9bedd48998c68f1bf4f8d01b37a4573bc496acb04a55308c6de0045c",
        "urls": [
          "bzz-raw://4ff2313c66e4e14d167aae923b38509ec68dcaa281d2314f45b527139d33d4af",
          "dweb:/ipfs/QmU7aik96EmKeG8feBbQZ8BufngtYB6guGTkZoX5umP73i"
        ],
        "license": "MIT"
      },
      "src/DecentralizedStableCoin.sol": {
        "keccak256": "0x46f1b8cb3ec5769f43287d6dc8da61cd77968ad93ca7f7db9b03350a6a5e7d76",
        "urls": [
          "bzz-raw://b2d87377dd1c289564a9ad5f34664d529cb0905ef5750acfde2c86f59308dbbf",
          "dweb:/ipfs/QmQpcqGWDtrUar23hN3vNaerEHjnJ59prEZYE9Khsoc2vk"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/DecentralizedStableCoin.sol",
    "id": 1691,
    "exportedSymbols": {
      "Context": [
        1154
      ],
      "DecentralizedStableCoin": [
        1690
      ],
      "ERC20": [
        982
      ],
      "ERC20Burnable": [
        1106
      ],
      "Ownable": [
        178
      ]
    },
    "nodeType": "SourceUnit",
    "src": "489:1752:10",
    "nodes": [
      {
        "id": 1584,
        "nodeType": "PragmaDirective",
        "src": "489:24:10",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".18"
        ]
      },
      {
        "id": 1587,
        "nodeType": "ImportDirective",
        "src": "515:102:10",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1691,
        "sourceUnit": 1107,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1585,
              "name": "ERC20Burnable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1106,
              "src": "523:13:10",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 1586,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 982,
              "src": "538:5:10",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1589,
        "nodeType": "ImportDirective",
        "src": "618:67:10",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1691,
        "sourceUnit": 179,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1588,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 178,
              "src": "626:7:10",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1591,
        "nodeType": "ImportDirective",
        "src": "686:66:10",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "file": "@openzeppelin/contracts/utils/Context.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1691,
        "sourceUnit": 1155,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1590,
              "name": "Context",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1154,
              "src": "694:7:10",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1690,
        "nodeType": "ContractDefinition",
        "src": "1012:1229:10",
        "nodes": [
          {
            "id": 1597,
            "nodeType": "ErrorDefinition",
            "src": "1077:52:10",
            "nodes": [],
            "errorSelector": "6ac49da2",
            "name": "DecentralizedStableCoin__MustBeMoreThanZero",
            "nameLocation": "1083:43:10",
            "parameters": {
              "id": 1596,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1126:2:10"
            }
          },
          {
            "id": 1599,
            "nodeType": "ErrorDefinition",
            "src": "1134:58:10",
            "nodes": [],
            "errorSelector": "fe9c6abb",
            "name": "DecentralizedStableCoin__BurnAmountExceedsBalance",
            "nameLocation": "1140:49:10",
            "parameters": {
              "id": 1598,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1189:2:10"
            }
          },
          {
            "id": 1601,
            "nodeType": "ErrorDefinition",
            "src": "1197:48:10",
            "nodes": [],
            "errorSelector": "f3c190e9",
            "name": "DecentralizedStableCoin__NotZeroAddress",
            "nameLocation": "1203:39:10",
            "parameters": {
              "id": 1600,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1242:2:10"
            }
          },
          {
            "id": 1613,
            "nodeType": "FunctionDefinition",
            "src": "1251:84:10",
            "nodes": [],
            "body": {
              "id": 1612,
              "nodeType": "Block",
              "src": "1328:7:10",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "446563656e7472616c697a6564537461626c65436f696e",
                    "id": 1604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1273:25:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_4c892af6da595460367c882173cb78937ab02fe25724e2f1d5f68069c7732cf8",
                      "typeString": "literal_string \"DecentralizedStableCoin\""
                    },
                    "value": "DecentralizedStableCoin"
                  },
                  {
                    "hexValue": "445343",
                    "id": 1605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1299:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_43f14b70594ce2d8c53eb306c1e4efdb6729cfe75bf89574fb2d9f9db7c097df",
                      "typeString": "literal_string \"DSC\""
                    },
                    "value": "DSC"
                  }
                ],
                "id": 1606,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1603,
                  "name": "ERC20",
                  "nameLocations": [
                    "1266:5:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 982,
                  "src": "1266:5:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "1266:39:10"
              },
              {
                "arguments": [
                  {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1608,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1144,
                      "src": "1314:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 1609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1314:12:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1610,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1607,
                  "name": "Ownable",
                  "nameLocations": [
                    "1306:7:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 178,
                  "src": "1306:7:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "1306:21:10"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 1602,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1263:2:10"
            },
            "returnParameters": {
              "id": 1611,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1328:0:10"
            },
            "scope": 1690,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1651,
            "nodeType": "FunctionDefinition",
            "src": "1341:549:10",
            "nodes": [],
            "body": {
              "id": 1650,
              "nodeType": "Block",
              "src": "1398:492:10",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    1622
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1622,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "1521:7:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1650,
                      "src": "1513:15:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1621,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1513:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1627,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1624,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1541:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1545:6:10",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1541:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1623,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 494,
                      "src": "1531:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 1626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1531:21:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1513:39:10"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1628,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1615,
                      "src": "1566:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1629,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1577:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1566:12:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1635,
                  "nodeType": "IfStatement",
                  "src": "1562:94:10",
                  "trueBody": {
                    "id": 1634,
                    "nodeType": "Block",
                    "src": "1579:77:10",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1631,
                            "name": "DecentralizedStableCoin__MustBeMoreThanZero",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1597,
                            "src": "1600:43:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1600:45:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1633,
                        "nodeType": "RevertStatement",
                        "src": "1593:52:10"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1636,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1622,
                      "src": "1669:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1637,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1615,
                      "src": "1679:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1669:17:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1643,
                  "nodeType": "IfStatement",
                  "src": "1665:105:10",
                  "trueBody": {
                    "id": 1642,
                    "nodeType": "Block",
                    "src": "1687:83:10",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1639,
                            "name": "DecentralizedStableCoin__BurnAmountExceedsBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1599,
                            "src": "1708:49:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1708:51:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1641,
                        "nodeType": "RevertStatement",
                        "src": "1701:58:10"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1647,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1615,
                        "src": "1790:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1644,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1779:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_DecentralizedStableCoin_$1690_$",
                          "typeString": "type(contract super DecentralizedStableCoin)"
                        }
                      },
                      "id": 1646,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1785:4:10",
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1084,
                      "src": "1779:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1779:19:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1649,
                  "nodeType": "ExpressionStatement",
                  "src": "1779:19:10"
                }
              ]
            },
            "baseFunctions": [
              1084
            ],
            "functionSelector": "42966c68",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1619,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1618,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1388:9:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 89,
                  "src": "1388:9:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "1388:9:10"
              }
            ],
            "name": "burn",
            "nameLocation": "1350:4:10",
            "overrides": {
              "id": 1617,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1379:8:10"
            },
            "parameters": {
              "id": 1616,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1615,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1363:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1651,
                  "src": "1355:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1614,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1355:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1354:17:10"
            },
            "returnParameters": {
              "id": 1620,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1398:0:10"
            },
            "scope": 1690,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1689,
            "nodeType": "FunctionDefinition",
            "src": "1896:339:10",
            "nodes": [],
            "body": {
              "id": 1688,
              "nodeType": "Block",
              "src": "1972:263:10",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1662,
                      "name": "_to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1653,
                      "src": "1985:3:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2000:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1992:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1663,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1992:7:10",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1666,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1992:10:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1985:17:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1672,
                  "nodeType": "IfStatement",
                  "src": "1982:95:10",
                  "trueBody": {
                    "id": 1671,
                    "nodeType": "Block",
                    "src": "2004:73:10",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1668,
                            "name": "DecentralizedStableCoin__NotZeroAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1601,
                            "src": "2025:39:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2025:41:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1670,
                        "nodeType": "RevertStatement",
                        "src": "2018:48:10"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1673,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1655,
                      "src": "2089:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1674,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2100:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2089:12:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1680,
                  "nodeType": "IfStatement",
                  "src": "2086:94:10",
                  "trueBody": {
                    "id": 1679,
                    "nodeType": "Block",
                    "src": "2103:77:10",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1676,
                            "name": "DecentralizedStableCoin__MustBeMoreThanZero",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1597,
                            "src": "2124:43:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1677,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2124:45:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1678,
                        "nodeType": "RevertStatement",
                        "src": "2117:52:10"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1682,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1653,
                        "src": "2195:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1683,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1655,
                        "src": "2199:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1681,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 822,
                      "src": "2189:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2189:18:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1685,
                  "nodeType": "ExpressionStatement",
                  "src": "2189:18:10"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2224:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1661,
                  "id": 1687,
                  "nodeType": "Return",
                  "src": "2217:11:10"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1658,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1657,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1949:9:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 89,
                  "src": "1949:9:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "1949:9:10"
              }
            ],
            "name": "mint",
            "nameLocation": "1905:4:10",
            "parameters": {
              "id": 1656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1653,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1918:3:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1689,
                  "src": "1910:11:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1652,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1910:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1655,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1931:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1689,
                  "src": "1923:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1654,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1923:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1909:30:10"
            },
            "returnParameters": {
              "id": 1661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1660,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1689,
                  "src": "1967:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1659,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1967:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1966:6:10"
            },
            "scope": 1690,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1592,
              "name": "ERC20Burnable",
              "nameLocations": [
                "1048:13:10"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1106,
              "src": "1048:13:10"
            },
            "id": 1593,
            "nodeType": "InheritanceSpecifier",
            "src": "1048:13:10"
          },
          {
            "baseName": {
              "id": 1594,
              "name": "Ownable",
              "nameLocations": [
                "1063:7:10"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 178,
              "src": "1063:7:10"
            },
            "id": 1595,
            "nodeType": "InheritanceSpecifier",
            "src": "1063:7:10"
          }
        ],
        "canonicalName": "DecentralizedStableCoin",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1690,
          178,
          1106,
          982,
          220,
          1132,
          1060,
          1154
        ],
        "name": "DecentralizedStableCoin",
        "nameLocation": "1021:23:10",
        "scope": 1691,
        "usedErrors": [
          59,
          64,
          190,
          195,
          200,
          209,
          214,
          219,
          428,
          1597,
          1599,
          1601
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 10
}